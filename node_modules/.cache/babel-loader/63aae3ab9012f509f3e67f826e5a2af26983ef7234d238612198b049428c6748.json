{"ast":null,"code":"var _jsxFileName = \"/home/yorick/my-page/src/components/objectDetector/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport \"@tensorflow/tfjs-backend-cpu\";\n// import \"@tensorflow/tfjs-backend-webgl\";\nimport * as cocoSsd from \"@tensorflow-models/coco-ssd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ObjectDetectorContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c = ObjectDetectorContainer;\nconst DetectorContainer = styled.div`\n  min-width: 200px;\n  height: 700px;\n  border: 3px solid #fff;\n  border-radius: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n`;\n_c2 = DetectorContainer;\nconst TargetImg = styled.img`\n  height: 100%;\n`;\n_c3 = TargetImg;\nconst HiddenFileInput = styled.input`\n  display: none;\n`;\n_c4 = HiddenFileInput;\nconst SelectButton = styled.button`\n  padding: 7px 10px;\n  border: 2px solid transparent;\n  background-color: #fff;\n  color: #0a0f22;\n  font-size: 16px;\n  font-weight: 500;\n  outline: none;\n  margin-top: 2em;\n  cursor: pointer;\n  transition: all 260ms ease-in-out;\n\n  &:hover {\n    background-color: transparent;\n    border: 2px solid #fff;\n    color: #fff;\n  }\n`;\n_c5 = SelectButton;\nconst TargetBox = styled.div`\n  position: absolute;\n  left: ${({\n  x\n}) => x + \"px\"};\n  top: ${({\n  y\n}) => y + \"px\"};\n  width: ${({\n  width\n}) => width + \"px\"};\n  height: ${({\n  height\n}) => height + \"px\"};\n  border: 4px solid #1ac71a;\n  background-color: transparent;\n  z-index: 20;\n\n  &::before {\n    content: \"${({\n  classType,\n  score\n}) => `${classType} ${score.toFixed(1)}%`}\";\n    color: #1ac71a;\n    font-weight: 500;\n    font-size: 17px;\n    position: absolute;\n    top: -1.5em;\n    left: -5px;\n  }\n`;\n_c6 = TargetBox;\nexport function ObjectDetector() {\n  _s();\n  const fileInputRef = useRef(null);\n  const imageRef = useRef(null);\n  const [imgData, setImgData] = useState(null);\n  const [predictions, setPredictions] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const isEmptyPredictions = !predictions || predictions.length === 0;\n  const openFilePicker = () => {\n    var _fileInputRef$current;\n    (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n  };\n  const normalizePredictions = (predictions, imgSize) => {\n    if (!predictions || !imgSize || !imageRef.current) return [];\n    const imgWidth = imageRef.current.width;\n    const imgHeight = imageRef.current.height;\n    return predictions.map(prediction => {\n      const [oldX, oldY, oldWidth, oldHeight] = prediction.bbox;\n      const x = oldX * imgWidth / imgSize.width;\n      const y = oldY * imgHeight / imgSize.height;\n      const width = oldWidth * imgWidth / imgSize.width;\n      const height = oldHeight * imgHeight / imgSize.height;\n      return {\n        class: prediction.class,\n        score: prediction.score,\n        bbox: [x, y, width, height]\n      };\n    });\n  };\n  const detectObjectsOnImage = async (imageElement, imgSize) => {\n    const model = await cocoSsd.load();\n    const predictions = await model.detect(imageElement, 6);\n    const normalized = normalizePredictions(predictions, imgSize);\n    setPredictions(normalized);\n    console.log(\"Predictions: \", predictions);\n  };\n  const readImage = file => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.onload = () => resolve(fileReader.result);\n      fileReader.onerror = () => reject(fileReader.error);\n      fileReader.readAsDataURL(file);\n    });\n  };\n  const onSelectImage = async e => {\n    var _e$target$files;\n    setPredictions([]);\n    setLoading(true);\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (!file) return;\n    const imgData = await readImage(file);\n    setImgData(imgData);\n    const imageElement = document.createElement(\"img\");\n    imageElement.src = imgData;\n    imageElement.onload = async () => {\n      const imgSize = {\n        width: imageElement.width,\n        height: imageElement.height\n      };\n      await detectObjectsOnImage(imageElement, imgSize);\n      setLoading(false);\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(ObjectDetectorContainer, {\n    children: [/*#__PURE__*/_jsxDEV(DetectorContainer, {\n      children: [imgData && /*#__PURE__*/_jsxDEV(TargetImg, {\n        src: imgData,\n        ref: imageRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this), !isEmptyPredictions && predictions.map((prediction, idx) => /*#__PURE__*/_jsxDEV(TargetBox, {\n        x: prediction.bbox[0],\n        y: prediction.bbox[1],\n        width: prediction.bbox[2],\n        height: prediction.bbox[3],\n        classType: prediction.class,\n        score: prediction.score * 100\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HiddenFileInput, {\n      type: \"file\",\n      ref: fileInputRef,\n      onChange: onSelectImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SelectButton, {\n      onClick: openFilePicker,\n      children: isLoading ? \"Recognizing...\" : \"Select Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n_s(ObjectDetector, \"0F6IHk0iAC0fXk38QmgjuiDnL9Y=\");\n_c7 = ObjectDetector;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"ObjectDetectorContainer\");\n$RefreshReg$(_c2, \"DetectorContainer\");\n$RefreshReg$(_c3, \"TargetImg\");\n$RefreshReg$(_c4, \"HiddenFileInput\");\n$RefreshReg$(_c5, \"SelectButton\");\n$RefreshReg$(_c6, \"TargetBox\");\n$RefreshReg$(_c7, \"ObjectDetector\");","map":{"version":3,"names":["React","useRef","useState","styled","cocoSsd","jsxDEV","_jsxDEV","ObjectDetectorContainer","div","_c","DetectorContainer","_c2","TargetImg","img","_c3","HiddenFileInput","input","_c4","SelectButton","button","_c5","TargetBox","x","y","width","height","classType","score","toFixed","_c6","ObjectDetector","_s","fileInputRef","imageRef","imgData","setImgData","predictions","setPredictions","isLoading","setLoading","isEmptyPredictions","length","openFilePicker","_fileInputRef$current","current","click","normalizePredictions","imgSize","imgWidth","imgHeight","map","prediction","oldX","oldY","oldWidth","oldHeight","bbox","class","detectObjectsOnImage","imageElement","model","load","detect","normalized","console","log","readImage","file","Promise","resolve","reject","fileReader","FileReader","onload","result","onerror","error","readAsDataURL","onSelectImage","e","_e$target$files","target","files","document","createElement","src","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","idx","type","onChange","onClick","_c7","$RefreshReg$"],"sources":["/home/yorick/my-page/src/components/objectDetector/index.tsx"],"sourcesContent":["import React, { useRef, useState, ChangeEvent } from \"react\";\nimport styled from \"styled-components\";\n\nimport \"@tensorflow/tfjs-backend-cpu\";\n// import \"@tensorflow/tfjs-backend-webgl\";\nimport * as cocoSsd from \"@tensorflow-models/coco-ssd\";\nimport { ObjectDetection } from \"@tensorflow-models/coco-ssd\";\n\nconst ObjectDetectorContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst DetectorContainer = styled.div`\n  min-width: 200px;\n  height: 700px;\n  border: 3px solid #fff;\n  border-radius: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n`;\n\nconst TargetImg = styled.img`\n  height: 100%;\n`;\n\nconst HiddenFileInput = styled.input`\n  display: none;\n`;\n\nconst SelectButton = styled.button`\n  padding: 7px 10px;\n  border: 2px solid transparent;\n  background-color: #fff;\n  color: #0a0f22;\n  font-size: 16px;\n  font-weight: 500;\n  outline: none;\n  margin-top: 2em;\n  cursor: pointer;\n  transition: all 260ms ease-in-out;\n\n  &:hover {\n    background-color: transparent;\n    border: 2px solid #fff;\n    color: #fff;\n  }\n`;\n\nconst TargetBox = styled.div<{\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  classType: string;\n  score: number;\n}>`\n  position: absolute;\n  left: ${({ x }) => x + \"px\"};\n  top: ${({ y }) => y + \"px\"};\n  width: ${({ width }) => width + \"px\"};\n  height: ${({ height }) => height + \"px\"};\n  border: 4px solid #1ac71a;\n  background-color: transparent;\n  z-index: 20;\n\n  &::before {\n    content: \"${({ classType, score }) => `${classType} ${score.toFixed(1)}%`}\";\n    color: #1ac71a;\n    font-weight: 500;\n    font-size: 17px;\n    position: absolute;\n    top: -1.5em;\n    left: -5px;\n  }\n`;\n\ninterface Prediction {\n  bbox: [number, number, number, number];\n  class: string;\n  score: number;\n}\n\nexport function ObjectDetector() {\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\n  const imageRef = useRef<HTMLImageElement | null>(null);\n\n  const [imgData, setImgData] = useState<string | null>(null);\n  const [predictions, setPredictions] = useState<Prediction[]>([]);\n  const [isLoading, setLoading] = useState(false);\n\n  const isEmptyPredictions = !predictions || predictions.length === 0;\n\n  const openFilePicker = () => {\n    fileInputRef.current?.click();\n  };\n\n  const normalizePredictions = (\n    predictions: cocoSsd.DetectedObject[],\n    imgSize: { width: number; height: number }\n  ): Prediction[] => {\n    if (!predictions || !imgSize || !imageRef.current) return [];\n\n    const imgWidth = imageRef.current.width;\n    const imgHeight = imageRef.current.height;\n\n    return predictions.map((prediction) => {\n      const [oldX, oldY, oldWidth, oldHeight] = prediction.bbox;\n\n      const x = (oldX * imgWidth) / imgSize.width;\n      const y = (oldY * imgHeight) / imgSize.height;\n      const width = (oldWidth * imgWidth) / imgSize.width;\n      const height = (oldHeight * imgHeight) / imgSize.height;\n\n      return {\n        class: prediction.class,\n        score: prediction.score,\n        bbox: [x, y, width, height],\n      };\n    });\n  };\n\n  const detectObjectsOnImage = async (\n    imageElement: HTMLImageElement,\n    imgSize: { width: number; height: number }\n  ) => {\n    const model: ObjectDetection = await cocoSsd.load();\n    const predictions = await model.detect(imageElement, 6);\n    const normalized = normalizePredictions(predictions, imgSize);\n    setPredictions(normalized);\n    console.log(\"Predictions: \", predictions);\n  };\n\n  const readImage = (file: File): Promise<string> => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.onload = () => resolve(fileReader.result as string);\n      fileReader.onerror = () => reject(fileReader.error);\n      fileReader.readAsDataURL(file);\n    });\n  };\n\n  const onSelectImage = async (e: ChangeEvent<HTMLInputElement>) => {\n    setPredictions([]);\n    setLoading(true);\n\n    const file = e.target.files?.[0];\n    if (!file) return;\n\n    const imgData = await readImage(file);\n    setImgData(imgData);\n\n    const imageElement = document.createElement(\"img\");\n    imageElement.src = imgData;\n\n    imageElement.onload = async () => {\n      const imgSize = {\n        width: imageElement.width,\n        height: imageElement.height,\n      };\n      await detectObjectsOnImage(imageElement, imgSize);\n      setLoading(false);\n    };\n  };\n\n  return (\n    <ObjectDetectorContainer>\n      <DetectorContainer>\n        {imgData && <TargetImg src={imgData} ref={imageRef} />}\n        {!isEmptyPredictions &&\n          predictions.map((prediction, idx) => (\n            <TargetBox\n              key={idx}\n              x={prediction.bbox[0]}\n              y={prediction.bbox[1]}\n              width={prediction.bbox[2]}\n              height={prediction.bbox[3]}\n              classType={prediction.class}\n              score={prediction.score * 100}\n            />\n          ))}\n      </DetectorContainer>\n      <HiddenFileInput\n        type=\"file\"\n        ref={fileInputRef}\n        onChange={onSelectImage}\n      />\n      <SelectButton onClick={openFilePicker}>\n        {isLoading ? \"Recognizing...\" : \"Select Image\"}\n      </SelectButton>\n    </ObjectDetectorContainer>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}