/*! For license information please see main.b756038b.js.LICENSE.txt */
(()=>{var e={44:(e,t,n)=>{"use strict";n.d(t,{e:()=>u});var a=n(8804),r=n(4148),s=n(4974),o=n(7457),i=n(7892),c=n(3986),l=n(3290);const u=(0,i.op)({divNoNan_:function(e,t){let n=(0,r.YT)(e,"a","div"),i=(0,r.YT)(t,"b","div");[n,i]=(0,a.makeTypesMatch)(n,i);const u=(0,s.y)(n,i),d=(0,l.P)(u),h=(0,o.L)(i,d);return(0,c._)(h,d,u)}})},135:(e,t,n)=>{"use strict";n.d(t,{E:()=>c});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805);const c=(0,n(7892).op)({notEqual_:function(e,t){let n=(0,o.YT)(e,"a","notEqual","string_or_numeric"),c=(0,o.YT)(t,"b","notEqual","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.ylV,l)}})},191:(e,t,n)=>{"use strict";n.d(t,{R:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({sqrt_:function(e){const t={x:(0,s.YT)(e,"x","sqrt","float32")};return a.T2.runKernel(r.dFH,t)}})},208:(e,t,n)=>{"use strict";n.d(t,{P:()=>c});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805);const c=(0,n(7892).op)({squaredDifference_:function(e,t){let n=(0,o.YT)(e,"a","squaredDifference"),c=(0,o.YT)(t,"b","squaredDifference");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.Ddj,l,{})}})},259:(e,t,n)=>{"use strict";n.d(t,{r:()=>s});var a=n(9494),r=n(1426);function s(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",r.SA(e),new a.yl(e,t,n)}},261:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var a=n(2164),r=n(9554),s=n(7892),o=n(5583);const i=(0,s.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,i){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],l=arguments.length>6?arguments[6]:void 0,u=t,d=!1;3===t.rank&&(d=!0,u=(0,o.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={dy:u,filter:n},p={strides:s,pad:i,dimRoundingMode:l,dilations:c,inputShape:e},f=a.T2.runKernel(r.nVu,h,p);return d?(0,o.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},285:(e,t,n)=>{"use strict";n.d(t,{AQ:()=>S,CY:()=>h,Ej:()=>C,P8:()=>T,Rl:()=>I,Xf:()=>A,aG:()=>d,jf:()=>k,l3:()=>w,oR:()=>E,s5:()=>y,zV:()=>N});var a=n(6149),r=n(8032),s=n(1426),o=n(1042),i=n(7131),c=n(8046),l=n(5399);const u=4;async function d(e,t){const n=[],a=[],r=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let s=0;s<r.length;++s){const o=r[s],i=Array.isArray(e)?e[s].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error("Unsupported dtype in weight '".concat(o,"': ").concat(i.dtype));const c={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise(async e=>{const t=await i.bytes(),n=t.reduce((e,t)=>e+t.length,0)+u*t.length,a=new Uint8Array(n);let r=0;for(let s=0;s<t.length;s++){const e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);a.set(n,r),r+=u,a.set(e,r),r+=e.length}e(a)});a.push(e)}else a.push(i.data());null!=t&&(c.group=t),n.push(c)}return{data:b(await Promise.all(a)),specs:n}}function h(e,t){const n=new i.D(e),a={};let r=0;for(const s of t){const e=p(s,(e,t)=>n.slice(r+e,r+t));a[s.name]=m(s,n.slice(r,r+e)),r+=e}return a}function p(e,t){const n=(0,s.Ze)(e.shape);let a;if("quantization"in e){const t=e.quantization;a=o.i[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=u+new Uint32Array(t(e,e+u))[0];return e}a=o.i[e.dtype]}return n*a}async function f(e,t){const n=(0,s.Ze)(e.shape);let a;if("quantization"in e){const t=e.quantization;a=o.i[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=u+new Uint32Array(await t(e,e+u))[0];return e}a=o.i[e.dtype]}return n*a}function m(e,t){const n=e.name,i=e.dtype,c=e.shape,l=(0,s.Ze)(c);let d,h=0;if("quantization"in e){const a=e.quantization;if("uint8"===a.dtype||"uint16"===a.dtype){if(!("min"in a)||!("scale"in a))throw new Error("Weight ".concat(e.name," with quantization ").concat(a.dtype," ")+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==a.dtype)throw new Error("Weight ".concat(e.name," has unknown ")+"quantization dtype ".concat(a.dtype,". ")+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==i)throw new Error("Weight ".concat(e.name," is quantized with ").concat(a.dtype," ")+"which only supports weights of type float32 not ".concat(i,"."))}const r=o.i[a.dtype],s="uint8"===a.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===i)if("uint8"===a.dtype||"uint16"===a.dtype){d=new Float32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];d[e]=t*a.scale+a.min}}else{if("float16"!==a.dtype)throw new Error("Unsupported quantization type ".concat(a.dtype," ")+"for weight type float32.");{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return a=>{const r=new ArrayBuffer(4*a.length),s=new Uint32Array(r);for(let o=0;o<a.length;o++){const r=a[o],i=e[n[r>>10]+(1023&r)]+t[r>>10];s[o]=i}return new Float32Array(r)}}();d=e(s)}}else{if("int32"!==i)throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(i));if("uint8"!==a.dtype&&"uint16"!==a.dtype)throw new Error("Unsupported quantization type ".concat(a.dtype," ")+"for weight type int32.");d=new Int32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];d[e]=Math.round(t*a.scale+a.min)}}h+=l*r}else if("string"===i){const n=(0,s.Ze)(e.shape);d=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(h,h+u))[0];h+=u;const n=new Uint8Array(t.slice(h,h+e));d.push(n),h+=e}}else{const e=o.i[i];if("float32"===i)d=new Float32Array(t);else if("int32"===i)d=new Int32Array(t);else{if("bool"!==i){if("complex64"===i){d=new Float32Array(t);const e=new Float32Array(d.length/2),n=new Float32Array(d.length/2);for(let t=0;t<e.length;t++)e[t]=d[2*t],n[t]=d[2*t+1];const s=(0,r.O)(e,c,"float32"),o=(0,r.O)(n,c,"float32"),i=(0,a.f)(s,o);return s.dispose(),o.dispose(),i}throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(i))}d=new Uint8Array(t)}h+=l*e}return(0,r.O)(d,c,i)}async function g(e,t,n){let a=new Uint8Array(t);for(;a.byteLength<n;){const{done:t,value:r}=await e.read();if(t&&null==r){const e=n-a.byteLength;throw new Error("Reader is done but ".concat(e," bytes are still expected"))}const s=new Uint8Array(a.length+r.byteLength);s.set(a,0),s.set(new Uint8Array(r),a.length),a=s}return a.buffer}async function y(e,t){const n={},a=e.getReader();let r=new ArrayBuffer(0);for(const o of t){const e=await f(o,async(e,t)=>(r=await g(a,r,t),r.slice(e,t)));r=await g(a,r,e);const t=r.slice(0,e);r=r.slice(e);const i=m(o,t);if(n[o.name]=i,"webgpu"===(0,c.jz)()){const e=(0,c.Hs)();"uploadToGPU"in e&&(0,s.Ze)(i.shape)>=(0,l._K)().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(i.dataId)}}return n}function b(e){if(null===e)throw new Error("Invalid input value: ".concat(JSON.stringify(e)));let t=0;const n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: ".concat(e.constructor.name))});const a=new Uint8Array(t);let r=0;return n.forEach(e=>{a.set(new Uint8Array(e.buffer),r),r+=e.byteLength}),a.buffer}const v="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function x(e){return v?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function w(e){if(v)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let a=0,r=t.length;a<r;a++)n+=String.fromCharCode(t[a]);return btoa(n)}function k(e){if(v){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let a=0;a<t.length;++a)n.set([t.charCodeAt(a)],a);return n.buffer}function S(e){return i.D.join(e)}function T(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function N(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function I(e,t,n){const a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(a.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");a.weightSpecs=t,a.weightData=n}return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(a.initializerSignature=e.initializerSignature),a}async function C(e,t){let n,a;return null!=e.weightsManifest&&([n,a]=await t(e.weightsManifest)),I(e,n,a)}function E(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:x(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:x(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new i.D(e.weightData).byteLength}}function A(e){const t=[];for(const n of e)t.push(...n.weights);return t}},319:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,s.YT)(e,"x","step")},o={alpha:t};return a.T2.runKernel(r.pnw,n,o)}})},463:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({slice_:function(e,t,n){const o=(0,s.YT)(e,"x","slice","string_or_numeric");if(0===o.rank)throw new Error("Slicing scalar is not possible");const i={x:o},c={begin:t,size:n};return a.T2.runKernel(r.JiE,i,c)}})},551:()=>{},579:(e,t,n)=>{"use strict";e.exports=n(2799)},613:(e,t,n)=>{"use strict";n.d(t,{r:()=>i});var a=n(4148),r=n(1426),s=n(7892),o=n(5583);const i=(0,s.op)({squeeze_:function(e,t){const n=(0,a.YT)(e,"x","squeeze","string_or_numeric");return(0,o.t)(n,(0,r.gx)(n.shape,t).newShape)}})},803:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var a=n(2164),r=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({mul_:function(e,t){let n=(0,o.YT)(e,"a","mul"),i=(0,o.YT)(t,"b","mul");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.xu7,c)}})},827:(e,t,n)=>{"use strict";n.d(t,{I:()=>c});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805);const c=(0,n(7892).op)({lessEqual_:function(e,t){let n=(0,o.YT)(e,"a","lessEqual","string_or_numeric"),c=(0,o.YT)(t,"b","lessEqual","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.CwD,l)}})},843:(e,t,n)=>{"use strict";n.d(t,{Cf:()=>m,Op:()=>u,_5:()=>c,iP:()=>p,kr:()=>h,rY:()=>f,tA:()=>d,vQ:()=>l});var a=n(5399),r=n(7926),s=n(4124);const o=(0,r.m)("kernelRegistry",()=>new Map),i=(0,r.m)("gradRegistry",()=>new Map);function c(e,t){const n=g(e,t);return o.get(n)}function l(e){return i.get(e)}function u(e){const t=o.entries(),n=[];for(;;){const{done:a,value:r}=t.next();if(a)break;const[s,o]=r,[i]=s.split("_");i===e&&n.push(o)}return n}function d(e){const{kernelName:t,backendName:n}=e,a=g(t,n);o.has(a)&&s.i("The kernel '".concat(t,"' for backend ")+"'".concat(n,"' is already registered")),o.set(a,e)}function h(e){const{kernelName:t}=e;i.has(t)&&(0,a._K)().getBool("DEBUG")&&s.i("Overriding the gradient for '".concat(t,"'")),i.set(t,e)}function p(e,t){const n=g(e,t);if(!o.has(n))throw new Error("The kernel '".concat(e,"' for backend ")+"'".concat(t,"' is not registered"));o.delete(n)}function f(e){if(!i.has(e))throw new Error("The gradient '".concat(e,"' for backend is not registered"));i.delete(e)}function m(e,t){u(e).forEach(e=>{d(Object.assign({},e,{backendName:t}))})}function g(e,t){return"".concat(t,"_").concat(e)}},891:(e,t,n)=>{"use strict";n.d(t,{T:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,s.YT)(e,"x","max")},i={reductionIndices:t,keepDims:n};return a.T2.runKernel(r.VAI,o,i)}})},901:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s.j1)(e,"tensors","stack","string_or_numeric");o.vA(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&o.vA(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");const i=n,c={axis:t};return a.T2.runKernel(r.mM$,i,c)}})},983:(e,t,n)=>{"use strict";n.d(t,{F:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({acosh_:function(e){const t={x:(0,s.YT)(e,"x","acosh")};return a.T2.runKernel(r.PH8,t)}})},1011:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({neg_:function(e){const t={x:(0,s.YT)(e,"x","neg")};return a.T2.runKernel(r.l0G,t)}})},1042:(e,t,n)=>{"use strict";n.d(t,{i:()=>a});const a={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},1047:(e,t,n)=>{"use strict";n.d(t,{n:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({imag_:function(e){const t={input:(0,s.YT)(e,"input","imag")};return a.T2.runKernel(r.dv8,t)}})},1137:(e,t,n)=>{"use strict";n.d(t,{w:()=>s});var a=n(4148),r=n(1565);const s=(0,n(7892).op)({conv2dTranspose_:function(e,t,n,s,o,i){const c=(0,a.YT)(e,"x","conv2dTranspose"),l=(0,a.YT)(t,"filter","conv2dTranspose");return(0,r.v)(n,c,l,s,o,"NHWC",i)}})},1164:(e,t,n)=>{"use strict";n.d(t,{y:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({cosh_:function(e){const t={x:(0,s.YT)(e,"x","cosh","float32")};return a.T2.runKernel(r.MnK,t)}})},1194:(e,t,n)=>{"use strict";n.d(t,{H:()=>p});var a=n(1839),r=n(4148),s=n(7794),o=n(5462),i=n(5911),c=n(891),l=n(803),u=n(7892),d=n(7951),h=n(7382);const p=(0,u.op)({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=(0,r.YT)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and axis was ").concat(t));return(0,a._X)((e,n)=>{const a=(0,c.T)(e,t,!0),r=(0,d.j)(e,a),u=(0,d.j)((0,s.w)(r,"float32"),(0,i.R)((0,h.c)((0,o.o)(r),t,!0)));n([u]);return{value:u,gradFunc:(e,n)=>{const[a]=n,r=(0,o.o)(a);return(0,d.j)(e,(0,l.l)((0,h.c)(e,t,!0),r))}}})(n)}})},1231:(e,t,n)=>{"use strict";n.d(t,{Y:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({stridedSlice_:function(e,t,n,o){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,u=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,d=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const h={x:(0,s.YT)(e,"x","stridedSlice","string_or_numeric")},p={begin:t,end:n,strides:o,beginMask:i,endMask:c,ellipsisMask:l,newAxisMask:u,shrinkAxisMask:d};return a.T2.runKernel(r.UcO,h,p)}})},1234:()=>{},1386:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({log1p_:function(e){const t={x:(0,s.YT)(e,"x","log1p")};return a.T2.runKernel(r.Cg$,t)}})},1405:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var a=n(2164),r=n(9554),s=n(1426);const o=(0,n(7892).op)({ifft_:function(e){(0,s.vA)("complex64"===e.dtype,()=>"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(e.dtype,"."));const t={input:e};return a.T2.runKernel(r.OAQ,t)}})},1426:(e,t,n)=>{"use strict";function a(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,i(e,t,n)}function r(e,t){if(e.length!==t.length)throw new Error("Array sizes must match to be shuffled together "+"First array length was ".concat(e.length)+"Second array length was ".concat(t.length));let n=e.length,a=0;for(;n>0;)a=Math.random()*n|0,n--,i(e,n,a),i(t,n,a)}function s(e,t,n){return Math.max(e,Math.min(t,n))}function o(e){return e%2===0?e:e+1}function i(e,t,n){const a=e[t];e[t]=e[n],e[n]=a}function c(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function l(e,t){const n=Math.random();return t*n+(1-n)*e}function u(e,t){let n=0;for(let a=0;a<e.length;a++){const r=Number(e[a])-Number(t[a]);n+=r*r}return n}function d(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function h(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";d(y(e,t),()=>n+" Shapes ".concat(e," and ").concat(t," must match"))}function p(e){d(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function f(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function m(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function b(e){return e%1===0}function v(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function x(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return a(t),t}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function S(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return new Promise((r,s)=>{let o=0;const i=()=>{if(e())return void r();o++;const c=t(o);null!=n&&o>=n?s():null!=a?a(i,c):setTimeout(i,c)};i()})}function T(e,t){let n=1,a=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==a)throw Error("Shapes can only have 1 implicit size. "+"Found -1 at dim ".concat(a," and dim ").concat(s));a=s}else if(e[s]<0)throw Error("Shapes can not be < 0. Found ".concat(e[s]," at dim ").concat(s));if(-1===a){if(t>0&&t!==n)throw Error("Size(".concat(t,") must match the product of shape ").concat(e));return e}if(0===n)throw Error("Cannot infer the missing size in [".concat(e,"] when ")+"there are 0 elements");if(t%n!==0)throw Error("The implicit shape can't be a fractional number. "+"Got ".concat(t," / ").concat(n));const r=e.slice();return r[a]=t/n,r}function N(e,t){const n=t.length;return d((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>"All values in axis param must be in range [-".concat(n,", ").concat(n,") but ")+"got axis ".concat(e)),d(e.every(e=>b(e)),()=>"All values in axis param must be integers but "+"got axis ".concat(e)),e.map(e=>e<0?n+e:e)}function I(e,t){const n=[],a=[],r=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||r?null:N(t,e).sort();let o=0;for(let i=0;i<e.length;++i){if(null!=s){if(s[o]===i&&1!==e[i])throw new Error("Can't squeeze axis ".concat(i," since its dim '").concat(e[i],"' is not 1"));(null==s[o]||s[o]>i)&&1===e[i]&&(n.push(e[i]),a.push(i)),s[o]<=i&&o++}1!==e[i]&&(n.push(e[i]),a.push(i))}return{newShape:n,keptDims:a}}function C(e,t){return E(e,t)}function E(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type ".concat(e));n=new Array(t)}return n}function A(e,t){for(let n=0;n<e.length;n++){const a=e[n];if(isNaN(a)||!isFinite(a))throw Error("A tensor of type ".concat(t," being uploaded contains ").concat(a,"."))}}function _(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function R(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function F(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype ".concat(e))}function D(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function O(e){return"string"===typeof e||e instanceof String}function M(e){return"boolean"===typeof e}function z(e){return"number"===typeof e}function L(e){return Array.isArray(e)?L(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":z(e)?"float32":O(e)?"string":M(e)?"bool":"float32"}function P(e){return!!(e&&e.constructor&&e.call&&e.apply)}function B(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function W(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function V(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=new Array;if(1===t.length){const s=t[0]*(a?2:1);for(let t=0;t<s;t++)r[t]=n[e+t]}else{const s=t[0],o=t.slice(1),i=o.reduce((e,t)=>e*t)*(a?2:1);for(let t=0;t<s;t++)r[t]=V(e+t*i,o,n,a)}return r}function U(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const a=e.reduce((e,t)=>e*t)*(n?2:1);if(0===a)return[];if(a!==t.length)throw new Error("[".concat(e,"] does not match the input size ").concat(t.length).concat(n?" for a complex tensor":"","."));return V(0,e,t,n)}function G(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error("Unknown dtype ".concat(t))}function H(e,t){const n=j(e,t);for(let a=0;a<n.length;a++)n[a]=1;return n}function j(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type ".concat(t))}function q(e,t){const n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return U(e,new Float32Array(n));if("int32"===t)return U(e,new Int32Array(n));if("bool"===t)return U(e,new Uint8Array(n));throw new Error("Unknown data type ".concat(t))}function Y(e){e.forEach(t=>{d(Number.isInteger(t)&&t>=0,()=>"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(e,"]."))})}function K(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let r=0;r<e.length-1;++r)a+=n[r]*e[r];return a}function X(e,t,n){if(0===t)return[];if(1===t)return[e];const a=new Array(t);for(let r=0;r<a.length-1;++r)a[r]=Math.floor(e/n[r]),e-=a[r]*n[r];return a[a.length-1]=e,a}function Z(e){return e&&e.then&&"function"===typeof e.then}n.d(t,{Ab:()=>E,BE:()=>R,E6:()=>b,Et:()=>z,FZ:()=>H,HO:()=>p,Kg:()=>O,Lm:()=>M,O3:()=>h,P8:()=>w,SA:()=>Y,SL:()=>D,Sf:()=>m,Tn:()=>P,Ty:()=>j,Ur:()=>W,X$:()=>L,XT:()=>T,Y6:()=>N,Ze:()=>f,_k:()=>X,_q:()=>S,a0:()=>r,av:()=>k,c7:()=>q,ce:()=>C,cz:()=>c,eV:()=>o,e_:()=>g,gS:()=>x,gx:()=>I,jv:()=>F,k4:()=>a,lK:()=>B,nd:()=>A,o2:()=>G,oO:()=>u,qE:()=>s,r1:()=>y,sX:()=>K,so:()=>l,vA:()=>d,wg:()=>i,xn:()=>_,yL:()=>Z,ym:()=>v,yw:()=>U})},1465:(e,t,n)=>{"use strict";n.d(t,{j:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,s.YT)(e,"x","min")},i={axis:t,keepDims:n};return a.T2.runKernel(r.lNG,o,i)}})},1565:(e,t,n)=>{"use strict";n.d(t,{v:()=>l});var a=n(2164),r=n(9554),s=n(1426),o=n(7538),i=n(7892),c=n(5583);const l=(0,i.op)({conv2DBackpropInput_:function(e,t,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",d=arguments.length>6?arguments[6]:void 0;s.vA(e.length===t.rank,()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match"));let h=e,p=t,f=!1;3===t.rank&&(f=!0,p=(0,c.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),h=[1,e[0],e[1],e[2]]),s.vA(4===h.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(h.length,".")),s.vA(4===p.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(p.rank)),s.vA(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(n.rank));const m="NHWC"===u?h[3]:h[1],g="NHWC"===u?p.shape[3]:p.shape[1];s.vA(m===n.shape[2],()=>"Error in conv2dDerInput: depth of input (".concat(m,") must ")+"match input depth for filter ".concat(n.shape[2],".")),s.vA(g===n.shape[3],()=>"Error in conv2dDerInput: depth of output (".concat(g,") must ")+"match output depth for filter ".concat(n.shape[3],".")),o.s_("conv2dDerInput",l,d);const y={dy:p,filter:n},b={strides:i,pad:l,dataFormat:u,dimRoundingMode:d,inputShape:h},v=a.T2.runKernel(r.jfg,y,b);return f?(0,c.t)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},1667:(e,t,n)=>{"use strict";var a;n.d(t,{i:()=>a}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(a||(a={}))},1719:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const i=(0,s.YT)(e,"x","depthToSpace","float32"),c="NHWC"===n?i.shape[1]:i.shape[2],l="NHWC"===n?i.shape[2]:i.shape[3],u="NHWC"===n?i.shape[3]:i.shape[1];o.vA(t>1,()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(t)),o.vA(c*t>=0,()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(c," and ").concat(t,"  for depthToSpace with input shape\n    ").concat(i.shape)),o.vA(l*t>=0,()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(l," and ").concat(t," for depthToSpace with input shape\n        ").concat(i.shape)),o.vA(u%(t*t)===0,()=>"Dimension size must be evenly divisible by ".concat(t*t," but is ").concat(u," for depthToSpace with input shape ").concat(i.shape));const d={x:i},h={blockSize:t,dataFormat:n};return a.T2.runKernel(r.TMz,d,h)}})},1802:(e,t,n)=>{"use strict";n.d(t,{Q:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,s.YT)(e,"x","all","bool")},i={axis:t,keepDims:n};return a.T2.runKernel(r.u8Z,o,i)}})},1819:(e,t,n)=>{"use strict";n.d(t,{b:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,s.YT)(e,"x","any","bool")},i={axis:t,keepDims:n};return a.T2.runKernel(r.FSt,o,i)}})},1839:(e,t,n)=>{"use strict";n.d(t,{Dv:()=>i,_X:()=>h,jY:()=>l,mu:()=>u,ok:()=>c,y7:()=>d});var a=n(2164),r=n(9494),s=n(4148),o=n(1426);function i(e){return o.vA(o.Tn(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{const r=(0,s.YT)(t,"x","tf.grad","string_or_numeric"),i=null!=n?(0,s.YT)(n,"dy","tf.grad"):null;return a.T2.tidy(()=>{const{value:t,grads:n}=a.T2.gradients(()=>e(r),[r],i);return null!=i&&o.O3(t.shape,i.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),p(n),n[0]})}}function c(e){return o.vA(o.Tn(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{o.vA(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=(0,s.j1)(t,"args","tf.grads","string_or_numeric"),i=null!=n?(0,s.YT)(n,"dy","tf.grads"):null;return a.T2.tidy(()=>{const{value:t,grads:n}=a.T2.gradients(()=>e(...r),r,i);return null!=i&&o.O3(t.shape,i.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(n),n})}}function l(e){return o.vA(o.Tn(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{o.vA(t instanceof r.qY,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),o.vA(null==n||n instanceof r.qY,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:s,value:i}=a.T2.gradients(()=>e(t),[t],n);return p(s),{grad:s[0],value:i}}}function u(e){return o.vA(o.Tn(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{o.vA(Array.isArray(t)&&t.every(e=>e instanceof r.qY),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),o.vA(null==n||n instanceof r.qY,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const s=a.T2.gradients(()=>e(...t),t,n);return null!=n&&o.O3(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(s.grads),s}}function d(e,t){o.vA(o.Tn(e),()=>"The f passed in variableGrads(f) must be a function"),o.vA(null==t||Array.isArray(t)&&t.every(e=>e instanceof r.rT),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=t;if(!n){t=[];for(const e in a.T2.registeredVariables)t.push(a.T2.registeredVariables[e])}const s=n?t.filter(e=>!e.trainable):null,i=t.length;t=t.filter(e=>e.trainable),o.vA(t.length>0,()=>"variableGrads() expects at least one of the input variables to "+"be trainable, but none of the ".concat(i," variables is ")+"trainable.");const{value:c,grads:l}=a.T2.gradients(e,t,null,!0);o.vA(l.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),o.vA(0===c.rank,()=>"The f passed in variableGrads(f) must return a scalar, but it "+"returned a rank-".concat(c.rank," tensor"));const u={};return t.forEach((e,t)=>{null!=l[t]&&(u[e.name]=l[t])}),null!=s&&s.forEach(e=>u[e.name]=null),{value:c,grads:u}}function h(e){return a.T2.customGrad(e)}function p(e){if(e.filter(e=>null==e).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},1997:(e,t,n)=>{"use strict";n.d(t,{d:()=>s});var a=n(8977),r=n(9914);function s(e,t){if(((0,a.isTypedArray)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,a.isTypedArray)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,r.Q)(e,[],[],t)}},2022:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({selu_:function(e){const t={x:(0,s.YT)(e,"x","selu")};return a.T2.runKernel(r.u$b,t)}})},2131:(e,t,n)=>{"use strict";n.d(t,{P:()=>l});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805),c=n(7794);const l=(0,n(7892).op)({maximum_:function(e,t){let n=(0,o.YT)(e,"a","maximum"),l=(0,o.YT)(t,"b","maximum");[n,l]=(0,s.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,c.w)(n,"int32"),l=(0,c.w)(l,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return a.T2.runKernel(r.LDN,u)}})},2154:(e,t,n)=>{"use strict";n.d(t,{m:()=>p});var a=n(2164),r=n(8046),s=n(9554),o=n(4148),i=n(1426),c=n(6149),l=n(1047),u=n(1011),d=n(7892),h=n(9477);const p=(0,d.op)({transpose_:function(e,t,n){const d=(0,o.YT)(e,"x","transpose");if(null==t&&(t=d.shape.map((e,t)=>t).reverse()),i.vA(d.rank===t.length,()=>"Error in transpose: rank of input ".concat(d.rank," ")+"must match length of perm ".concat(t,".")),t.forEach(e=>{i.vA(e>=0&&e<d.rank,()=>"All entries in 'perm' must be between 0 and ".concat(d.rank-1)+" but got ".concat(t))}),d.rank<=1)return d.clone();const p={x:d},f={perm:t};return"complex64"===d.dtype?(0,r.DZ)(()=>{let e=(0,h.x)(d),t=(0,l.n)(d);return e=a.T2.runKernel(s.wx0,{x:e},f),t=a.T2.runKernel(s.wx0,{x:t},f),n&&(t=(0,u.H)(t)),(0,c.f)(e,t)}):a.T2.runKernel(s.wx0,p,f)}})},2155:(e,t,n)=>{"use strict";n.d(t,{x:()=>y});var a=n(4148),r=n(1426),s=n(3753),o=n(9235),i=n(891),c=n(1465),l=n(7892),u=n(7587),d=n(5583),h=n(1997),p=n(191),f=n(7738),m=n(7382);function g(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return(0,s.t)(e);if(1!==e.rank&&null===n)return g((0,d.t)(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,m.c)((0,s.t)(e),n);if(t===1/0)return(0,i.T)((0,s.t)(e),n);if(t===-1/0)return(0,c.j)((0,s.t)(e),n);if("euclidean"===t||2===t)return(0,p.R)((0,m.c)((0,u.n)((0,s.t)(e),(0,h.d)(2,"int32")),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,i.T)((0,m.c)((0,s.t)(e),n[0]),n[1]-1);if(t===1/0)return(0,i.T)((0,m.c)((0,s.t)(e),n[1]),n[0]);if(t===-1/0)return(0,c.j)((0,m.c)((0,s.t)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,p.R)((0,m.c)((0,f.E)(e),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}throw new Error("Error in norm: invalid axis: ".concat(n))}const y=(0,l.op)({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i=g(e=(0,a.YT)(e,"x","norm"),t,n);let c=i.shape;if(s){const t=(0,r.Y6)(n,e.shape);c=o.SM(i.shape,t)}return(0,d.t)(i,c)}})},2164:(e,t,n)=>{"use strict";n.d(t,{T2:()=>x,Ye:()=>v});var a=n(6790),r=n(5399),s=n(7926),o=n(9554),i=n(843),c=n(4124),l=n(8977),u=n(1426);class d{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let a;const s=()=>{a=n()};let o;const i=l.now();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(s);else{s();for(const e of a)e.dataSync();o=Promise.resolve({kernelMs:l.now()-i})}if((0,r._K)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let r=0;r<a.length;r++){const t=a[r];t.data().then(n=>{h(n,t.dtype,e)})}return{kernelName:e,outputs:a,inputs:t,timeMs:o.then(e=>e.kernelMs),extraInfo:o.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:a,inputs:r,extraInfo:s}=e;n.forEach(e=>{Promise.all([e.data(),a,s]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])})})}}function h(e,t,n){if("float32"!==t)return!1;for(let a=0;a<e.length;a++){const t=e[a];if(isNaN(t)||!isFinite(t))return console.warn("Found ".concat(t," in the result of '").concat(n,"'")),!0}return!1}class p{logKernelProfile(e,t,n,a,r,s){const o="number"===typeof a?u.av("".concat(a,"ms"),9):a.error,i=u.av(e,25),c=t.rank,l=t.size,d=u.av(t.shape.toString(),14);let h="";for(const u in r){const e=r[u];if(null!=e){const n=e.shape||t.shape,a=n.length;h+="".concat(u,": ").concat(a,"D ").concat(a>0?n:""," ")}}console.log("%c".concat(i,"\t%c").concat(o,"\t%c").concat(c,"D ").concat(d,"\t%c").concat(l,"\t%c").concat(h,"\t%c").concat(s),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var f=n(9494),m=n(8804);function g(e){return null!=e.kernelName}class y{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class b{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new y}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error("The highest priority backend '".concat(e,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(c.i("".concat(e," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error("Backend name '".concat(e,"' not found in registry"));if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new d(this.backendInstance),!0}setupRegisteredKernels(){(0,i.Op)(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){(0,i.Op)(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error("Cannot initialize backend ".concat(e,", no registration found."));try{const n=t.factory();if(!n||n instanceof a.uI||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,a=n.then(n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0)).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,c.i("Initialization of backend ".concat(e," failed")),c.i(n.stack||n.message)),!1));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(n){return c.i("Initialization of backend ".concat(e," failed")),c.i(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error("".concat(e," backend not found in registry"));this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),a=n.backend,r=this.readSync(t),s=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun(()=>this.startScope(a),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(a){throw t(),a}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(e){const t=x.runKernel(o.lzr,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],e=>({x:()=>{const t={x:e},n={dtype:"float32"};return x.runKernel(o.KXH,t,n)}}),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=(0,i._5)(e,this.backendName)))throw new Error("Kernel '".concat(e,"' not registered for backend '").concat(this.backendName,"'"));return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const a=this.backend.numDataIds();let r=0;n.forEach(e=>{r+="complex64"===e.dtype?3:1});const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=a-t-r-s;if(o>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(o," data ids) after running '").concat(e,"'"))}runKernelFunc(e){let t,n=[];const a=this.isTapeOn(),r=this.state.numBytes,s=this.state.numTensors;let o,c;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:r,attrs:s}=e;null==this.backendName&&this.backend;const l=(0,i._5)(t,this.backendName);u.vA(null!=l,()=>"Cannot find registered kernel '".concat(t,"' for backend '").concat(this.backendName,"'")),o=()=>{const e=this.backend.numDataIds();c=l.kernelFunc({inputs:r,attrs:s,backend:this.backend});const o=Array.isArray(c)?c:[c];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const i=o.map(e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e));if(a){const e=this.getTensorsForGradient(t,r,i);n=this.saveTensorsForBackwardMode(e)}return i}}else{const{forwardFunc:t}=e,r=e=>{a&&(n=e.map(e=>this.keep(this.clone(e))))};o=()=>{const e=this.backend.numDataIds();c=this.tidy(()=>t(this.backend,r));const n=Array.isArray(c)?c:[c];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:d,attrs:h}=e,p=g(e)?null:e.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,d,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=o()}),a&&this.addTapeNode(l,d,t,p,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map(e=>null!=d[e]?d[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(c)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map(e=>this.keep(this.clone(e)));return t}getTensorsForGradient(e,t,n){const a=(0,i.vQ)(e);if(null!=a){const e=a.inputsToSave||[],r=a.outputsToSave||[];let s;a.saveAllInputs?(u.vA(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),s=Object.keys(t).map(e=>t[e])):s=e.map(e=>t[e]);const o=n.filter((e,t)=>r[t]);return s.concat(o)}return[]}makeTensor(e,t,n,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=e;"string"===n&&u.Kg(e[0])&&(r=e.map(e=>l.encodeString(e)));const s=a.write(r,t,n),o=new f.qY(t,n,s,this.nextTensorId());if(this.trackTensor(o,a),"string"===n){const e=this.state.tensorInfo.get(s),t=(0,u.SL)(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,a){const r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:a,dtype:r}=e,s=new f.qY(a,r,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));const r=new f.rT(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error("Variable with name ".concat(r.name," was already registered"));return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*u.jv(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof f.rT||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*u.jv(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,r,s){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},c=(0,i.vQ)(e);null!=c&&(a=c.gradFunc),null!=a&&(o.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],a=u.Ty(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e}),a(e.length>1?e:e[0],r,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,m.getTensorsInContainer)(e),n=new Set(t.map(e=>e.id));for(let r=0;r<this.state.activeScope.track.length;r++){const e=this.state.activeScope.track[r];e.kept||n.has(e.id)||e.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==a.id||this.track(e)})}gradients(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(u.vA(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype,"'"));const r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));u.vA(r instanceof f.qY,()=>"The result y returned by f() must be a tensor.");const s=function(e,t,n){const a={},r={};for(let c=0;c<t.length;c++)a[t[c].id]=!0;for(let c=0;c<e.length;c++){const n=e[c],s=n.inputs;for(const e in s){const o=s[e];let i=!1;for(let e=0;e<t.length;e++)if(a[o.id]){n.outputs.forEach(e=>a[e.id]=!0),i=!0,r[n.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let c=e.length-1;c>=0;c--){const t=e[c],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(const e in n)s[n[e].id]=!0,o[t.id]=!0;break}}const i=[];for(let c=0;c<e.length;c++){const t=e[c];if(r[t.id]&&o[t.id]){const e={};for(const r in t.inputs){const n=t.inputs[r];a[n.id]&&(e[r]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}(this.state.activeTape,t,r);if(!a&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[r.id]=null==n?function(e){const t=(0,u.FZ)((0,u.Ze)(e),"float32");return x.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,a){for(let r=t.length-1;r>=0;r--){const s=t[r],o=[];if(s.outputs.forEach(t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)}),null==s.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(s.kernelName,"."));const i=s.gradient(o);for(const t in s.inputs){if(!(t in i))throw new Error("Cannot backprop through input ".concat(t,". ")+"Available gradients found: ".concat(Object.keys(i),"."));const r=n(()=>i[t]());if("float32"!==r.dtype)throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"".concat(t," must have 'float32' dtype, but has '").concat(r.dtype,"'"));const o=s.inputs[t];if(!u.r1(r.shape,o.shape))throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"'".concat(t,"' has shape '").concat(r.shape,"', which does not match ")+"the shape of the input '".concat(o.shape,"'"));if(null==e[o.id])e[o.id]=r;else{const t=e[o.id];e[o.id]=a(t,r),t.dispose()}}}}(e,s,e=>this.tidy(e),w);const a=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:r,grads:a}})}customGrad(e){var t=this;return u.vA(u.Tn(e),()=>"The f passed in customGrad(f) must be a function."),function(){for(var n=arguments.length,a=new Array(n),r=0;r<n;r++)a[r]=arguments[r];let s;u.vA(a.every(e=>e instanceof f.qY),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const o={};a.forEach((e,t)=>{o[t]=e});return t.runKernelFunc({forwardFunc:(t,n)=>(s=e(...a,n),u.vA(s.value instanceof f.qY,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),u.vA(u.Tn(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),backwardsFunc:(e,t)=>{const n=s.gradFunc(e,t),r=Array.isArray(n)?n:[n];u.vA(r.length===a.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),u.vA(r.every(e=>e instanceof f.qY),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const o={};return r.forEach((e,t)=>{o[t]=()=>e}),o},inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=(0,l.now)(),n=await this.backend.time(e);return n.wallMs=(0,l.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new y;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function v(){const e=(0,s.L)();if(null==e._tfengine){const t=new r.OH(e);e._tfengine=new b(t)}return(0,r.tj)(e._tfengine.ENV),(0,f.qP)(()=>e._tfengine),e._tfengine}b.nextTensorId=0,b.nextVariableId=0;const x=v();function w(e,t){const n={a:e,b:t};return x.runKernel(o.OMN,n)}},2175:(e,t,n)=>{"use strict";n.d(t,{V:()=>f});var a=n(4148),r=n(1426),s=n(7242),o=n(9235),i=n(5462),c=n(5911),l=n(891),u=n(7892),d=n(5583),h=n(7951),p=n(7382);const f=(0,u.op)({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const u=(0,a.YT)(e,"x","logSumExp"),f=(0,r.Y6)(t,u.shape),m=(0,l.T)(u,f,!0),g=(0,h.j)(u,m),y=(0,i.o)(g),b=(0,p.c)(y,f),v=(0,c.R)(b),x=(0,s.W)((0,d.t)(m,v.shape),v);if(n){const e=(0,o.SM)(x.shape,f);return(0,d.t)(x,e)}return x}})},2214:(e,t,n)=>{"use strict";n.d(t,{v:()=>l});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7892),c=n(5583);const l=(0,i.op)({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const l=(0,s.YT)(e,"images","resizeBilinear");o.vA(3===l.rank||4===l.rank,()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(l.rank,".")),o.vA(2===t.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(t,".")),o.vA(!1===i||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let u=l,d=!1;3===l.rank&&(d=!0,u=(0,c.t)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,h={images:u},p={alignCorners:n,halfPixelCenters:i,size:t},f=a.T2.runKernel(r.hgw,h,p);return d?(0,c.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},2430:function(e,t,n){var a;!function(r,s,o){var i,c=256,l=o.pow(c,6),u=o.pow(2,52),d=2*u,h=255;function p(e,t,n){var a=[],h=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(c):(e=new Uint8Array(c),(r.crypto||r.msCrypto).getRandomValues(e)),b(e)}catch(a){var t=r.navigator,n=t&&t.plugins;return[+new Date,r,n,r.screen,b(s)]}}():e,3),a),p=new f(a),v=function(){for(var e=p.g(6),t=l,n=0;e<u;)e=(e+n)*c,t*=c,n=p.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|p.g(4)},v.quick=function(){return p.g(4)/4294967296},v.double=v,y(b(p.S),s),(t.pass||n||function(e,t,n,a){return a&&(a.S&&m(a,p),e.state=function(){return m(p,{})}),n?(o.random=e,t):e})(v,h,"global"in t?t.global:this==o,t.state)}function f(e){var t,n=e.length,a=this,r=0,s=a.i=a.j=0,o=a.S=[];for(n||(e=[n++]);r<c;)o[r]=r++;for(r=0;r<c;r++)o[r]=o[s=h&s+e[r%n]+(t=o[r])],o[s]=t;(a.g=function(e){for(var t,n=0,r=a.i,s=a.j,o=a.S;e--;)t=o[r=h&r+1],n=n*c+o[h&(o[r]=o[s=h&s+t])+(o[s]=t)];return a.i=r,a.j=s,n})(c)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,a=[],r=typeof e;if(t&&"object"==r)for(n in e)try{a.push(g(e[n],t-1))}catch(s){}return a.length?a:"string"==r?e:e+"\0"}function y(e,t){for(var n,a=e+"",r=0;r<a.length;)t[h&r]=h&(n^=19*t[h&r])+a.charCodeAt(r++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(o.random(),s),e.exports){e.exports=p;try{i=n(1234)}catch(v){}}else void 0===(a=function(){return p}.call(t,n,t,e))||(e.exports=a)}("undefined"!==typeof self?self:this,[],Math)},2520:(e,t,n)=>{"use strict";n.d(t,{I:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({expm1_:function(e){const t={x:(0,s.YT)(e,"x","expm1")};return a.T2.runKernel(r.ybj,t)}})},2557:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({batchToSpaceND_:function(e,t,n){const i=(0,s.YT)(e,"x","batchToSpaceND"),c=t.reduce((e,t)=>e*t);o.vA(i.rank>=1+t.length,()=>"input rank is ".concat(i.rank," but should be > than blockShape.length ").concat(t.length)),o.vA(n.length===t.length,()=>"crops.length is ".concat(n.length," but should be equal to blockShape.length  ").concat(t.length)),o.vA(i.shape[0]%c===0,()=>"input tensor batch is ".concat(i.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(t.join(" * ")," === ").concat(c));const l={x:i},u={blockShape:t,crops:n};return a.T2.runKernel(r.Ik2,l,u)}})},2759:(e,t,n)=>{"use strict";n.d(t,{r:()=>c});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805);const c=(0,n(7892).op)({greater_:function(e,t){let n=(0,o.YT)(e,"a","greater","string_or_numeric"),c=(0,o.YT)(t,"b","greater","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.XhZ,l)}})},2765:(e,t,n)=>{"use strict";n.d(t,{r:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const o=(0,s.YT)(e,"x","topk");if(0===o.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=o.shape[o.shape.length-1];if(t<0)throw new Error("'k' passed to topk() must be >= 0 but got ".concat(t));if(t>i)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(i,") ")+"but got ".concat(t));const c={x:o},l={k:t,sorted:n},[u,d]=a.T2.runKernel(r.TBb,c,l);return{values:u,indices:d}}})},2799:(e,t)=>{"use strict";var n=Symbol.for("react.transitional.element");function a(e,t,a){var r=null;if(void 0!==a&&(r=""+a),void 0!==t.key&&(r=""+t.key),"key"in t)for(var s in a={},t)"key"!==s&&(a[s]=t[s]);else a=t;return t=a.ref,{$$typeof:n,type:e,key:r,ref:void 0!==t?t:null,props:a}}Symbol.for("react.fragment"),t.jsx=a,t.jsxs=a},2823:(e,t,n)=>{"use strict";n.d(t,{b:()=>l});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7892),c=n(5583);const l=(0,i.op)({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const l=(0,s.YT)(e,"images","resizeNearestNeighbor");o.vA(3===l.rank||4===l.rank,()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(l.rank,".")),o.vA(2===t.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(t,".")),o.vA("float32"===l.dtype||"int32"===l.dtype,()=>"`images` must have `int32` or `float32` as dtype"),o.vA(!1===i||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let u=l,d=!1;3===l.rank&&(d=!0,u=(0,c.t)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,h={images:u},p={alignCorners:n,halfPixelCenters:i,size:t},f=a.T2.runKernel(r.jOE,h,p);return d?(0,c.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},3010:(e,t,n)=>{"use strict";n.d(t,{q:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({asin_:function(e){const t={x:(0,s.YT)(e,"x","asin")};return a.T2.runKernel(r.QKF,t)}})},3015:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,s.YT)(e,"x","mean")},i={axis:t,keepDims:n};return a.T2.runKernel(r.g5A,o,i)}})},3017:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({tile_:function(e,t){const n=(0,s.YT)(e,"x","tile","string_or_numeric");o.vA(n.rank===t.length,()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of reps ".concat(t,"."));const i={x:n},c={reps:t};return a.T2.runKernel(r.FAs,i,c)}})},3062:(e,t,n)=>{"use strict";n.d(t,{h:()=>o});var a=n(2164),r=n(9554),s=n(1426);const o=(0,n(7892).op)({fft_:function(e){(0,s.vA)("complex64"===e.dtype,()=>"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(e.dtype,"."));const t={input:e};return a.T2.runKernel(r.rGP,t)}})},3068:(e,t,n)=>{"use strict";n.d(t,{F:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,s.YT)(e,"x","argMax")},o={axis:t};return a.T2.runKernel(r.Jp_,n,o)}})},3117:(e,t,n)=>{"use strict";n.d(t,{w:()=>l});var a=n(4148),r=n(1426),s=n(4969),o=n(9899),i=n(7892),c=n(5583);const l=(0,i.op)({separableConv2d_:function(e,t,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const h=(0,a.YT)(e,"x","separableConv2d"),p=(0,a.YT)(t,"depthwiseFilter","separableConv2d"),f=(0,a.YT)(n,"pointwiseFilter","separableConv2d");let m=h,g=!1;if(3===h.rank&&(g=!0,m=(0,c.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");r.vA(4===m.rank,()=>"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(m.rank,".")),r.vA(4===p.rank,()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(p.rank,".")),r.vA(4===f.rank,()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(p.rank,".")),r.vA(1===f.shape[0],()=>"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(f.shape[0],".")),r.vA(1===f.shape[1],()=>"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(f.shape[1],"."));const y=p.shape[2],b=p.shape[3];r.vA(f.shape[2]===y*b,()=>"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(y*b,", ")+"but got ".concat(f.shape[2],"."));const v=(0,o.G)(m,p,i,l,d,u),x=(0,s.X)(v,f,1,"valid",d);return g?(0,c.t)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},3290:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({zerosLike_:function(e){const t={x:(0,s.YT)(e,"x","zerosLike")};return a.T2.runKernel(r.xJ3,t)}})},3467:(e,t,n)=>{"use strict";n.d(t,{y:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({isNaN_:function(e){const t={x:(0,s.YT)(e,"x","isNaN")};return a.T2.runKernel(r.iPs,t)}})},3585:(e,t,n)=>{"use strict";n.d(t,{e:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({spaceToBatchND_:function(e,t,n){const i=(0,s.YT)(e,"x","spaceToBatchND");o.vA(i.rank>=1+t.length,()=>"input rank ".concat(i.rank," should be > than [blockShape] ").concat(t.length)),o.vA(n.length===t.length,()=>"paddings.shape[0] ".concat(n.length," must be equal to [blockShape] ").concat(t.length)),o.vA(i.shape.reduce((e,a,r)=>r>0&&r<=t.length?e&&(a+n[r-1][0]+n[r-1][1])%t[r-1]===0:e,!0),()=>"input spatial dimensions ".concat(i.shape.slice(1)," with paddings ").concat(n.toString()," must be divisible by blockShapes ").concat(t.toString()));const c={x:i},l={blockShape:t,paddings:n};return a.T2.runKernel(r.A8B,c,l)}})},3612:(e,t,n)=>{"use strict";n.d(t,{w:()=>i});var a=n(2164),r=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({floorDiv_:function(e,t){let n=(0,o.YT)(e,"a","floorDiv"),i=(0,o.YT)(t,"b","floorDiv");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.ElG,c)}})},3617:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var a=n(2164),r=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({mod_:function(e,t){let n=(0,o.YT)(e,"a","mod"),i=(0,o.YT)(t,"b","mod");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.BLA,c)}})},3645:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({elu_:function(e){const t={x:(0,s.YT)(e,"x","elu","float32")};return a.T2.runKernel(r.Pah,t)}})},3708:(e,t,n)=>{"use strict";n.d(t,{r:()=>c});var a=n(4148),r=n(8805),s=n(5692),o=n(5344),i=n(7920);const c=(0,n(7892).op)({logicalXor_:function(e,t){const n=(0,a.YT)(e,"a","logicalXor","bool"),c=(0,a.YT)(t,"b","logicalXor","bool");return(0,r.assertAndGetBroadcastShape)(n.shape,c.shape),(0,s.n)((0,i.z)(e,t),(0,o.N)((0,s.n)(e,t)))}})},3739:(e,t,n)=>{"use strict";n.d(t,{L:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i={x:(0,s.YT)(e,"x","cumprod")},c={axis:t,exclusive:n,reverse:o};return a.T2.runKernel(r.jj_,i,c)}})},3753:(e,t,n)=>{"use strict";n.d(t,{t:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({abs_:function(e){const t=(0,s.YT)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return a.T2.runKernel(r.$zE,e)}{const e={x:t};return a.T2.runKernel(r.ljI,e)}}})},3765:(e,t,n)=>{"use strict";n.d(t,{X:()=>r,j:()=>a});const a=1.7580993408473768,r=1.0507009873554805},3789:(e,t,n)=>{"use strict";n.d(t,{X:()=>l});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7892),c=n(5583);const l=(0,i.op)({dilation2d_:function(e,t,n,i){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const d=(0,s.YT)(e,"x","dilation2d"),h=(0,s.YT)(t,"filter","dilation2d");o.vA(3===d.rank||4===d.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(d.rank,".")),o.vA(3===h.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(h.rank,".")),o.vA("NHWC"===u,()=>"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(u));let p=d,f=!1;3===d.rank&&(p=(0,c.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0),o.vA(p.shape[3]===h.shape[2],()=>"Error in dilation2d:  input and filter must have the same depth: ".concat(p.shape[3]," vs ").concat(h.shape[2]));const m={x:p,filter:h},g={strides:n,pad:i,dilations:l},y=a.T2.runKernel(r.jxD,m,g);return f?(0,c.t)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},3829:(e,t,n)=>{"use strict";n.d(t,{z:()=>c});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(4660);const c=(0,n(7892).op)({clipByValue_:function(e,t,n){const c=(0,s.YT)(e,"x","clipByValue");if(o.vA(t<=n,()=>"Error in clip: min (".concat(t,") must be ")+"less than or equal to max (".concat(n,").")),t===n)return(0,i.G)(c.shape,t,c.dtype);const l={x:c},u={clipValueMin:t,clipValueMax:n};return a.T2.runKernel(r.vaV,l,u)}})},3915:function(e,t,n){!function(e,t,n){"use strict";const a={1:{name:"/m/01g317",id:1,displayName:"person"},2:{name:"/m/0199g",id:2,displayName:"bicycle"},3:{name:"/m/0k4j",id:3,displayName:"car"},4:{name:"/m/04_sv",id:4,displayName:"motorcycle"},5:{name:"/m/05czz6l",id:5,displayName:"airplane"},6:{name:"/m/01bjv",id:6,displayName:"bus"},7:{name:"/m/07jdr",id:7,displayName:"train"},8:{name:"/m/07r04",id:8,displayName:"truck"},9:{name:"/m/019jd",id:9,displayName:"boat"},10:{name:"/m/015qff",id:10,displayName:"traffic light"},11:{name:"/m/01pns0",id:11,displayName:"fire hydrant"},13:{name:"/m/02pv19",id:13,displayName:"stop sign"},14:{name:"/m/015qbp",id:14,displayName:"parking meter"},15:{name:"/m/0cvnqh",id:15,displayName:"bench"},16:{name:"/m/015p6",id:16,displayName:"bird"},17:{name:"/m/01yrx",id:17,displayName:"cat"},18:{name:"/m/0bt9lr",id:18,displayName:"dog"},19:{name:"/m/03k3r",id:19,displayName:"horse"},20:{name:"/m/07bgp",id:20,displayName:"sheep"},21:{name:"/m/01xq0k1",id:21,displayName:"cow"},22:{name:"/m/0bwd_0j",id:22,displayName:"elephant"},23:{name:"/m/01dws",id:23,displayName:"bear"},24:{name:"/m/0898b",id:24,displayName:"zebra"},25:{name:"/m/03bk1",id:25,displayName:"giraffe"},27:{name:"/m/01940j",id:27,displayName:"backpack"},28:{name:"/m/0hnnb",id:28,displayName:"umbrella"},31:{name:"/m/080hkjn",id:31,displayName:"handbag"},32:{name:"/m/01rkbr",id:32,displayName:"tie"},33:{name:"/m/01s55n",id:33,displayName:"suitcase"},34:{name:"/m/02wmf",id:34,displayName:"frisbee"},35:{name:"/m/071p9",id:35,displayName:"skis"},36:{name:"/m/06__v",id:36,displayName:"snowboard"},37:{name:"/m/018xm",id:37,displayName:"sports ball"},38:{name:"/m/02zt3",id:38,displayName:"kite"},39:{name:"/m/03g8mr",id:39,displayName:"baseball bat"},40:{name:"/m/03grzl",id:40,displayName:"baseball glove"},41:{name:"/m/06_fw",id:41,displayName:"skateboard"},42:{name:"/m/019w40",id:42,displayName:"surfboard"},43:{name:"/m/0dv9c",id:43,displayName:"tennis racket"},44:{name:"/m/04dr76w",id:44,displayName:"bottle"},46:{name:"/m/09tvcd",id:46,displayName:"wine glass"},47:{name:"/m/08gqpm",id:47,displayName:"cup"},48:{name:"/m/0dt3t",id:48,displayName:"fork"},49:{name:"/m/04ctx",id:49,displayName:"knife"},50:{name:"/m/0cmx8",id:50,displayName:"spoon"},51:{name:"/m/04kkgm",id:51,displayName:"bowl"},52:{name:"/m/09qck",id:52,displayName:"banana"},53:{name:"/m/014j1m",id:53,displayName:"apple"},54:{name:"/m/0l515",id:54,displayName:"sandwich"},55:{name:"/m/0cyhj_",id:55,displayName:"orange"},56:{name:"/m/0hkxq",id:56,displayName:"broccoli"},57:{name:"/m/0fj52s",id:57,displayName:"carrot"},58:{name:"/m/01b9xk",id:58,displayName:"hot dog"},59:{name:"/m/0663v",id:59,displayName:"pizza"},60:{name:"/m/0jy4k",id:60,displayName:"donut"},61:{name:"/m/0fszt",id:61,displayName:"cake"},62:{name:"/m/01mzpv",id:62,displayName:"chair"},63:{name:"/m/02crq1",id:63,displayName:"couch"},64:{name:"/m/03fp41",id:64,displayName:"potted plant"},65:{name:"/m/03ssj5",id:65,displayName:"bed"},67:{name:"/m/04bcr3",id:67,displayName:"dining table"},70:{name:"/m/09g1w",id:70,displayName:"toilet"},72:{name:"/m/07c52",id:72,displayName:"tv"},73:{name:"/m/01c648",id:73,displayName:"laptop"},74:{name:"/m/020lf",id:74,displayName:"mouse"},75:{name:"/m/0qjjc",id:75,displayName:"remote"},76:{name:"/m/01m2v",id:76,displayName:"keyboard"},77:{name:"/m/050k8",id:77,displayName:"cell phone"},78:{name:"/m/0fx9l",id:78,displayName:"microwave"},79:{name:"/m/029bxz",id:79,displayName:"oven"},80:{name:"/m/01k6s3",id:80,displayName:"toaster"},81:{name:"/m/0130jx",id:81,displayName:"sink"},82:{name:"/m/040b_t",id:82,displayName:"refrigerator"},84:{name:"/m/0bt_c3",id:84,displayName:"book"},85:{name:"/m/01x3z",id:85,displayName:"clock"},86:{name:"/m/02s195",id:86,displayName:"vase"},87:{name:"/m/01lsmm",id:87,displayName:"scissors"},88:{name:"/m/0kmg4",id:88,displayName:"teddy bear"},89:{name:"/m/03wvsk",id:89,displayName:"hair drier"},90:{name:"/m/012xff",id:90,displayName:"toothbrush"}};class r{constructor(e,t){this.modelPath=t||"https://storage.googleapis.com/tfjs-models/savedmodel/".concat(this.getPrefix(e),"/model.json")}getPrefix(e){return"lite_mobilenet_v2"===e?"ssd".concat(e):"ssd_".concat(e)}async load(){this.model=await t.loadGraphModel(this.modelPath);const e=n.zeros([1,300,300,3],"int32"),a=await this.model.executeAsync(e);await Promise.all(a.map(e=>e.data())),a.map(e=>e.dispose()),e.dispose()}async infer(e,t,a){const r=n.tidy(()=>(e instanceof n.Tensor||(e=n.browser.fromPixels(e)),n.expandDims(e))),s=r.shape[1],o=r.shape[2],i=await this.model.executeAsync(r),c=i[0].dataSync(),l=i[1].dataSync();r.dispose(),n.dispose(i);const[u,d]=this.calculateMaxScores(c,i[0].shape[1],i[0].shape[2]),h=n.getBackend();"webgl"===n.getBackend()&&n.setBackend("cpu");const p=n.tidy(()=>{const e=n.tensor2d(l,[i[1].shape[1],i[1].shape[3]]);return n.image.nonMaxSuppression(e,u,t,a,a)}),f=p.dataSync();return p.dispose(),h!==n.getBackend()&&n.setBackend(h),this.buildDetectedObjects(o,s,l,u,f,d)}buildDetectedObjects(e,t,n,r,s,o){const i=s.length,c=[];for(let l=0;l<i;l++){const i=[];for(let e=0;e<4;e++)i[e]=n[4*s[l]+e];const u=i[0]*t,d=i[1]*e,h=i[2]*t,p=i[3]*e;i[0]=d,i[1]=u,i[2]=p-d,i[3]=h-u,c.push({bbox:i,class:a[o[s[l]]+1].displayName,score:r[s[l]]})}return c}calculateMaxScores(e,t,n){const a=[],r=[];for(let s=0;s<t;s++){let t=Number.MIN_VALUE,o=-1;for(let a=0;a<n;a++)e[s*n+a]>t&&(t=e[s*n+a],o=a);a[s]=t,r[s]=o}return[a,r]}async detect(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.5;return this.infer(e,t,n)}dispose(){null!=this.model&&this.model.dispose()}}e.ObjectDetection=r,e.load=async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(null==n)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");const t=e.base||"lite_mobilenet_v2",a=e.modelUrl;if(-1===["mobilenet_v1","mobilenet_v2","lite_mobilenet_v2"].indexOf(t))throw new Error("ObjectDetection constructed with invalid base model ".concat(t,". Valid names are 'mobilenet_v1', 'mobilenet_v2' and 'lite_mobilenet_v2'."));const s=new r(t,a);return await s.load(),s},e.version="2.2.3",Object.defineProperty(e,"__esModule",{value:!0})}(t,n(5452),n(5743))},3984:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s.YT)(e,"x","unstack","string_or_numeric");o.vA(t>=-n.shape.length&&t<n.shape.length,()=>"Axis = ".concat(t," is not in [-").concat(n.shape.length,", ").concat(n.shape.length,")"));const i={value:n},c={axis:t};return a.T2.runKernel(r.dXR,i,c)}})},3986:(e,t,n)=>{"use strict";n.d(t,{_:()=>c});var a=n(2164),r=n(9554),s=n(4148),o=n(4920),i=n(8805);const c=(0,n(7892).op)({where_:function(e,t,n){const c=(0,s.YT)(t,"a","where"),l=(0,s.YT)(n,"b","where"),u=(0,s.YT)(e,"condition","where","bool"),d=(0,i.assertAndGetBroadcastShape)((0,i.assertAndGetBroadcastShape)(u.shape,c.shape),l.shape),h={condition:(0,o.h)(u,d),t:(0,o.h)(c,d),e:(0,o.h)(l,d)};return a.T2.runKernel(r.l6P,h)}})},4023:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s.YT)(e,"x","expandDims","string_or_numeric");o.vA(t<=n.rank,()=>"Axis must be <= rank of the tensor");const i={input:n},c={dim:t};return a.T2.runKernel(r.ybN,i,c)}})},4083:(e,t,n)=>{"use strict";n.r(t),n.d(t,{calculateShapes:()=>o,validateInput:()=>s,validateUpdateShape:()=>r});var a=n(1426);function r(e,t,n){const a=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(n.shape)+", indices.shape: ".concat(t.shape,", shape: ").concat(e)+", sliceDim: ".concat(a,", and batchDim: ").concat(r,".");if(n.rank<r)throw new Error(s+" update.rank < ".concat(r,". "));if(e.length<a+(n.rank-r))throw new Error(s+" Output shape length < ".concat(a+(n.rank-r)));if(n.rank!==r+e.length-a)throw new Error(s+" update.rank != ".concat(r+e.length-a));for(let o=0;o<r;++o)if(n.shape[o]!==t.shape[o])throw new Error(s+" updates.shape[".concat(o,"] (").concat(n.shape[o],") != indices.shape[").concat(o,"] (").concat(t.shape[o],")."));for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==e[o+a])throw new Error(s+" updates.shape[".concat(o+r,"] (").concat(n.shape[o+r],") != shape[").concat(o+r,"] (").concat(e[o+r],")"))}function s(e,t,n){if(t.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if(e.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(t.dtype));if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: ".concat(t.shape));if(0===e.size)throw new Error("Updates specified for empty output. updates shape: ".concat(e.shape))}r(n,t,e)}function o(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,o=n.length;let i=1;for(let a=s;a<o;++a)i*=n[a];const c=s<1?1:s;return{sliceRank:s,numUpdates:(0,a.Ze)(t.shape)/c,sliceSize:i,strides:[...(0,a.Ur)(n.slice(0,s)),1],outputSize:(0,a.Ze)(n)}}},4100:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({onesLike_:function(e){const t={x:(0,s.YT)(e,"x","onesLike")};return a.T2.runKernel(r.LWX,t)}})},4124:(e,t,n)=>{"use strict";n.d(t,{R:()=>s,i:()=>r});var a=n(5399);function r(){(0,a._K)().getBool("IS_TEST")||(0,a._K)().getBool("PROD")||console.warn(...arguments)}function s(){(0,a._K)().getBool("IS_TEST")||(0,a._K)().getBool("PROD")||console.log(...arguments)}},4148:(e,t,n)=>{"use strict";n.d(t,{MZ:()=>l,YT:()=>h,j1:()=>p});var a=n(2164),r=n(5399),s=n(9494),o=n(8075),i=n(8977),c=n(1426);function l(e,t){let n=e;if((0,i.isTypedArray)(e))return"string"===t?[]:[e.length];if((0,o.Oj)(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if((0,o.Nw)(e))return[e.buffer.size/(null==t?4:(0,c.jv)(t))];if(!Array.isArray(e))return[];const a=[];for(;Array.isArray(n)||(0,i.isTypedArray)(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&(0,r._K)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&u(e,a,[]),a}function u(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,i.isTypedArray)(e))return void(0,c.vA)(0===t.length,()=>"Element arr[".concat(n.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(t[0]," elements"));(0,c.vA)(t.length>0,()=>"Element arr[".concat(n.join("]["),"] should be a primitive, ")+"but is an array of ".concat(e.length," elements")),(0,c.vA)(e.length===t[0],()=>"Element arr[".concat(n.join("]["),"] should have ").concat(t[0]," ")+"elements, but has ".concat(e.length," elements"));const a=t.slice(1);for(let r=0;r<e.length;++r)u(e[r],a,n.concat(r))}function d(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error("Argument '".concat(n,"' passed to '").concat(a,"' must ")+"be ".concat(e," tensor, but got ").concat(t," tensor"))}}function h(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof(0,s.tp)())return d(r,e.dtype,t,n),e;let o=(0,c.X$)(e);if("string"!==o&&["bool","int32","float32"].indexOf(r)>=0&&(o=r),d(r,o,t,n),null==e||!(0,i.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const a=null==e?"null":e.constructor.name;throw new Error("Argument '".concat(t,"' passed to '").concat(n,"' must be a ")+"Tensor or TensorLike, but got '".concat(a,"'"))}const u=l(e,o);(0,i.isTypedArray)(e)||Array.isArray(e)||(e=[e]);const h="string"!==o?(0,i.toTypedArray)(e,o):(0,i.flatten)(e,[],!0);return a.T2.makeTensor(h,u,o)}function p(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error("Argument ".concat(t," passed to ").concat(n," must be a ")+"`Tensor[]` or `TensorLike[]`");return e.map((e,r)=>h(e,"".concat(t,"[").concat(r,"]"),n,a))}},4213:(e,t,n)=>{"use strict";n.d(t,{r:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({sigmoid_:function(e){const t={x:(0,s.YT)(e,"x","sigmoid","float32")};return a.T2.runKernel(r.vI1,t)}})},4218:(e,t,n)=>{"use strict";n.d(t,{U:()=>o});var a=n(2164),r=n(1426),s=n(6149);function o(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if((0,r.SA)(e),"complex64"===t){const t=o(e,"float32"),n=o(e,"float32");return(0,s.f)(t,n)}const n=(0,r.Ty)((0,r.Ze)(e),t);return a.T2.makeTensor(n,e,t)}},4252:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({mirrorPad_:function(e,t,n){o.vA("reflect"===n||"symmetric"===n,()=>"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(n,"."));const i=(0,s.YT)(e,"x","mirrorPad");if(0===i.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");o.vA(t.length===i.rank,()=>"Padding doesn't match input. Must be ".concat(i.rank,". ")+"Got ".concat(t.length,"."));const c="reflect"===n?1:0;for(let a=0;a<i.rank;a++)o.vA(2===t[a].length,()=>"Invalid number of paddings. Must be length of 2 each."),o.vA(t[a][0]>=0&&t[a][0]<=i.shape[a]-c&&t[a][1]>=0&&t[a][1]<=i.shape[a]-c,()=>"Padding in dimension ".concat(a," cannot be greater than or equal ")+"to ".concat(i.shape[a]-c," or less than 0 for input of ")+"shape ".concat(i.shape));const l={paddings:t,mode:n},u={x:i};return a.T2.runKernel(r.x7F,u,l)}})},4288:(e,t)=>{"use strict";var n=Symbol.for("react.transitional.element"),a=Symbol.for("react.portal"),r=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),i=Symbol.for("react.consumer"),c=Symbol.for("react.context"),l=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),h=Symbol.for("react.lazy"),p=Symbol.iterator;var f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function y(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}function b(){}function v(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=y.prototype;var x=v.prototype=new b;x.constructor=v,m(x,y.prototype),x.isPureReactComponent=!0;var w=Array.isArray,k={H:null,A:null,T:null,S:null,V:null},S=Object.prototype.hasOwnProperty;function T(e,t,a,r,s,o){return a=o.ref,{$$typeof:n,type:e,key:t,ref:void 0!==a?a:null,props:o}}function N(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var I=/\/+/g;function C(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,function(e){return t[e]})}(""+e.key):t.toString(36)}function E(){}function A(e,t,r,s,o){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var c,l,u=!1;if(null===e)u=!0;else switch(i){case"bigint":case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case n:case a:u=!0;break;case h:return A((u=e._init)(e._payload),t,r,s,o)}}if(u)return o=o(e),u=""===s?"."+C(e,0):s,w(o)?(r="",null!=u&&(r=u.replace(I,"$&/")+"/"),A(o,t,r,"",function(e){return e})):null!=o&&(N(o)&&(c=o,l=r+(null==o.key||e&&e.key===o.key?"":(""+o.key).replace(I,"$&/")+"/")+u,o=T(c.type,l,void 0,0,0,c.props)),t.push(o)),1;u=0;var d,f=""===s?".":s+":";if(w(e))for(var m=0;m<e.length;m++)u+=A(s=e[m],t,r,i=f+C(s,m),o);else if("function"===typeof(m=null===(d=e)||"object"!==typeof d?null:"function"===typeof(d=p&&d[p]||d["@@iterator"])?d:null))for(e=m.call(e),m=0;!(s=e.next()).done;)u+=A(s=s.value,t,r,i=f+C(s,m++),o);else if("object"===i){if("function"===typeof e.then)return A(function(e){switch(e.status){case"fulfilled":return e.value;case"rejected":throw e.reason;default:switch("string"===typeof e.status?e.then(E,E):(e.status="pending",e.then(function(t){"pending"===e.status&&(e.status="fulfilled",e.value=t)},function(t){"pending"===e.status&&(e.status="rejected",e.reason=t)})),e.status){case"fulfilled":return e.value;case"rejected":throw e.reason}}throw e}(e),t,r,s,o);throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.")}return u}function _(e,t,n){if(null==e)return e;var a=[],r=0;return A(e,a,"","",function(e){return t.call(n,e,r++)}),a}function R(e){if(-1===e._status){var t=e._result;(t=t()).then(function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)},function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)}),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var F="function"===typeof reportError?reportError:function(e){if("object"===typeof window&&"function"===typeof window.ErrorEvent){var t=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:"object"===typeof e&&null!==e&&"string"===typeof e.message?String(e.message):String(e),error:e});if(!window.dispatchEvent(t))return}else if("object"===typeof process&&"function"===typeof process.emit)return void process.emit("uncaughtException",e);console.error(e)};function D(){}t.Children={map:_,forEach:function(e,t,n){_(e,function(){t.apply(this,arguments)},n)},count:function(e){var t=0;return _(e,function(){t++}),t},toArray:function(e){return _(e,function(e){return e})||[]},only:function(e){if(!N(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=r,t.Profiler=o,t.PureComponent=v,t.StrictMode=s,t.Suspense=u,t.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=k,t.__COMPILER_RUNTIME={__proto__:null,c:function(e){return k.H.useMemoCache(e)}},t.cache=function(e){return function(){return e.apply(null,arguments)}},t.cloneElement=function(e,t,n){if(null===e||void 0===e)throw Error("The argument must be a React element, but you passed "+e+".");var a=m({},e.props),r=e.key;if(null!=t)for(s in void 0!==t.ref&&void 0,void 0!==t.key&&(r=""+t.key),t)!S.call(t,s)||"key"===s||"__self"===s||"__source"===s||"ref"===s&&void 0===t.ref||(a[s]=t[s]);var s=arguments.length-2;if(1===s)a.children=n;else if(1<s){for(var o=Array(s),i=0;i<s;i++)o[i]=arguments[i+2];a.children=o}return T(e.type,r,void 0,0,0,a)},t.createContext=function(e){return(e={$$typeof:c,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider=e,e.Consumer={$$typeof:i,_context:e},e},t.createElement=function(e,t,n){var a,r={},s=null;if(null!=t)for(a in void 0!==t.key&&(s=""+t.key),t)S.call(t,a)&&"key"!==a&&"__self"!==a&&"__source"!==a&&(r[a]=t[a]);var o=arguments.length-2;if(1===o)r.children=n;else if(1<o){for(var i=Array(o),c=0;c<o;c++)i[c]=arguments[c+2];r.children=i}if(e&&e.defaultProps)for(a in o=e.defaultProps)void 0===r[a]&&(r[a]=o[a]);return T(e,s,void 0,0,0,r)},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:l,render:e}},t.isValidElement=N,t.lazy=function(e){return{$$typeof:h,_payload:{_status:-1,_result:e},_init:R}},t.memo=function(e,t){return{$$typeof:d,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=k.T,n={};k.T=n;try{var a=e(),r=k.S;null!==r&&r(n,a),"object"===typeof a&&null!==a&&"function"===typeof a.then&&a.then(D,F)}catch(s){F(s)}finally{k.T=t}},t.unstable_useCacheRefresh=function(){return k.H.useCacheRefresh()},t.use=function(e){return k.H.use(e)},t.useActionState=function(e,t,n){return k.H.useActionState(e,t,n)},t.useCallback=function(e,t){return k.H.useCallback(e,t)},t.useContext=function(e){return k.H.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e,t){return k.H.useDeferredValue(e,t)},t.useEffect=function(e,t,n){var a=k.H;if("function"===typeof n)throw Error("useEffect CRUD overload is not enabled in this build of React.");return a.useEffect(e,t)},t.useId=function(){return k.H.useId()},t.useImperativeHandle=function(e,t,n){return k.H.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return k.H.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return k.H.useLayoutEffect(e,t)},t.useMemo=function(e,t){return k.H.useMemo(e,t)},t.useOptimistic=function(e,t){return k.H.useOptimistic(e,t)},t.useReducer=function(e,t,n){return k.H.useReducer(e,t,n)},t.useRef=function(e){return k.H.useRef(e)},t.useState=function(e){return k.H.useState(e)},t.useSyncExternalStore=function(e,t,n){return k.H.useSyncExternalStore(e,t,n)},t.useTransition=function(){return k.H.useTransition()},t.version="19.1.0"},4334:(e,t,n)=>{var a=n(7359),r=n(7066),s=n(9016),o=n(9538),i=n(6288),c=n(5262),l=n(2430);l.alea=a,l.xor128=r,l.xorwow=s,l.xorshift7=o,l.xor4096=i,l.tychei=c,e.exports=l},4391:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(7004)},4429:(e,t,n)=>{"use strict";n.d(t,{x:()=>c});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(9820);const c=(0,n(7892).op)({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;(0,o.vA)(e.length>=1,()=>"Pass at least one tensor to concat");const n=(0,s.j1)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(e.dtype,". "))}),1===n.length)return(0,i.o)(n[0]);const c=n,l={axis:t};return a.T2.runKernel(r.$dB,c,l)}})},4530:()=>{},4616:(e,t,n)=>{"use strict";n.d(t,{S:()=>i});var a=n(2164),r=n(1426),s=n(6149),o=n(4218);function i(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if((0,r.SA)(e),"complex64"===t){const t=i(e,"float32"),n=(0,o.U)(e,"float32");return(0,s.f)(t,n)}const n=(0,r.FZ)((0,r.Ze)(e),t);return a.T2.makeTensor(n,e,t)}},4642:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertParamsValid:()=>o,computeFlatOffset:()=>v,computeOutShape:()=>c,getNormalizedAxes:()=>h,isSliceContinous:()=>b,maskToAxes:()=>i,parseSliceParams:()=>x,sliceInfo:()=>w,startForAxis:()=>g,startIndicesWithElidedDims:()=>p,stopForAxis:()=>y,stopIndicesWithElidedDims:()=>f,stridesForAxis:()=>m,stridesWithElidedDims:()=>l});var a=n(1426);const r=-2,s=-1;function o(e,t,n){const r=e.shape.length;a.vA(r===t.length,()=>"Error in slice".concat(r,"D: Length of begin ").concat(t," must ")+"match the rank of the array (".concat(r,").")),a.vA(r===n.length,()=>"Error in slice".concat(r,"D: Length of size ").concat(n," must ")+"match the rank of the array (".concat(r,")."));for(let s=0;s<r;++s)a.vA(t[s]+n[s]<=e.shape[s],()=>"Error in slice".concat(r,"D: begin[").concat(s,"] + size[").concat(s,"] ")+"(".concat(t[s]+n[s],") would overflow input.shape[").concat(s,"] (").concat(e.shape[s],")"))}function i(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function c(e,t,n){const a=[];for(let r=0;r<e.length;r++)a[r]=Math.ceil((t[r]-e[r])/n[r]);return a}function l(e,t,n,a){const r=[...e];for(let s=r.length;s<a.length;s++)r.push(1);for(let s=0;s<n;s++)0===s?r[t]=1:(r.splice(t,0,1),r.pop());return r}function u(e,t,n){return n<=e?n:n-(t-1)}function d(e,t){const n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function h(e,t,n,a,r,s,o,i,c){const u=e.length;let d=new Array(u),h=new Array(u),b=new Array(u);if(t.length&&n>0){const c=t[0],u=n+1;d=p(o,c,u,a,e),h=f(i,c,u,r,e),b=l(s,c,u,e)}else for(let l=0;l<u;l++)d[l]=g(o,a,s,e,l,c),h[l]=y(i,r,s,e,l,c),b[l]=m(s,l,c);return{begin:d,end:h,strides:b}}function p(e,t,n,a,r){const s=[...r],o=d(n,t);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=0;else{const r=u(t,n,i);let o=a[r];e&1<<r&&(o=0),s[i]=o}return s}function f(e,t,n,r,s){const o=[...s],i=d(n,t);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=Number.MAX_SAFE_INTEGER;else{const s=u(t,n,a);let i=r[s];e&1<<s&&(i=Number.MAX_SAFE_INTEGER),o[a]=i}for(let c=0;c<o.length;c++){const e=s[c];o[c]<0&&(o[c]+=e),o[c]=a.qE(0,o[c],s[c])}return o}function m(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function g(e,t,n,r,s,o){let i=t[s];const c=n[s]||1;(e&1<<s||o&1<<s||null==i)&&(i=c>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=a.qE(0,i,l-1),i}function y(e,t,n,r,s,o){let i=t[s];const c=n[s]||1;(e&1<<s||o&1<<s||null==i)&&(i=c>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=c>0?a.qE(0,i,l):a.qE(-1,i,l-1),i}function b(e,t,n){let a=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){a=r;break}for(let r=a+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function v(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function x(e,t,n){let r;const s=e.shape.length;let o;return r="number"===typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach(e=>{a.vA(-1!==e,()=>"slice() does not support negative begin indexing.")}),o=null==n?new Array(s).fill(-1):"number"===typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,o=o.map((t,n)=>t>=0?t:(a.vA(-1===t,()=>"Negative size values should be exactly -1 but got "+"".concat(t," for the slice() size at index ").concat(n,".")),e.shape[n]-r[n])),[r,o]}function w(e,t,n,a,o,i,c,l,u){let d;if(null==a?(d=new Array(t.length),d.fill(1)):d=a,null!=c&&0!==(c&c-1))throw new Error("Multiple ellipses in slice is not allowed.");let h=!1;const p={dims:d.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:d.slice(),beginMask:o,endMask:i,ellipsisMask:c,newAxisMask:l,shrinkAxisMask:u};for(let r=0;r<p.dims;r++)h&&0!==(1<<r&l)&&p.numAddAxisAfterEllipsis++,1<<r&c&&(h=!0);h||(p.ellipsisMask|=1<<p.dims,p.dims++);const f={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(r),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error("Index out of range using input dim ".concat(n,"; input ")+"has only ".concat(t.dims," dims, ").concat(t.begin.length,"."));null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(s),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}(p,f);let m=!0,g=!0,y=!0;const b=[],v=[];for(let r=0;r<e.length;++r){if(0===f.strides[r])throw Error("strides[".concat(r,"] must be non-zero"));const t=!!(f.shrinkAxisMask&1<<r),n=e[r];if(-1===n){b.push(t?1:-1);continue}const a=[f.beginMask&1<<r,f.endMask&1<<r],s=[f.strides[r]>0?0:-1,f.strides[r]>0?n:n-1];if(t&&f.strides[r]<=0)throw Error("only stride 1 allowed on non-range indexing.");y=y&&1===f.strides[r];const o=!!(f.beginMask&1<<r&&f.endMask&1<<r);if(f.beginValid&&f.endValid){if(t){const e=f.begin[r]<0?n+f.begin[r]:f.begin[r];if(f.begin[r]=e,f.end[r]=f.begin[r]+1,e<0||e>=n)throw Error("slice index ".concat(f.begin[r]," of dimension ").concat(r," out of bounds."))}else f.begin[r]=k(f.begin[r],0,f.strides[r],n,a,s),f.end[r]=k(f.end[r],1,f.strides[r],n,a,s);const e=1===f.strides[r]&&0===f.begin[r]&&f.end[r]===n;m=m&&e,g=g&&(0===r&&1===f.strides[r]||e)}else m=m&&1===f.strides[r]&&o,g=g&&(0===r&&1===f.strides[r]||o);let i,c=!1;if(f.beginValid&&f.endValid?(i=f.end[r]-f.begin[r],c=!0):t?(i=1,c=!0):o&&n>=0&&(i=f.strides[r]<0?-n:n,c=!0),c){let e;e=0===i||i<0!==f.strides[r]<0?0:Math.trunc(i/f.strides[r])+(i%f.strides[r]!==0?1:0),b.push(e)}else b.push(-1)}for(let s=0;s<f.finalShapeGatherIndices.length;++s){const e=f.finalShapeGatherIndices[s];e>=0?v.push(b[e]):e===r&&v.push(1)}return{finalShapeSparse:v.filter((e,t)=>f.finalShapeGatherIndices[t]!==r),finalShape:v,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:f.begin,end:f.end,strides:f.strides}}function k(e,t,n,a,r,s){if(r[t])return n>0?s[t]:s[t+1&1];{const t=e<0?a+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}},4660:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var a=n(2164),r=n(9554),s=n(1426);function o(e,t,n){(0,s.SA)(e);const o={shape:e,value:t,dtype:n=n||(0,s.X$)(t)};return a.T2.runKernel(r.SQl,{},o)}},4759:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({acos_:function(e){const t={x:(0,s.YT)(e,"x","acos")};return a.T2.runKernel(r.Vvy,t)}})},4824:(e,t,n)=>{"use strict";n.d(t,{n:()=>u});var a=n(1839),r=n(4148),s=n(803),o=n(1011),i=n(7892),c=n(4213),l=n(9973);const u=(0,i.op)({logSigmoid_:function(e){const t=(0,r.YT)(e,"x","logSigmoid");return(0,a._X)(e=>({value:(0,o.H)((0,l.l)((0,o.H)(e))),gradFunc:t=>(0,s.l)(t,(0,c.r)((0,o.H)(e)))}))(t)}})},4894:(e,t,n)=>{"use strict";n.d(t,{M:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({tan_:function(e){const t={x:(0,s.YT)(e,"x","tan","float32")};return a.T2.runKernel(r.oFs,t)}})},4920:(e,t,n)=>{"use strict";n.d(t,{h:()=>u});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(9820),c=n(7892),l=n(5583);const u=(0,c.op)({broadcastTo_:function(e,t){let n=(0,s.YT)(e,"broadcastTo","x");const c=n.shape;if((0,o.SA)(t),t.length<n.rank)throw new Error("broadcastTo(): shape.length=".concat(t.length," < input.rank=").concat(n.rank,"."));if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,l.t)(n,e)}const u=n.shape,d=Array.from(t);for(let a=t.length-1;a>=0;a--)if(u[a]===t[a])d[a]=1;else if(1!==n.shape[a])throw new Error("broadcastTo(): [".concat(c,"] cannot be broadcast to [").concat(t,"]."));if(0===d.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return(0,i.o)(n);const h={x:n},p={reps:d};return a.T2.runKernel(r.FAs,h,p)}})},4969:(e,t,n)=>{"use strict";n.d(t,{X:()=>u});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7538),c=n(7892),l=n(5583);const u=(0,c.op)({conv2d_:function(e,t,n,c){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],h=arguments.length>6?arguments[6]:void 0;const p=(0,s.YT)(e,"x","conv2d","float32"),f=(0,s.YT)(t,"filter","conv2d","float32");let m=p,g=!1;3===p.rank&&(g=!0,m=(0,l.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o.vA(4===m.rank,()=>"Error in conv2d: input must be rank 4, but got rank ".concat(m.rank,".")),o.vA(4===f.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+"".concat(f.rank,".")),i.s_("conv2d",c,h);const y="NHWC"===u?m.shape[3]:m.shape[1];o.vA(y===f.shape[2],()=>"Error in conv2d: depth of input (".concat(y,") must match ")+"input depth for filter ".concat(f.shape[2],".")),o.vA(i.G0(n,d),()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(d,"'")),o.vA(i.qk(d),()=>"Error in conv2D: Dilated rates should be larger than 0."),o.vA(i.qk(n),()=>"Error in conv2D: Strides should be larger than 0.");const b={x:m,filter:f},v={strides:n,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h},x=a.T2.runKernel(r.p2J,b,v);return g?(0,l.t)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},4974:(e,t,n)=>{"use strict";n.d(t,{y:()=>c});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(3612);const c=(0,n(7892).op)({div_:function(e,t){let n=(0,o.YT)(e,"a","div"),c=(0,o.YT)(t,"b","div");if([n,c]=(0,s.makeTypesMatch)(n,c),"int32"===n.dtype&&"int32"===c.dtype)return(0,i.w)(n,c);const l={a:n,b:c};return a.T2.runKernel(r.sDr,l,{})}})},5043:(e,t,n)=>{"use strict";e.exports=n(4288)},5048:(e,t,n)=>{"use strict";n.d(t,{e:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const o=(0,s.YT)(e,"x","pad");if(0===o.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:t,constantValue:n},c={x:o};return a.T2.runKernel(r.ODT,c,i)}})},5149:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({unsortedSegmentSum_:function(e,t,n){const i=(0,s.YT)(e,"x","unsortedSegmentSum"),c=(0,s.YT)(t,"segmentIds","unsortedSegmentSum","int32");(0,o.vA)((0,o.E6)(n),()=>"numSegments must be of dtype int");const l={x:i,segmentIds:c},u={numSegments:n};return a.T2.runKernel(r.pPe,l,u)}})},5162:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var a=n(2164),r=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3],c=(0,o.YT)(e,"a","matMul"),l=(0,o.YT)(t,"b","matMul");[c,l]=(0,s.makeTypesMatch)(c,l);const u={a:c,b:l},d={transposeA:n,transposeB:i};return a.T2.runKernel(r.jAQ,u,d)}})},5181:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const o={x:(0,s.YT)(e,"x","split")},i={numOrSizeSplits:t,axis:n};return a.T2.runKernel(r.Blb,o,i)}})},5251:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({relu_:function(e){const t={x:(0,s.YT)(e,"x","relu")};return a.T2.runKernel(r.fUj,t)}})},5262:function(e,t,n){var a;!function(e,r){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function i(e,t){var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.tychei=i}(0,e=n.nmd(e),n.amdD)},5344:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({logicalNot_:function(e){const t={x:(0,s.YT)(e,"x","logicalNot","bool")};return a.T2.runKernel(r.nZd,t)}})},5395:(e,t,n)=>{"use strict";n.d(t,{$:()=>o});var a=n(4148),r=n(1426),s=n(9914);function o(e,t,n){if((0,r.HO)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const o=(0,a.MZ)(e,n);if(3!==o.length&&1!==o.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===o.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,s.Q)(e,t,o,n)}},5396:(e,t,n)=>{"use strict";n.d(t,{m:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({ceil_:function(e){const t={x:(0,s.YT)(e,"x","ceil","float32")};return a.T2.runKernel(r.QDP,t)}})},5399:(e,t,n)=>{"use strict";n.d(t,{Km:()=>c,OH:()=>s,_K:()=>i,tj:()=>l});var a=n(1426);const r="tfjsflags";class s{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=o,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(i().getBool("IS_TEST")||i().getBool("PROD")||console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(e,"."))),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];i().getBool("IS_TEST")||i().getBool("PROD")||console.warn("Setting feature override from URL ".concat(e,": ").concat(t,".")),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,a.yL)(t))throw new Error("Flag ".concat(e," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error("Cannot set flag ".concat(e," as it has not been registered."));this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error("Cannot evaluate flag '".concat(e,"': no evaluation function found."));return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(r in e){e[r].split(",").forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:"".concat(+n)===n?+n:t}(0,n)})}}}function o(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,function(e){for(var n=arguments.length,a=new Array(n>1?n-1:0),r=1;r<n;r++)a[r-1]=arguments[r];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,a[0],a[1]),a.join("=")}),t}function i(){return c}let c=null;function l(e){c=e}},5452:(e,t,n)=>{"use strict";n.r(t),n.d(t,{GraphModel:()=>Ye,deregisterOp:()=>A,loadGraphModel:()=>Ke,loadGraphModelSync:()=>Xe,registerOp:()=>C,version_converter:()=>Ze});var a={};n.r(a),n.d(a,{json:()=>P});var r={};n.r(r),n.d(r,{json:()=>B});var s={};n.r(s),n.d(s,{json:()=>W});var o={};n.r(o),n.d(o,{json:()=>V});var i={};n.r(i),n.d(i,{json:()=>U});var c={};n.r(c),n.d(c,{json:()=>G});var l={};n.r(l),n.d(l,{json:()=>H});var u={};n.r(u),n.d(u,{json:()=>j});var d={};n.r(d),n.d(d,{json:()=>q});var h={};n.r(h),n.d(h,{json:()=>Y});var p={};n.r(p),n.d(p,{json:()=>K});var f={};n.r(f),n.d(f,{json:()=>X});var m={};n.r(m),n.d(m,{json:()=>Z});var g={};n.r(g),n.d(g,{json:()=>Q});var y={};n.r(y),n.d(y,{json:()=>$});var b={};n.r(b),n.d(b,{json:()=>J});var v={};n.r(v),n.d(v,{json:()=>ee});var x={};n.r(x),n.d(x,{json:()=>te});var w={};n.r(w),n.d(w,{json:()=>ne});var k={};n.r(k),n.d(k,{OP_SCOPE_SUFFIX:()=>ve.BTT,abs:()=>ve.tnl,acos:()=>ve.HQu,acosh:()=>ve.FqL,add:()=>ve.WQq,addN:()=>ve.QiD,all:()=>ve.Q7R,any:()=>ve.bzn,argMax:()=>ve.FLi,argMin:()=>ve.XRg,asin:()=>ve.qRo,asinh:()=>ve.yHs,atan:()=>ve.rYl,atan2:()=>ve.FPz,atanh:()=>ve.rfv,avgPool:()=>ve.$jT,avgPool3d:()=>ve.sub,basicLSTMCell:()=>ve.lZX,batchNorm:()=>ve.$v7,batchNorm2d:()=>ve.BFc,batchNorm3d:()=>ve.kSi,batchNorm4d:()=>ve.T5N,batchToSpaceND:()=>ve.GTe,bincount:()=>ve.HbZ,bitwiseAnd:()=>ve.vjT,booleanMaskAsync:()=>ve.ftb,broadcastArgs:()=>ve.ROE,broadcastTo:()=>ve.hOW,buffer:()=>ve.ra8,cast:()=>ve.wgE,ceil:()=>ve.mkO,clipByValue:()=>ve.zQh,clone:()=>ve.o8B,complex:()=>ve.faB,concat:()=>ve.xWs,concat1d:()=>ve.I1m,concat2d:()=>ve.RPU,concat3d:()=>ve.O5O,concat4d:()=>ve.P1l,conv1d:()=>ve.kA9,conv2d:()=>ve.Xtf,conv2dTranspose:()=>ve.wX9,conv3d:()=>ve.IPL,conv3dTranspose:()=>ve.jIJ,cos:()=>ve.gnS,cosh:()=>ve.yIG,cosineWindow:()=>ve._jP,cumprod:()=>ve.Lp0,cumsum:()=>ve.rCv,denseBincount:()=>ve.aOp,depthToSpace:()=>ve.Rj8,depthwiseConv2d:()=>ve.Gl3,diag:()=>ve.smy,dilation2d:()=>ve.X7t,div:()=>ve.y4m,divNoNan:()=>ve.ek5,dot:()=>ve.Omf,dropout:()=>ve.EZY,einsum:()=>ve._3C,elu:()=>ve.Pqc,enclosingPowerOfTwo:()=>ve.FJY,ensureShape:()=>ve.QP2,equal:()=>ve.LCg,erf:()=>ve.Y12,euclideanNorm:()=>ve.p4S,exp:()=>ve.oNF,expandDims:()=>ve.UG6,expm1:()=>ve.IYd,eye:()=>ve.y5U,fft:()=>ve.hVP,fill:()=>ve.GSj,floor:()=>ve.RIf,floorDiv:()=>ve.wh_,fused:()=>ve.cZk,gather:()=>ve.kgh,gatherND:()=>ve.SY9,greater:()=>ve.rhj,greaterEqual:()=>ve.DQN,ifft:()=>ve.KGM,imag:()=>ve.ngS,image:()=>ve.Slp,inTopKAsync:()=>ve.U4u,irfft:()=>ve.ggX,isFinite:()=>ve.MIs,isInf:()=>ve.EN4,isNaN:()=>ve.yrW,leakyRelu:()=>ve.H8d,less:()=>ve.M7h,lessEqual:()=>ve.InN,linalg:()=>ve.mPL,linspace:()=>ve.mT8,localResponseNormalization:()=>ve.Kgs,log:()=>ve.Rm2,log1p:()=>ve.Kko,logSigmoid:()=>ve.nqI,logSoftmax:()=>ve.HPB,logSumExp:()=>ve.VZ,logicalAnd:()=>ve.n76,logicalNot:()=>ve.NSZ,logicalOr:()=>ve.ztW,logicalXor:()=>ve.rxB,losses:()=>ve.YYh,lowerBound:()=>ve.yzS,matMul:()=>ve.NoW,max:()=>ve.T9B,maxPool:()=>ve.jgi,maxPool3d:()=>ve.NYV,maxPoolWithArgmax:()=>ve.RO,maximum:()=>ve.PhQ,mean:()=>ve.i2o,meshgrid:()=>ve.OYQ,min:()=>ve.jkA,minimum:()=>ve.BpO,mirrorPad:()=>ve.FFZ,mod:()=>ve.ziu,moments:()=>ve.Clk,movingAverage:()=>ve.CRk,mul:()=>ve.lKK,multiRNNCell:()=>ve.YDF,multinomial:()=>ve.OjQ,neg:()=>ve.HZy,norm:()=>ve.xbf,notEqual:()=>ve.Ec,oneHot:()=>ve.Mw0,ones:()=>ve.SaS,onesLike:()=>ve.P61,op:()=>ve.op,outerProduct:()=>ve.X4o,pad:()=>ve.eVF,pad1d:()=>ve.BZs,pad2d:()=>ve.grY,pad3d:()=>ve.XHu,pad4d:()=>ve.WLX,pool:()=>ve.dzn,pow:()=>ve.n7C,prelu:()=>ve.NsG,print:()=>ve.yyV,prod:()=>ve._eU,raggedGather:()=>ve.whe,raggedRange:()=>ve.iyU,raggedTensorToTensor:()=>ve.Q0_,rand:()=>ve._9M,randomGamma:()=>ve.pR9,randomNormal:()=>ve.FE$,randomStandardNormal:()=>ve.m0H,randomUniform:()=>ve.YeY,randomUniformInt:()=>ve.HYA,range:()=>ve.y17,real:()=>ve.xav,reciprocal:()=>ve.VOZ,relu:()=>ve.VVh,relu6:()=>ve.j__,reshape:()=>ve.tQQ,reverse:()=>ve.BEg,reverse1d:()=>ve.QD2,reverse2d:()=>ve.LMr,reverse3d:()=>ve.I2l,reverse4d:()=>ve.JYU,rfft:()=>ve.z8$,round:()=>ve.LIG,rsqrt:()=>ve.Z$r,scalar:()=>ve.d_2,scatterND:()=>ve.NFr,searchSorted:()=>ve.sZg,selu:()=>ve.WfX,separableConv2d:()=>ve.wdz,setdiff1dAsync:()=>ve.F12,sigmoid:()=>ve.ry7,sign:()=>ve._SZ,signal:()=>ve.vPA,sin:()=>ve.F8e,sinh:()=>ve.L0l,slice:()=>ve.dik,slice1d:()=>ve.Q$M,slice2d:()=>ve.zAd,slice3d:()=>ve.wck,slice4d:()=>ve.R0O,softmax:()=>ve.Vs9,softplus:()=>ve.lw0,spaceToBatchND:()=>ve.eDJ,sparse:()=>ve.lMo,sparseToDense:()=>ve.Zhr,spectral:()=>ve.lOn,split:()=>ve.lDo,sqrt:()=>ve.RZD,square:()=>ve.EwI,squaredDifference:()=>ve.Pbu,squeeze:()=>ve.r2V,stack:()=>ve.t$z,step:()=>ve.PMw,stridedSlice:()=>ve.Ym9,string:()=>ve.YjP,sub:()=>ve.jbE,sum:()=>ve.czq,tan:()=>ve.Mlm,tanh:()=>ve.ymU,tensor:()=>ve.OEK,tensor1d:()=>ve.tGX,tensor2d:()=>ve.KtR,tensor3d:()=>ve.$_$,tensor4d:()=>ve.g9W,tensor5d:()=>ve.Lpo,tensor6d:()=>ve.yxw,tensorScatterUpdate:()=>ve.NNh,tile:()=>ve.Vsq,topk:()=>ve.rfw,transpose:()=>ve.mgz,truncatedNormal:()=>ve.efE,unique:()=>ve.AmM,unsortedSegmentSum:()=>ve.zAU,unstack:()=>ve.K$i,upperBound:()=>ve.rni,variable:()=>ve.bvq,where:()=>ve._M9,whereAsync:()=>ve.YJN,zeros:()=>ve.Ul9,zerosLike:()=>ve.POl});var S=n(5743);var T,N;(0,S.env)().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(T||(T={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(N||(N={}));const I={};function C(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};I[e]=n}function E(e){return I[e]}function A(e){delete I[e]}function _(e,t,n,a,r){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,o=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd,i=e<0?t.inputNames.length+e:e;if("tensor"===s.type)return R(t.inputNames[i],n,a,r);if("tensors"===s.type){const s=t.inputs.slice(e,o);return t.inputNames.slice(e,o).filter((e,t)=>{var n;return"NoOp"!==(null===(n=s[t])||void 0===n?void 0:n.op)}).map(e=>R(e,n,a,r))}const c=R(t.inputNames[i],n,a,r),l=c.dataSync();return"number"===s.type?l[0]:S.util.toNestedArray(c.shape,l)}const o=t.attrParams[e];return o&&o.value}function R(e,t,n,a){const[r,s]=M(e,n);if(null!=a){const e=a.getHashTableHandleByName(r);if(null!=e)return e}const o=n.currentContextIds.find(e=>!!t[O(r,e)]);return void 0!==o?t[O(r,o)][s]:void 0}function F(e,t,n){return t[O(e,n.currentContextId)]}function D(e,t){const[n,a,r]=M(e,t);return[O(n,t&&t.currentContextId),a,r]}function O(e,t){return t?"".concat(e,"-").concat(t):e}function M(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const a=e.split(":");let r;if(1===a.length)r=[e,0,void 0];else{const e=a[0],t=3===a.length?a[1]:void 0;r=[e,Number(a[a.length-1]),t]}return n&&t.parseNodeNameCache.set(e,r),r}function z(e,t,n){let a=_("pad",e,t,n);if("explicit"===a){a=_("explicitPaddings",e,t,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=a[2*e],r[e][1]=a[2*e+1];return r}return a}function L(e){return e.kept?e:(0,S.clone)(e)}const P=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],B=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],W=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],V=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],U=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],G=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],H=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],j=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],q=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Y=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],K=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],X=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],Z=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],Q=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],$=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],J=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],ee=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],te=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],ne=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class ae{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[a,r,s,o,i,c,l,u,d,h,p,f,m,g,y,b,v,x,w].map(e=>e.json));this.opMappers=e.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=e.node,a=[],r=[],s=[],o=n.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?a.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e),{});let i=[];const c=[];let l={},u={};null!=t&&(l=this.mapSignatureEntries(t.inputs),u=this.mapSignatureEntries(t.outputs));const d=Object.keys(o);d.forEach(e=>{const t=o[e];t.inputNames.forEach((e,n)=>{const[a,,r]=D(e),s=o[a];if(null!=s.outputs){const e=s.outputs.indexOf(r);if(-1!==e){const r="".concat(a,":").concat(e);t.inputNames[n]=r}}t.inputs.push(s),s.children.push(t)})}),0===Object.keys(u).length?d.forEach(e=>{const t=o[e];0===t.children.length&&c.push(t)}):Object.keys(u).forEach(e=>{const[t]=D(e),n=o[t];null!=n&&(n.signatureKey=u[e],c.push(n))}),Object.keys(l).length>0?Object.keys(l).forEach(e=>{const[t]=D(e),n=o[t];n&&(n.signatureKey=l[e],i.push(n))}):i=a;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));const p={nodes:o,inputs:i,outputs:c,weights:r,placeholders:a,signature:t,functions:h};return s.length>0&&(p.initNodes=s),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){const t=E(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.slice(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((t,n)=>{const a=n.type;let r;switch(n.type){case"string":r=se(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=se(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=me(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=me(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=ie(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=ie(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=fe(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=fe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=oe(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=oe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=ye(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ye(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=pe(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=pe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=ge(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ge(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=ue(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ue(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=de(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=de(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=le(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=le(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: ".concat(n.type," for op: ").concat(e.op))}return t[n.name]={value:r,type:a},t},{})),n}mapFunction(e){const t=e.nodeDef,n=[];let a={};null!=t&&(a=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e),{}));const r=[],s=[];e.signature.inputArg.forEach(e=>{const[t]=D(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ce(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),a[t]=n});Object.keys(a).forEach(e=>{const t=a[e];t.inputNames.forEach((e,n)=>{const[r,,s]=D(e),o=a[r];if(null!=o.outputs){const e=o.outputs.indexOf(s);if(-1!==e){const a="".concat(r,":").concat(e);t.inputNames[n]=a}}t.inputs.push(o),o.children.push(t)})});const o=e.ret;e.signature.outputArg.forEach(e=>{const[t,n]=D(o[e.name]),r=a[t];null!=r&&(r.defaultOutput=n,s.push(r))});const i=this.mapArgsToSignature(e);return{nodes:a,inputs:r,outputs:s,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function re(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,S.env)().global;if("undefined"!==typeof t.atob)return t.atob(e);if("undefined"!==typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function se(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return null!=r?re(r.s,a):n}function oe(e,t,n){const a=e[t];return a?a.b:n}function ie(e,t,n){const a=e[t]||{},r=null!=a.i?a.i:null!=a.f?a.f:n;return"number"===typeof r?r:parseInt(r,10)}function ce(e){switch("string"===typeof e&&(e=T[e]),e){case T.DT_FLOAT:case T.DT_HALF:return"float32";case T.DT_INT32:case T.DT_INT64:case T.DT_INT8:case T.DT_UINT8:return"int32";case T.DT_BOOL:return"bool";case T.DT_DOUBLE:return"float32";case T.DT_STRING:return"string";case T.DT_COMPLEX64:case T.DT_COMPLEX128:return"complex64";default:return null}}function le(e,t,n){const a=e[t];return a&&a.func?a.func.name:n}function ue(e,t,n){const a=e[t];return a&&a.type?ce(a.type):n}function de(e,t,n){const a=e[t];return a&&a.list&&a.list.type?a.list.type.map(e=>ce(e)):n}function he(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"===typeof e.size?e.size:parseInt(e.size,10)):[]}function pe(e,t,n){const a=e[t];return a&&a.shape?he(a.shape):n}function fe(e,t,n){const a=e[t];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map(e=>"number"===typeof e?e:parseInt(e,10)):n}function me(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return r&&r.list&&r.list.s?r.list.s.map(e=>re(e,a)):n}function ge(e,t,n){const a=e[t];return a&&a.list&&a.list.shape?a.list.shape.map(e=>he(e)):n}function ye(e,t,n){const a=e[t];return a&&a.list&&a.list.b?a.list.b:n}class be{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return R(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return R(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return ie(this.node.rawAttrs,e,t);if(null!=n.s)return se(this.node.rawAttrs,e,t);if(null!=n.b)return oe(this.node.rawAttrs,e,t);if(null!=n.shape)return pe(this.node.rawAttrs,e,t);if(null!=n.type)return ue(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return fe(this.node.rawAttrs,e,t);if(null!=n.list.s)return me(this.node.rawAttrs,e,t);if(null!=n.list.shape)return ge(this.node.rawAttrs,e,t);if(null!=n.list.b)return ye(this.node.rawAttrs,e,t);if(null!=n.list.type)return de(this.node.rawAttrs,e,t)}return t}}var ve=n(9249);function xe(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!==typeof e&&"number"!==typeof t){S.util.assert(e.length===t.length,()=>n+" Shapes ".concat(e," and ").concat(t," must match"));for(let a=0;a<e.length;a++){const r=e[a],s=t[a];S.util.assert(r<0||s<0||r===s,()=>n+" Shapes ".concat(e," and ").concat(t," must match"))}}}function we(e){return"number"!==typeof e&&!e.some(e=>e<0)}function ke(e,t,n){let a=Se(e,n);const r=!we(a);if(r&&0===t.length)throw new Error("Tried to calculate elements of an empty list"+" with non-fully-defined elementShape: ".concat(a));if(r&&t.forEach(e=>{a=Se(e.shape,a)}),!we(a))throw new Error("Non-fully-defined elementShape: ".concat(a));return a}function Se(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error("Incompatible ranks during merge: ".concat(e," vs. ").concat(t));const n=[];for(let a=0;a<e.length;++a){const r=e[a],s=t[a];if(r>=0&&s>=0&&r!==s)throw new Error("Incompatible shape during merge: ".concat(e," vs. ").concat(t));n[a]=r>=0?r:s}return n}class Te{constructor(e,t,n,a,r,s,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=(0,S.scalar)(0),(0,S.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||e>=this.size())throw new Error("Tried to read from index ".concat(e,", but array size is: ").concat(this.size()));const t=this.tensors[e];if(t.cleared)throw new Error("TensorArray ".concat(this.name,": Could not read index ").concat(e," twice because it was cleared after a previous read ")+"(perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error("Tried to write to index ".concat(e,", but array is not resizeable and size is: ").concat(this.maxSize));const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,",\n          because the value dtype is ").concat(t.dtype,", but TensorArray dtype is ").concat(this.dtype,"."));if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),xe(this.elementShape,t.shape,"TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,".")),n.read)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been read."));if(n.written)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been written."));n.tensor=t,(0,S.keep)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error("TensorArray ".concat(this.name,": could not write multiple tensors,")+"because the index size: ".concat(e.length," is not the same as tensors size: ").concat(t.length,"."));e.forEach((e,n)=>this.write(e,t[n]))}gather(e,t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but gather requested dtype ").concat(t));if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,S.tensor)([],[0].concat(this.elementShape));const n=this.readMany(e);return xe(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,S.stack)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but concat requested dtype ").concat(e));if(0===this.size())return(0,S.tensor)([],[0].concat(this.elementShape));const t=[];for(let a=0;a<this.size();a++)t.push(a);const n=this.readMany(t);return xe(this.elementShape,n[0].shape,"TensorArray shape mismatch: tensor array shape (".concat(this.elementShape,") vs first tensor shape (").concat(n[0].shape,")")),(0,S.concat)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(e.length," vs. ").concat(t.shape[0]));const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error("Max index must be < array size (".concat(n,"  vs. ").concat(this.maxSize,")"));this.writeMany(e,(0,S.unstack)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));let n=0;const a=e.map(e=>(n+=e,n));if(n!==t.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(n,", and tensor's shape is: ").concat(t.shape));if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths (".concat(this.maxSize," vs. ").concat(e.length,"), ")+"and the TensorArray is not marked as dynamically resizeable");const r=0===n?0:t.size/n,s=[];(0,S.tidy)(()=>{t=(0,S.reshape)(t,[1,n,r]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:a[n-1],0],i=[1,e[n],r];s[n]=(0,S.reshape)((0,S.slice)(t,o,i),this.elementShape)}return s});const o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,s)}}class Ne{get id(){return this.idTensor.id}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach(e=>{if(n!==e.dtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(e.dtype));xe(t,e.shape,"TensorList shape mismatch: "),(0,S.keep)(e)}),this.idTensor=(0,S.scalar)(0),this.maxNumElements=a,(0,S.keep)(this.idTensor)}copy(){return new Ne([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.id)||t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(-1!==n&&this.tensors.length!==n)throw new Error("Operation expected a list with ".concat(n," elements but got a list with ").concat(this.tensors.length," elements."));xe(e,this.elementShape,"TensorList shape mismatch: ");const a=ke(this.elementShape,this.tensors,e);return(0,S.tidy)(()=>{const e=this.tensors.map(e=>(0,S.reshape)(e,a));return(0,S.stack)(e,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=ke(this.elementShape,this.tensors,e),a=this.tensors.pop();return a.kept=!1,xe(a.shape,e,"TensorList shape mismatch: "),(0,S.reshape)(a,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(this.elementDtype));if(xe(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,S.keep)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: ".concat(e));if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error("TensorListResize input size ".concat(e," is greater maxNumElement ").concat(this.maxNumElements,"."));const t=new Ne([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(this.elementDtype));if(e<0||e>this.tensors.length)throw new Error("Trying to access element ".concat(e," in a list with ").concat(this.tensors.length," elements."));if(null==this.tensors[e])throw new Error("element at index ".concat(e," is null."));xe(this.tensors[e].shape,t,"TensorList shape mismatch: ");const a=ke(this.elementShape,this.tensors,t);return(0,S.reshape)(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(this.elementDtype));if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error("Trying to set element ".concat(e," in a list with max ").concat(this.maxNumElements," elements."));xe(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,S.keep)(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));xe(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const a=ke(this.elementShape,this.tensors,n);return 0===e.length?(0,S.tensor)([],[0].concat(a)):(0,S.tidy)(()=>{const t=e.map(e=>(0,S.reshape)(this.tensors[e],a));return(0,S.stack)(t,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error("TensorList dtype is ".concat(this.elementDtype," but concat requested dtype ").concat(e));xe(this.elementShape,t,"TensorList shape mismatch: ");const n=ke(this.elementShape,this.tensors,t);return 0===this.size()?(0,S.tensor)([],[0].concat(n)):(0,S.tidy)(()=>{const e=this.tensors.map(e=>(0,S.reshape)(e,n));return(0,S.concat)(e,0)})}}const Ie=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const a=_("thenBranch",e,t,n),r=_("elseBranch",e,t,n),s=_("cond",e,t,n),o=_("args",e,t,n);return(await s.data())[0]?n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const a=_("body",e,t,n),r=_("cond",e,t,n),s=_("args",e,t,n),o=await n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),i=s.map(e=>e.id);let c=await o[0].data();o.forEach(e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()});let l=s;for(;c[0];){const e=l;l=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map(e=>e.id);e.forEach(e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()});const s=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);c=await s[0].data(),s.forEach(e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()})}return l}case"LoopCond":return[L(_("pred",e,t,n))];case"Switch":{const a=_("pred",e,t,n);let r=_("data",e,t,n);return r.kept||(r=L(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const a=e.inputNames.find(e=>void 0!==R(e,t,n));if(a){return[L(R(a,t,n))]}return}case"Enter":{const a=_("frameName",e,t,n),r=_("tensor",e,t,n);return n.enterFrame(a),[L(r)]}case"Exit":{const a=_("tensor",e,t,n);return n.exitFrame(),[L(a)]}case"NextIteration":{const a=_("tensor",e,t,n);return n.nextIteration(),[L(a)]}case"TensorArrayV3":{const a=_("size",e,t,n),r=_("dtype",e,t,n),s=_("elementShape",e,t,n),o=_("dynamicSize",e,t,n),i=_("clearAfterRead",e,t,n),c=_("identicalElementShapes",e,t,n),l=_("name",e,t,n),u=new Te(l,r,a,s,c,o,i);return n.addTensorArray(u),[u.idTensor,(0,S.scalar)(1)]}case"TensorArrayWriteV3":{const a=_("tensorArrayId",e,t,n),r=_("index",e,t,n),s=_("tensor",e,t,n),o=n.getTensorArray(a.id);return o.write(r,s),[o.idTensor]}case"TensorArrayReadV3":{const a=_("tensorArrayId",e,t,n),r=_("index",e,t,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{const a=_("tensorArrayId",e,t,n),r=_("indices",e,t,n),s=_("dtype",e,t,n);return[n.getTensorArray(a.id).gather(r,s)]}case"TensorArrayScatterV3":{const a=_("tensorArrayId",e,t,n),r=_("indices",e,t,n),s=_("tensor",e,t,n),o=n.getTensorArray(a.id);return o.scatter(r,s),[o.idTensor]}case"TensorArrayConcatV3":{const a=_("tensorArrayId",e,t,n),r=n.getTensorArray(a.id),s=_("dtype",e,t,n);return[r.concat(s)]}case"TensorArraySplitV3":{const a=_("tensorArrayId",e,t,n),r=_("tensor",e,t,n),s=_("lengths",e,t,n),o=n.getTensorArray(a.id);return o.split(s,r),[o.idTensor]}case"TensorArraySizeV3":{const a=_("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return[(0,S.scalar)(r.size(),"int32")]}case"TensorArrayCloseV3":{const a=_("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const a=_("tensorListId",e,t,n),r=_("index",e,t,n),s=_("tensor",e,t,n),o=n.getTensorList(a.id);return o.setItem(r,s),[o.idTensor]}case"TensorListGetItem":{const a=_("tensorListId",e,t,n),r=_("index",e,t,n),s=_("elementShape",e,t,n),o=_("elementDType",e,t,n);return[n.getTensorList(a.id).getItem(r,s,o)]}case"TensorListScatterV2":case"TensorListScatter":{const a=_("indices",e,t,n),r=function(e,t,n,a){if(t.length!==e.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(t.length," vs. ").concat(e.shape[0]));const r=Math.max(...t);if(null!=a&&-1!==a&&r>=a)throw new Error("Max index must be < array size (".concat(r,"  vs. ").concat(a,")"));const s=new Ne([],n,e.dtype,a),o=(0,S.unstack)(e,0);return t.forEach((e,t)=>{s.setItem(e,o[t])}),s}(_("tensor",e,t,n),a,_("elementShape",e,t,n),_("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const a=_("elementShape",e,t,n),r=_("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=_(s,e,t,n),i=function(e,t,n,a){return new Ne([],e,t,a)}(a,r,0,"TensorListReserve"===e.op?-1:o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const a=_("tensorListId",e,t,n),r=_("indices",e,t,n),s=_("elementShape",e,t,n),o=_("elementDType",e,t,n);return[n.getTensorList(a.id).gather(r,o,s)]}case"TensorListStack":{const a=_("tensorListId",e,t,n),r=_("elementShape",e,t,n),s=_("elementDType",e,t,n),o=_("numElements",e,t,n);return[n.getTensorList(a.id).stack(r,s,o)]}case"TensorListFromTensor":{const a=function(e,t,n){const a=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: ".concat(e.shape));if(e.dtype!==n)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(n));xe(e.shape.slice(1),t,"TensorList shape mismatch: ");const r=(0,S.unstack)(e);return new Ne(r,t,a)}(_("tensor",e,t,n),_("elementShape",e,t,n),_("elementDType",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const a=_("tensorListId",e,t,n),r=n.getTensorList(a.id),s=_("dtype",e,t,n),o=_("elementShape",e,t,n);return[r.concat(s,o)]}case"TensorListPushBack":{const a=_("tensorListId",e,t,n),r=_("tensor",e,t,n),s=n.getTensorList(a.id);return s.pushBack(r),[s.idTensor]}case"TensorListPopBack":{const a=_("tensorListId",e,t,n),r=_("elementShape",e,t,n),s=_("elementDType",e,t,n);return[n.getTensorList(a.id).popBack(r,s)]}case"TensorListSplit":{const a=_("tensor",e,t,n),r=_("elementShape",e,t,n),s=function(e,t,n){let a=0;const r=t.map(e=>(a+=e,a));if(a!==e.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(a,", and tensor's shape is: ").concat(e.shape));const s=Se(e.shape.slice(1),n),o=0===a?0:e.size/a,i=(0,S.tidy)(()=>{const n=[];e=(0,S.reshape)(e,[1,a,o]);for(let a=0;a<t.length;++a){const i=[0,0===a?0:r[a-1],0],c=[1,t[a],o];n[a]=(0,S.reshape)((0,S.slice)(e,i,c),s)}return e.dispose(),n}),c=new Ne([],n,e.dtype,t.length);for(let l=0;l<i.length;l++)c.setItem(l,i[l]);return c}(a,_("lengths",e,t,n),r);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{const a=_("tensorListId",e,t,n),r=n.getTensorList(a.id);return[(0,S.scalar)(r.size(),"int32")]}case"TensorListResize":{const a=_("tensorListId",e,t,n),r=_("size",e,t,n),s=n.getTensorList(a.id).resize(r);return n.addTensorList(s),[s.idTensor]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}};function Ce(e,t,n){const[a,r]=_("fusedOps",e,t,n),s="biasadd"===a,o=!s,i="prelu"===r,c="fusedbatchnorm"===a,l=_("numArgs",e,t,n);if(s){if(i&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(c)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const u=_("strides",e,t,n),d=z(e,t,n),h=_("dataFormat",e,t,n).toUpperCase(),p=_("dilations",e,t,n);let[f,m]=_("args",e,t,n);o&&(m=f,f=void 0);return{stride:u,pad:d,dataFormat:h,dilations:p,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:_("leakyreluAlpha",e,t,n)}}function Ee(e,t,n){return{boxes:_("boxes",e,t,n),scores:_("scores",e,t,n),maxOutputSize:_("maxOutputSize",e,t,n),iouThreshold:_("iouThreshold",e,t,n),scoreThreshold:_("scoreThreshold",e,t,n),softNmsSigma:_("softNmsSigma",e,t,n)}}var Ae=n(1997);class _e{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,S.scalar)(0),this.tensorMap=new Map,(0,S.keep)(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ae.d(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),(0,S.tidy)(()=>{const e=(0,S.unstack)(t),a=n.length,r=e.length;S.util.assert(a===r,()=>"The number of elements doesn't match, keys has "+"".concat(a," elements, the values has ").concat(r," ")+"elements.");for(let t=0;t<a;t++){const a=n[t],r=e[t];(0,S.keep)(r),this.tensorMap.set(a,r)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,S.tidy)(()=>{const e=[];for(let a=0;a<n.length;a++){const r=n[a],s=this.findWithDefault(r,t);e.push(s)}return(0,S.stack)(e)})}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error("Expect key dtype ".concat(this.keyDType,", but got ")+"".concat(e.dtype));if(t.dtype!==this.valueDType)throw new Error("Expect value dtype ".concat(this.valueDType,", but got ")+"".concat(t.dtype))}}function Re(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:S.tidy;const s=((e,t,n)=>{switch(e.category){case"arithmetic":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[a.add(_("a",e,t,n),_("b",e,t,n))];case"AddN":return[a.addN(_("tensors",e,t,n))];case"FloorMod":case"Mod":return[a.mod(_("a",e,t,n),_("b",e,t,n))];case"Mul":return[a.mul(_("a",e,t,n),_("b",e,t,n))];case"RealDiv":case"Div":return[a.div(_("a",e,t,n),_("b",e,t,n))];case"DivNoNan":return[a.divNoNan(_("a",e,t,n),_("b",e,t,n))];case"FloorDiv":return[a.floorDiv(_("a",e,t,n),_("b",e,t,n))];case"Sub":return[a.sub(_("a",e,t,n),_("b",e,t,n))];case"Minimum":return[a.minimum(_("a",e,t,n),_("b",e,t,n))];case"Maximum":return[a.maximum(_("a",e,t,n),_("b",e,t,n))];case"Pow":return[a.pow(_("a",e,t,n),_("b",e,t,n))];case"SquaredDifference":return[a.squaredDifference(_("a",e,t,n),_("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n));case"basic_math":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Abs":case"ComplexAbs":return[a.abs(_("x",e,t,n))];case"Acos":return[a.acos(_("x",e,t,n))];case"Acosh":return[a.acosh(_("x",e,t,n))];case"Asin":return[a.asin(_("x",e,t,n))];case"Asinh":return[a.asinh(_("x",e,t,n))];case"Atan":return[a.atan(_("x",e,t,n))];case"Atan2":return[a.atan2(_("x",e,t,n),_("y",e,t,n))];case"Atanh":return[a.atanh(_("x",e,t,n))];case"Ceil":return[a.ceil(_("x",e,t,n))];case"Complex":return[a.complex(_("real",e,t,n),_("imag",e,t,n))];case"Cos":return[a.cos(_("x",e,t,n))];case"Cosh":return[a.cosh(_("x",e,t,n))];case"Elu":return[a.elu(_("x",e,t,n))];case"Erf":return[a.erf(_("x",e,t,n))];case"Exp":return[a.exp(_("x",e,t,n))];case"Expm1":return[a.expm1(_("x",e,t,n))];case"Floor":return[a.floor(_("x",e,t,n))];case"Log":return[a.log(_("x",e,t,n))];case"Log1p":return[a.log1p(_("x",e,t,n))];case"Imag":return[a.imag(_("x",e,t,n))];case"Neg":return[a.neg(_("x",e,t,n))];case"Reciprocal":return[a.reciprocal(_("x",e,t,n))];case"Real":return[a.real(_("x",e,t,n))];case"Relu":return[a.relu(_("x",e,t,n))];case"Round":return[a.round(_("x",e,t,n))];case"Selu":return[a.selu(_("x",e,t,n))];case"Sigmoid":return[a.sigmoid(_("x",e,t,n))];case"Sin":return[a.sin(_("x",e,t,n))];case"Sign":return[a.sign(_("x",e,t,n))];case"Sinh":return[a.sinh(_("x",e,t,n))];case"Softplus":return[a.softplus(_("x",e,t,n))];case"Sqrt":return[a.sqrt(_("x",e,t,n))];case"Square":return[a.square(_("x",e,t,n))];case"Tanh":return[a.tanh(_("x",e,t,n))];case"Tan":return[a.tan(_("x",e,t,n))];case"ClipByValue":return[a.clipByValue(_("x",e,t,n),_("clipValueMin",e,t,n),_("clipValueMax",e,t,n))];case"Relu6":return[a.relu6(_("x",e,t,n))];case"Rsqrt":return[a.rsqrt(R(e.inputNames[0],t,n))];case"LeakyRelu":return[a.leakyRelu(_("x",e,t,n),_("alpha",e,t,n))];case"Prelu":return[a.prelu(_("x",e,t,n),_("alpha",e,t,n))];case"IsNan":return[a.isNaN(R(e.inputNames[0],t,n))];case"IsInf":return[a.isInf(R(e.inputNames[0],t,n))];case"IsFinite":return[a.isFinite(R(e.inputNames[0],t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n));case"control":return Ie(e,t,n);case"convolution":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Conv1D":{const r=_("stride",e,t,n),s=_("pad",e,t,n),o=_("dataFormat",e,t,n).toUpperCase(),i=_("dilation",e,t,n);return[a.conv1d(_("x",e,t,n),_("filter",e,t,n),r,s,o,i)]}case"Conv2D":{const r=_("strides",e,t,n),s=z(e,t,n),o=_("dataFormat",e,t,n).toUpperCase(),i=_("dilations",e,t,n);return[a.conv2d(_("x",e,t,n),_("filter",e,t,n),[r[1],r[2]],s,o,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:s,dataFormat:o,dilations:i,biasArg:c,preluArg:l,activationFunc:u,leakyreluAlpha:d}=Ce(e,t,n);return[a.fused.conv2d({x:_("x",e,t,n),filter:_("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:c,activation:u,preluActivationWeights:l,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:s,dataFormat:o,dilations:i,biasArg:c,preluArg:l,activationFunc:u,leakyreluAlpha:d}=Ce(e,t,n);return[a.fused.depthwiseConv2d({x:_("x",e,t,n),filter:_("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:c,activation:u,preluActivationWeights:l,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=_("outputShape",e,t,n),s=_("strides",e,t,n),o=z(e,t,n);return[a.conv2dTranspose(_("x",e,t,n),_("filter",e,t,n),r,[s[1],s[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=_("strides",e,t,n),s=z(e,t,n),o=_("dilations",e,t,n),i=_("dataFormat",e,t,n).toUpperCase();return[a.depthwiseConv2d(_("input",e,t,n),_("filter",e,t,n),[r[1],r[2]],s,i,[o[1],o[2]])]}case"Conv3D":{const r=_("strides",e,t,n),s=_("pad",e,t,n),o=_("dataFormat",e,t,n).toUpperCase(),i=_("dilations",e,t,n);return[a.conv3d(_("x",e,t,n),_("filter",e,t,n),[r[1],r[2],r[3]],s,o,[i[1],i[2],i[3]])]}case"AvgPool":{const r=_("strides",e,t,n),s=_("pad",e,t,n),o=_("kernelSize",e,t,n);return[a.avgPool(_("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s)]}case"MaxPool":{const r=_("strides",e,t,n),s=_("pad",e,t,n),o=_("kernelSize",e,t,n);return[a.maxPool(_("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{const r=_("strides",e,t,n),s=_("pad",e,t,n),o=_("kernelSize",e,t,n),i=_("includeBatchInIndex",e,t,n),{result:c,indexes:l}=a.maxPoolWithArgmax(_("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s,i);return[c,l]}case"AvgPool3D":{const r=_("strides",e,t,n),s=_("pad",e,t,n),o=_("kernelSize",e,t,n);return[a.avgPool3d(_("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{const r=_("strides",e,t,n),s=_("pad",e,t,n),o=_("kernelSize",e,t,n);return[a.maxPool3d(_("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{const r=_("strides",e,t,n),s=_("pad",e,t,n),o=_("dilations",e,t,n),i=r[1],c=r[2],l=o[1],u=o[2];return[a.dilation2d(_("x",e,t,n),_("filter",e,t,n),[i,c],s,[l,u],"NHWC")]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n));case"creation":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Fill":{const r=_("shape",e,t,n),s=_("dtype",e,t,n),o=_("value",e,t,n);return[a.fill(r,o,s)]}case"LinSpace":{const r=_("start",e,t,n),s=_("stop",e,t,n),o=_("num",e,t,n);return[a.linspace(r,s,o)]}case"Multinomial":{const r=_("logits",e,t,n),s=_("numSamples",e,t,n),o=_("seed",e,t,n);return[a.multinomial(r,s,o)]}case"OneHot":{const r=_("indices",e,t,n),s=_("depth",e,t,n),o=_("onValue",e,t,n),i=_("offValue",e,t,n),c=_("dtype",e,t,n);return[a.oneHot(r,s,o,i,c)]}case"Ones":return[a.ones(_("shape",e,t,n),_("dtype",e,t,n))];case"OnesLike":return[a.onesLike(_("x",e,t,n))];case"RandomStandardNormal":return[a.randomStandardNormal(_("shape",e,t,n),_("dtype",e,t,n),_("seed",e,t,n))];case"RandomUniform":return[a.randomUniform(_("shape",e,t,n),_("minval",e,t,n),_("maxval",e,t,n),_("dtype",e,t,n))];case"RandomUniformInt":return[a.randomUniformInt(_("shape",e,t,n),_("minval",e,t,n),_("maxval",e,t,n),_("seed",e,t,n))];case"Range":{const r=_("start",e,t,n),s=_("stop",e,t,n),o=_("step",e,t,n);return[a.range(r,s,o,_("dtype",e,t,n))]}case"TruncatedNormal":{const r=_("shape",e,t,n),s=_("mean",e,t,n),o=_("stdDev",e,t,n),i=_("seed",e,t,n);return[a.truncatedNormal(r,s,o,_("dtype",e,t,n),i)]}case"Zeros":return[a.zeros(_("shape",e,t,n),_("dtype",e,t,n))];case"ZerosLike":return[a.zerosLike(_("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n));case"dynamic":return async function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:k;switch(e.op){case"NonMaxSuppressionV5":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=Ee(e,t,n),u=await r.image.nonMaxSuppressionWithScoreAsync(a,s,o,i,c,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=Ee(e,t,n),l=_("padToMaxOutputSize",e,t,n),u=await r.image.nonMaxSuppressionPaddedAsync(a,s,o,i,c,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=Ee(e,t,n);return[await r.image.nonMaxSuppressionAsync(a,s,o,i,c)]}case"Where":{const a=r.cast(_("condition",e,t,n),"bool"),s=[await r.whereAsync(a)];return a.dispose(),s}case"ListDiff":return r.setdiff1dAsync(_("x",e,t,n),_("y",e,t,n));default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n);case"evaluation":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"LowerBound":{const r=_("sortedSequence",e,t,n),s=_("values",e,t,n);return[a.lowerBound(r,s)]}case"TopKV2":{const r=_("x",e,t,n),s=_("k",e,t,n),o=_("sorted",e,t,n),i=a.topk(r,s,o);return[i.values,i.indices]}case"UpperBound":{const r=_("sortedSequence",e,t,n),s=_("values",e,t,n);return[a.upperBound(r,s)]}case"Unique":{const r=_("x",e,t,n),s=a.unique(r);return[s.values,s.indices]}case"UniqueV2":{const r=_("x",e,t,n),s=_("axis",e,t,n),o=a.unique(r,s);return[o.values,o.indices]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n));case"image":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"ResizeBilinear":{const r=_("images",e,t,n),s=_("size",e,t,n),o=_("alignCorners",e,t,n),i=_("halfPixelCenters",e,t,n);return[a.image.resizeBilinear(r,[s[0],s[1]],o,i)]}case"ResizeNearestNeighbor":{const r=_("images",e,t,n),s=_("size",e,t,n),o=_("alignCorners",e,t,n),i=_("halfPixelCenters",e,t,n);return[a.image.resizeNearestNeighbor(r,[s[0],s[1]],o,i)]}case"CropAndResize":{const r=_("image",e,t,n),s=_("boxes",e,t,n),o=_("boxInd",e,t,n),i=_("cropSize",e,t,n),c=_("method",e,t,n),l=_("extrapolationValue",e,t,n);return[a.image.cropAndResize(r,s,o,i,c,l)]}case"ImageProjectiveTransformV3":{const r=_("images",e,t,n),s=_("transforms",e,t,n),o=_("outputShape",e,t,n),i=_("fillValue",e,t,n),c=_("interpolation",e,t,n),l=_("fillMode",e,t,n);return[a.image.transform(r,s,c.toLowerCase(),l.toLowerCase(),i,o)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n));case"graph":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=_("default",e,t,n);return[R(e.name,t,n)||r];case"Placeholder":return[R(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[L(_("x",e,t,n))];case"IdentityN":return _("x",e,t,n).map(e=>L(e));case"Shape":return[a.tensor1d(_("x",e,t,n).shape,"int32")];case"ShapeN":return _("x",e,t,n).map(e=>a.tensor1d(e.shape));case"Size":return[a.scalar(_("x",e,t,n).size,"int32")];case"Rank":return[a.scalar(_("x",e,t,n).rank,"int32")];case"NoOp":return[a.scalar(1)];case"Print":const s=_("x",e,t,n),o=_("data",e,t,n),i=_("message",e,t,n),c=_("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<o.length;e++)console.log(Array.prototype.slice.call(o[e].dataSync()).slice(0,c));return[s];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n));case"logical":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Equal":return[a.equal(_("a",e,t,n),_("b",e,t,n))];case"NotEqual":return[a.notEqual(_("a",e,t,n),_("b",e,t,n))];case"Greater":return[a.greater(_("a",e,t,n),_("b",e,t,n))];case"GreaterEqual":return[a.greaterEqual(_("a",e,t,n),_("b",e,t,n))];case"Less":return[a.less(_("a",e,t,n),_("b",e,t,n))];case"LessEqual":return[a.lessEqual(_("a",e,t,n),_("b",e,t,n))];case"LogicalAnd":return[a.logicalAnd(_("a",e,t,n),_("b",e,t,n))];case"LogicalNot":return[a.logicalNot(_("a",e,t,n))];case"LogicalOr":return[a.logicalOr(_("a",e,t,n),_("b",e,t,n))];case"Select":case"SelectV2":return[a.where(_("condition",e,t,n),_("a",e,t,n),_("b",e,t,n))];case"BitwiseAnd":return[a.bitwiseAnd(_("a",e,t,n),_("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n));case"matrices":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[a.matMul(_("a",e,t,n),_("b",e,t,n),_("transposeA",e,t,n),_("transposeB",e,t,n))];case"Einsum":return[a.einsum(_("equation",e,t,n),..._("tensors",e,t,n))];case"Transpose":return[a.transpose(_("x",e,t,n),_("perm",e,t,n))];case"_FusedMatMul":const[r,s]=_("fusedOps",e,t,n),o="biasadd"===r,i="prelu"===s,c=_("numArgs",e,t,n),l=_("leakyreluAlpha",e,t,n);if(o){if(i&&2!==c)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==c)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,d]=_("args",e,t,n);return[a.fused.matMul({a:_("a",e,t,n),b:_("b",e,t,n),transposeA:_("transposeA",e,t,n),transposeB:_("transposeB",e,t,n),bias:u,activation:s,preluActivationWeights:d,leakyreluAlpha:l})];case"MatrixBandPart":return[a.linalg.bandPart(_("a",e,t,n),_("numLower",e,t,n),_("numUpper",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n));case"normalization":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"EuclideanNorm":return[a.euclideanNorm(_("x",e,t,n),_("axis",e,t,n),_("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[a.batchNorm(_("x",e,t,n),_("mean",e,t,n),_("variance",e,t,n),_("offset",e,t,n),_("scale",e,t,n),_("epsilon",e,t,n))];case"LRN":return[a.localResponseNormalization(_("x",e,t,n),_("radius",e,t,n),_("bias",e,t,n),_("alpha",e,t,n),_("beta",e,t,n))];case"Softmax":return[a.softmax(_("x",e,t,n))];case"LogSoftmax":return[a.logSoftmax(_("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n));case"ragged":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:s}=a.raggedGather(_("paramsNestedSplits",e,t,n),_("paramsDenseValues",e,t,n),_("indices",e,t,n),_("outputRaggedRank",e,t,n));return r.concat(s)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:s}=a.raggedRange(_("starts",e,t,n),_("limits",e,t,n),_("splits",e,t,n));return[r,s]}case"RaggedTensorToTensor":return[a.raggedTensorToTensor(_("shape",e,t,n),_("values",e,t,n),_("defaultValue",e,t,n),_("rowPartitionTensors",e,t,n),_("rowPartitionTypes",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n));case"reduction":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Max":{const r=_("axis",e,t,n),s=_("keepDims",e,t,n);return[a.max(_("x",e,t,n),r,s)]}case"Mean":{const r=_("axis",e,t,n),s=_("keepDims",e,t,n);return[a.mean(_("x",e,t,n),r,s)]}case"Min":{const r=_("axis",e,t,n),s=_("keepDims",e,t,n);return[a.min(_("x",e,t,n),r,s)]}case"Sum":{const r=_("axis",e,t,n),s=_("keepDims",e,t,n);return[a.sum(_("x",e,t,n),r,s)]}case"All":{const r=_("axis",e,t,n),s=_("keepDims",e,t,n);return[a.all(_("x",e,t,n),r,s)]}case"Any":{const r=_("axis",e,t,n),s=_("keepDims",e,t,n);return[a.any(_("x",e,t,n),r,s)]}case"ArgMax":{const r=_("axis",e,t,n);return[a.argMax(_("x",e,t,n),r)]}case"ArgMin":{const r=_("axis",e,t,n);return[a.argMin(_("x",e,t,n),r)]}case"Prod":{const r=_("axis",e,t,n),s=_("keepDims",e,t,n);return[a.prod(_("x",e,t,n),r,s)]}case"Cumprod":{const r=_("axis",e,t,n),s=_("exclusive",e,t,n),o=_("reverse",e,t,n);return[a.cumprod(_("x",e,t,n),r,s,o)]}case"Cumsum":{const r=_("axis",e,t,n),s=_("exclusive",e,t,n),o=_("reverse",e,t,n);return[a.cumsum(_("x",e,t,n),r,s,o)]}case"Bincount":const r=_("x",e,t,n),s=_("weights",e,t,n),o=_("size",e,t,n);return[a.bincount(r,s,o)];case"DenseBincount":{const r=_("x",e,t,n),s=_("weights",e,t,n),o=_("size",e,t,n),i=_("binaryOutput",e,t,n);return[a.denseBincount(r,s,o,i)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n));case"slice_join":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"ConcatV2":case"Concat":{const r=_("n",e,t,n),s=_("axis",e,t,n);let o=_("tensors",e,t,n);return o=o.slice(0,r),[a.concat(o,s)]}case"Gather":{const r=_("x",e,t,n),s=_("indices",e,t,n);return[a.gather(r,a.cast(s,"int32"),0)]}case"GatherV2":{const r=_("axis",e,t,n),s=_("batchDims",e,t,n),o=_("x",e,t,n),i=_("indices",e,t,n);return[a.gather(o,a.cast(i,"int32"),r,s)]}case"Reverse":{const r=_("dims",e,t,n),s=[];for(let e=0;e<r.length;e++)r[e]&&s.push(e);const o=_("x",e,t,n);return[a.reverse(o,s)]}case"ReverseV2":{const r=_("axis",e,t,n),s=_("x",e,t,n);return[a.reverse(s,r)]}case"Slice":{const r=_("begin",e,t,n),s=_("size",e,t,n);return[a.slice(_("x",e,t,n),r,s)]}case"StridedSlice":{const r=_("begin",e,t,n),s=_("end",e,t,n),o=_("strides",e,t,n),i=_("beginMask",e,t,n),c=_("endMask",e,t,n),l=_("ellipsisMask",e,t,n),u=_("newAxisMask",e,t,n),d=_("shrinkAxisMask",e,t,n),h=_("x",e,t,n);return[a.stridedSlice(h,r,s,o,i,c,l,u,d)]}case"Pack":return(0,S.tidy)(()=>{const r=_("axis",e,t,n),s=_("tensors",e,t,n),o=s[0].shape,i=a.squeeze(s[0]).shape,c=s.map(e=>{const t=S.util.arraysEqual(e.shape,o);if(!t&&!S.util.arraysEqual(a.squeeze(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:a.reshape(e,o)});return[a.stack(c,r)]});case"Unpack":{const r=_("axis",e,t,n),s=_("tensor",e,t,n);return a.unstack(s,r)}case"Tile":{const r=_("reps",e,t,n);return[a.tile(_("x",e,t,n),r)]}case"Split":case"SplitV":{const r=_("axis",e,t,n),s=_("numOrSizeSplits",e,t,n),o=_("x",e,t,n);return a.split(o,s,r)}case"ScatterNd":{const r=_("indices",e,t,n),s=_("values",e,t,n),o=_("shape",e,t,n);return[a.scatterND(r,s,o)]}case"GatherNd":{const r=_("x",e,t,n),s=_("indices",e,t,n);return[a.gatherND(r,s)]}case"SparseToDense":{const r=_("sparseIndices",e,t,n),s=_("outputShape",e,t,n),o=_("sparseValues",e,t,n),i=_("defaultValue",e,t,n);return[a.sparseToDense(r,o,s,o.dtype===i.dtype?i:a.cast(i,o.dtype))]}case"TensorScatterUpdate":{const r=_("indices",e,t,n),s=_("values",e,t,n),o=_("tensor",e,t,n);return[a.tensorScatterUpdate(o,r,s)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n));case"sparse":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:s,emptyRowIndicator:o,reverseIndexMap:i}=a.sparse.sparseFillEmptyRows(_("indices",e,t,n),_("values",e,t,n),_("denseShape",e,t,n),_("defaultValue",e,t,n));return[r,s,o,i]}case"SparseReshape":{const{outputIndices:r,outputShape:s}=a.sparse.sparseReshape(_("inputIndices",e,t,n),_("inputShape",e,t,n),_("newShape",e,t,n));return[r,s]}case"SparseSegmentMean":return[a.sparse.sparseSegmentMean(_("data",e,t,n),_("indices",e,t,n),_("segmentIds",e,t,n))];case"SparseSegmentSum":return[a.sparse.sparseSegmentSum(_("data",e,t,n),_("indices",e,t,n),_("segmentIds",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n));case"spectral":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"FFT":return[a.fft(_("x",e,t,n))];case"IFFT":return[a.ifft(_("x",e,t,n))];case"RFFT":return[a.rfft(_("x",e,t,n))];case"IRFFT":return[a.irfft(_("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n));case"string":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"StaticRegexReplace":return[a.string.staticRegexReplace(_("input",e,t,n),_("pattern",e,t,n),_("rewrite",e,t,n),_("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:r,nGramsSplits:s}=a.string.stringNGrams(_("data",e,t,n),_("dataSplits",e,t,n),_("separator",e,t,n),_("nGramWidths",e,t,n),_("leftPad",e,t,n),_("rightPad",e,t,n),_("padWidth",e,t,n),_("preserveShortSequences",e,t,n));return[r,s]}case"StringSplit":{const{indices:r,values:s,shape:o}=a.string.stringSplit(_("input",e,t,n),_("delimiter",e,t,n),_("skipEmpty",e,t,n));return[r,s,o]}case"StringToHashBucketFast":return[a.string.stringToHashBucketFast(_("input",e,t,n),_("numBuckets",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n));case"transformation":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Cast":return[a.cast(_("x",e,t,n),_("dtype",e,t,n))];case"ExpandDims":{const r=_("axis",e,t,n);return[a.expandDims(_("x",e,t,n),r)]}case"Squeeze":{const r=_("axis",e,t,n);return[a.squeeze(_("x",e,t,n),r)]}case"Reshape":return[a.reshape(_("x",e,t,n),_("shape",e,t,n))];case"EnsureShape":return[a.ensureShape(_("x",e,t,n),_("shape",e,t,n))];case"MirrorPad":return[a.mirrorPad(_("x",e,t,n),_("padding",e,t,n),_("mode",e,t,n))];case"PadV2":case"Pad":return[a.pad(_("x",e,t,n),_("padding",e,t,n),_("constantValue",e,t,n))];case"SpaceToBatchND":{const r=_("blockShape",e,t,n),s=_("paddings",e,t,n);return[a.spaceToBatchND(_("x",e,t,n),r,s)]}case"BatchToSpaceND":{const r=_("blockShape",e,t,n),s=_("crops",e,t,n);return[a.batchToSpaceND(_("x",e,t,n),r,s)]}case"DepthToSpace":{const r=_("blockSize",e,t,n),s=_("dataFormat",e,t,n).toUpperCase();return[a.depthToSpace(_("x",e,t,n),r,s)]}case"BroadcastTo":return[a.broadcastTo(_("x",e,t,n),_("shape",e,t,n))];case"BroadcastArgs":return[a.broadcastArgs(_("s0",e,t,n),_("s1",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n));case"hash_table":return(async(e,t,n,a)=>{switch(e.op){case"HashTable":case"HashTableV2":{const r=a.getHashTableHandleByName(e.name);if(null!=r)return[r];{const r=_("keyDType",e,t,n),s=_("valueDType",e,t,n),o=new _e(r,s);return a.addHashTable(e.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=_("tableHandle",e,t,n,a),s=_("keys",e,t,n),o=_("values",e,t,n),i=a.getHashTableById(r.id);return[await i.import(s,o)]}case"LookupTableFind":case"LookupTableFindV2":{const r=_("tableHandle",e,t,n,a),s=_("keys",e,t,n),o=_("defaultValue",e,t,n),i=a.getHashTableById(r.id);return[await i.find(s,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=_("tableHandle",e,t,n,a);return[a.getHashTableById(r.id).tensorSize()]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}})(e,t,n,a);case"custom":const s=E(e.op);if(s&&s.customExecutor)return s.customExecutor(new be(e,t,n));throw TypeError("Custom op ".concat(e.op," is not registered."));default:throw TypeError("Unknown op '".concat(e.op,"'. File an issue at ")+"https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}})(e,t,n);return S.util.isPromise(s)?s.then(e=>[].concat(e)):[].concat(s)}class Fe{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4?arguments[4]:void 0;this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=a,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":"".concat(e.frameName,"-").concat(e.iterationId)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function De(e,t,n,a){const r=new Set,s=[];let o=null,i=null;const c=new Set,l=new Set(Object.keys(e).map(e=>M(e)[0]));a=a||[];const u=new Set(a.map(e=>M(e.name)[0])),d=[...t];for(;d.length>0;){const e=d.pop();(Be(e)||We(e)||Ve(e))&&null==o&&(o=e,i=o.children.map(e=>e.name).filter(e=>r.has(e))),r.add(e.name),null==n[e.name]&&(l.has(e.name)||u.has(e.name)||(0!==e.inputs.length?e.inputs.forEach(e=>{c.has(e.name)||(c.add(e.name),d.push(e))}):s.push(e.name)))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:s,dynamicNode:o,syncInputs:i}}function Oe(e,t){const{usedNodes:n,inputs:a}=t,r=Object.keys(a).map(e=>M(e)[0]).map(t=>e.nodes[t]),s=e.initNodes||[],o=e=>n.has("string"===typeof e?e:e.name);function i(e){return[...new Map(e.map(e=>[e.name,e])).values()]}const c=i([...r,...e.weights,...s]).filter(o),l=i([...c,...Object.values(e.nodes)]).filter(o),u=new Map(l.map(e=>[e.name,e])),d={};for(const m of l){d[m.name]=d[m.name]||0;for(const e of m.children)o(e)||(d[e.name]=Number.POSITIVE_INFINITY),d[e.name]=(d[e.name]||0)+1}const h=Object.entries(d).filter(e=>{let[,t]=e;return 0===t}).map(e=>{let[t]=e;return t}),p=[...h];for(;h.length>0;){const e=h.pop(),t=u.get(e);for(const n of t.children.filter(o))0===--d[n.name]&&(p.push(n.name),h.push(n.name))}const f=function(e,t){const n=new Map(e.map(e=>[e.name,e])),a=t.map(e=>e.name),r=new Set(a);for(;a.length>0;){const e=a.pop(),t=n.get(e);for(const s of t.children)n.has(s.name)&&!r.has(s.name)&&(r.add(s.name),a.push(s.name))}const s=e.filter(e=>r.has(e.name));return s}(p.map(e=>u.get(e)),c);return function(e,t){const n=new Map(e.map((e,t)=>[e.name,t])),a=new Set(t.map(e=>e.name)),r=e=>a.has("string"===typeof e?e:e.name),s=new Set(e.map(e=>e.name)),o=e=>s.has("string"===typeof e?e:e.name);for(const i of e){for(const e of i.children.filter(o)){if(!n.has(e.name))throw new Me("Child ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(i.name)>n.get(e.name))throw new Me("Node ".concat(i.name," is scheduled to run after its child ").concat(e.name,"."))}if(!r(i))for(const e of i.inputs){if(!n.has(e.name))throw new Me("Input ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(e.name)>n.get(i.name))throw new Me("Node ".concat(i.name," is scheduled to run before its input ").concat(e.name,"."))}}}(f,c),f}class Me extends Error{constructor(e){super("NodesExecutionOrderError: ".concat(e))}}const ze=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Le=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Pe=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Be(e){return ze.has(e.op)}function We(e){return Le.has(e.op)}function Ve(e){return Pe.has(e.op)}class Ue{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?"".concat(t,":").concat(e.defaultOutput):t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(t=>{this._functionExecutorMap[t]=new Ue(e.functions[t],this)})}getCompilationKey(e,t){const n=e.map(e=>e.name).sort(),a=t.map(e=>e.name).sort();return n.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(e,t){const n=De(e,t,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:s}=n;if(null!=r)throw new Error("This execution contains the node '".concat(r.name,"', which has ")+"the dynamic op '".concat(r.op,"'. Please use ")+"model.executeAsync() instead. Alternatively, to avoid the "+"dynamic ops, specify the inputs [".concat(s,"]"));if(a.length>0){const n=t.map(e=>e.name),r=Object.keys(e);throw new Error("Cannot compute the outputs [".concat(n,"] from the provided inputs ")+"[".concat(r,"]. Missing the following inputs: [").concat(a,"]"))}const o=Oe(this.graph,n),i=function(e){const t=new Map(e.map((e,t)=>[e.name,t])),n=Number.MAX_SAFE_INTEGER,a=e.map((e,t)=>Be(e)?n:t),r=e=>{const n=a[t.get(e.name)];return null==n?-1:n},s=e.map((e,t)=>e.children.map(r).reduce((e,t)=>Math.max(e,t),a[t])),o=new Map;for(let i=0;i<e.length;++i){const t=s[i];if(t===n)continue;const a=e[i],r=e[t];o.has(r.name)||o.set(r.name,[]),o.get(r.name).push(a)}return o}(o);return{orderedNodes:o,nodeLiveUntilMap:i}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return(0,S.keep)(t),t}cloneTensorList(e){if(!e)return null;return e.map(e=>this.cloneAndKeepTensor(e))}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(e=>{let[t,n]=e;return[t,this.cloneTensorList(n)]}))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const a=n.map(e=>this.graph.nodes[M(e)[0]]),r=t.map(e=>M(e)[0]),s=new Set(r);let o=r.map(e=>this.graph.nodes[e]);0===o.length&&(o=this._outputs);const i=this.getCompilationKey(a,o);let c=this.compiledMap.get(i);null==c&&(c=this.compile(e,o),this.compiledMap.set(i,c));try{this.keepIntermediateTensors=(0,S.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const l={},u={};return(0,S.tidy)(()=>{const n=new Fe(this.weightMap,l,u,this.functionExecutorMap,this.parseNodeNameCache),a=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(t=>{const[r,s]=M(t,n),o=[];o[s]=e[t],a[r]=o,this.keepIntermediateTensors&&(this.clonedTensorsMap[r]=this.cloneTensorList(o))});const r=this.getFrozenTensorIds(a),{orderedNodes:o,nodeLiveUntilMap:i}=c;for(const e of o){if(a[e.name])continue;const t=Re(e,a,n,this._resourceManager);if(S.util.isPromise(t))throw new Error("The execution of the op '".concat(e.op,"' returned a promise. ")+"Please use model.executeAsync() instead.");a[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,a,n,r,s,i.get(e.name))}return null==this.parent&&n.dispose(r),t.map(e=>R(e,a,n))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id)));return new Set(t)}checkTensorForDisposal(e,t,n,a,r,s,o){if(!Be(t)&&!s.has(e)){for(const a of n[e])null!=a&&(o[a.id]=(o[a.id]||0)+t.children.length);for(const e of t.inputs){if(Be(e))continue;const t=F(e.name,n,a);if(null!=t)for(const e of t){if(!e||e.kept||r.has(e.id))continue;const t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,a,r,s){function o(e){return Be(e)||r.has(e.name)}if(!Be(e)&&null!=s)for(const i of s){if(o(i))continue;const e=F(i.name,t,n);for(const t of e)!t||t.kept||a.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=(0,S.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const s=new Fe(this.weightMap,a,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,s,t,n),i=t.map(e=>R(e,o,s)),c=i.map(e=>e.id),l=Object.keys(e).map(t=>e[t].id),u=new Set([...c,...l,...this.weightIds]);return Object.values(o).forEach(e=>{e.forEach(e=>{!e||e.isDisposed||u.has(e.id)||e.dispose()})}),null==this.parent&&s.dispose(u),i}async executeFunctionAsync(e,t,n){const a=e.reduce((e,t,n)=>(e[this.inputs[n].name]=t,e),{});return this._executeAsync(a,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,a){const r=Object.keys(e),s=r.map(e=>this.graph.nodes[M(e)[0]]),o=n.map(e=>M(e)[0]),i=new Set(o);let c=o.map(e=>this.graph.nodes[e]);0===c.length&&(c=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:d,syncInputs:h}=De(e,c,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),f=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,a]=M(t),r=[];r[a]=e[t],f[n]=r});const m={},g=this.getFrozenTensorIds(f),y={};for(;p.length>0;){const e=this.processStack(s,p,t,f,y,g,i,m,l);await Promise.all(e)}null!=d||a||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=c.filter(e=>!Be(e)&&!R(e.name,f,t)).map(e=>e.name);if(b.length>0){let e="";throw null!=d&&(e="Alternatively, to avoid the dynamic ops, use model.execute() "+"and specify the inputs [".concat(h,"]")),new Error("Cannot compute the outputs [".concat(b,"] from the provided ")+"inputs [".concat(r,"]. Consider providing the following inputs: ")+"[".concat(u,"]. ").concat(e))}return f}processStack(e,t,n,a,r,s,o,i,c){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let u="";if("Enter"===e.node.op&&_("isConstant",e.node,a,n)&&([u]=D(e.node.name,n)),null==a[e.node.name]){const d=Re(e.node,a,n,this._resourceManager);u||([u]=D(e.node.name,n));const h=n.currentContext;S.util.isPromise(d)?l.push(d.then(l=>(a[u]=l,this.keepIntermediateTensors&&(this.clonedTensorsMap[u]=this.cloneTensorList(l)),n.currentContext=h,this.checkTensorForDisposal(u,e.node,a,n,s,o,i),this.processChildNodes(e.node,t,n,a,r,c),l))):(a[u]=d,this.keepIntermediateTensors&&(this.clonedTensorsMap[u]=this.cloneTensorList(d)),this.checkTensorForDisposal(u,e.node,a,n,s,o,i),this.processChildNodes(e.node,t,n,a,r,c))}else this.processChildNodes(e.node,t,n,a,r,c)}return l}processChildNodes(e,t,n,a,r,s){e.children.forEach(e=>{const[o]=D(e.name,n);!r[o]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some(e=>!!R(e,a,n))&&(r[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every(e=>!!R(e,a,n))&&(r[o]=!0,t.push({contexts:n.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const n=e[t],[a]=M(t),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){const e=r.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every((t,n)=>-1===e[n]||e[n]===t);S.util.assert(t,()=>"The shape of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be [".concat(e,"], but was ")+"[".concat(n.shape,"]"))}r.attrParams.dtype&&r.attrParams.dtype.value&&S.util.assert(n.dtype===r.attrParams.dtype.value,()=>"The dtype of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be "+"".concat(r.attrParams.dtype.value,", but was ").concat(n.dtype))})}mapInputs(e){var t,n;const a={};for(const r in e){const s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[r];null!=s?a[s.name]=e[r]:a[r]=e[r]}return a}checkInputs(e){const t=Object.keys(e).filter(e=>{const[t]=M(e);return null==this.graph.nodes[t]});if(t.length>0)throw new Error("The dict provided in model.execute(dict) has "+"keys: [".concat(t,"] that are not part of graph"))}mapOutputs(e){return e.map(e=>{var t,n;const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=a?a.name:e},{})}checkOutputs(e){e.forEach(e=>{const[t]=M(e);if(!this.graph.nodes[t])throw new Error("The output '".concat(e,"' is not found in the graph"))})}}class Ge{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}var He=n(285);const je="?tfjs-format=file",qe="model.json";class Ye{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:S.io;this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new Ge}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error("Found more than one (".concat(t.length,") load handlers for ")+"URL '".concat([e],"'"));this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return S.util.isPromise(e)?e.then(e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e)):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await(0,He.s5)(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let a=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(a=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=a,this.version="".concat(n.versions.producer,".").concat(n.versions.minConsumer),this.executor=new Ue(ae.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=ae.Instance.transformGraph(e.modelInitializer);this.initializer=new Ue(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"===typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new Error("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof S.Tensor?[e]:e,n={};return t.forEach((e,t)=>n[this.structuredOutputKeys[t]]=e),n}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof S.Tensor)&&!Array.isArray(e)){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const a=n[t];null!=a.resourceId&&(e[t]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error("Input tensor count mismatch, the graph model has ".concat(this.inputNodes.length-n," non-resource placeholders, while there are ").concat(e.length," input tensors provided."));let a=0;return this.inputNodes.reduce((t,n)=>{var r,s,o;const i=null===(o=null===(s=null===(r=this.signature)||void 0===r?void 0:r.inputs)||void 0===s?void 0:s[n])||void 0===o?void 0:o.resourceId;return t[n]=null!=i?this.resourceIdToCapturedInput[i]:e[a++],t},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let a=0;a<n.length;a++){const r=t[n[a]];this.resourceIdToCapturedInput[r.resourceId]=e[a]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&(0,S.dispose)(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function Ke(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:S.io;if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"===typeof e&&(e=function(e){e.endsWith("/")||(e+="/");return"".concat(e).concat(qe).concat(je)}(e));const a=new Ye(e,t,n);return await a.load(),a}function Xe(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){const[n,a]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!a||!(a instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");const r=S.io.getWeightSpecs(n.weightsManifest),s=S.io.getModelArtifactsForJSONSync(n,r,a);t=S.io.fromMemorySync(s)}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=S.io.fromMemorySync(e)}const n=new Ye(t);return n.load(),n}const Ze="4.22.0"},5462:(e,t,n)=>{"use strict";n.d(t,{o:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({exp_:function(e){const t={x:(0,s.YT)(e,"x","exp")};return a.T2.runKernel(r.ox3,t)}})},5583:(e,t,n)=>{"use strict";n.d(t,{t:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({reshape_:function(e,t){const n={x:(0,s.YT)(e,"x","reshape","string_or_numeric")},o={shape:t};return a.T2.runKernel(r.R23,n,o)}})},5692:(e,t,n)=>{"use strict";n.d(t,{n:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(8805);const i=(0,n(7892).op)({logicalAnd_:function(e,t){const n=(0,s.YT)(e,"a","logicalAnd","bool"),i=(0,s.YT)(t,"b","logicalAnd","bool");(0,o.assertAndGetBroadcastShape)(n.shape,i.shape);const c={a:n,b:i};return a.T2.runKernel(r.RUm,c)}})},5740:(e,t,n)=>{"use strict";n.d(t,{_:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({sign_:function(e){const t={x:(0,s.YT)(e,"x","sign")};return a.T2.runKernel(r.YVe,t)}})},5743:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>yt.ljI,Acos:()=>yt.Vvy,Acosh:()=>yt.PH8,AdadeltaOptimizer:()=>_e,AdagradOptimizer:()=>Fe,AdamOptimizer:()=>Me,AdamaxOptimizer:()=>Pe,Add:()=>yt.OMN,AddN:()=>yt.EkD,All:()=>yt.u8Z,Any:()=>yt.FSt,ArgMax:()=>yt.Jp_,ArgMin:()=>yt.p_m,Asin:()=>yt.QKF,Asinh:()=>yt.epO,Atan:()=>yt.TyE,Atan2:()=>yt.lxb,Atanh:()=>yt.zP9,AvgPool:()=>yt.ho8,AvgPool3D:()=>yt.cS,AvgPool3DGrad:()=>yt.wwC,AvgPoolGrad:()=>yt.VCH,BatchMatMul:()=>yt.jAQ,BatchToSpaceND:()=>yt.Ik2,Bincount:()=>yt.N4F,BitwiseAnd:()=>yt.HNs,BroadcastArgs:()=>yt.vj7,BroadcastTo:()=>yt.LB5,Cast:()=>yt.KXH,Ceil:()=>yt.QDP,ClipByValue:()=>yt.vaV,Complex:()=>yt.pr3,ComplexAbs:()=>yt.$zE,Concat:()=>yt.$dB,Conv2D:()=>yt.p2J,Conv2DBackpropFilter:()=>yt.rFm,Conv2DBackpropInput:()=>yt.jfg,Conv3D:()=>yt.A1h,Conv3DBackpropFilterV2:()=>yt.iGz,Conv3DBackpropInputV2:()=>yt.gC7,Cos:()=>yt.Mn0,Cosh:()=>yt.MnK,CropAndResize:()=>yt.MRQ,Cumprod:()=>yt.jj_,Cumsum:()=>yt.nY8,DataStorage:()=>pa.GJ,DenseBincount:()=>yt.wNW,DepthToSpace:()=>yt.TMz,DepthwiseConv2dNative:()=>yt.tGH,DepthwiseConv2dNativeBackpropFilter:()=>yt.X$8,DepthwiseConv2dNativeBackpropInput:()=>yt.nVu,Diag:()=>yt.ORI,Dilation2D:()=>yt.jxD,Dilation2DBackpropFilter:()=>yt.pk0,Dilation2DBackpropInput:()=>yt.bP9,Draw:()=>yt.XmO,ENV:()=>b.Km,Einsum:()=>yt.Qgm,Elu:()=>yt.Pah,EluGrad:()=>yt.rsH,Environment:()=>b.OH,Equal:()=>yt.BRl,Erf:()=>yt._s9,Exp:()=>yt.ox3,ExpandDims:()=>yt.ybN,Expm1:()=>yt.ybj,FFT:()=>yt.rGP,Fill:()=>yt.SQl,FlipLeftRight:()=>yt.BxF,Floor:()=>yt.ZgB,FloorDiv:()=>yt.ElG,FromPixels:()=>yt.awo,FusedBatchNorm:()=>yt.i5R,FusedConv2D:()=>yt.aAr,FusedDepthwiseConv2D:()=>yt.T7M,GatherNd:()=>yt.O4G,GatherV2:()=>yt.mxL,Greater:()=>yt.XhZ,GreaterEqual:()=>yt.lLS,IFFT:()=>yt.OAQ,Identity:()=>yt.lzr,Imag:()=>yt.dv8,IsFinite:()=>yt.gIW,IsInf:()=>yt.E3$,IsNan:()=>yt.iPs,KernelBackend:()=>pa.uI,LRN:()=>yt.jM4,LRNGrad:()=>yt.ToN,LeakyRelu:()=>yt.X0$,Less:()=>yt.mIA,LessEqual:()=>yt.CwD,LinSpace:()=>yt.mnI,Log:()=>yt.tG8,Log1p:()=>yt.Cg$,LogSoftmax:()=>yt.zfU,LogicalAnd:()=>yt.RUm,LogicalNot:()=>yt.nZd,LogicalOr:()=>yt.LXA,LogicalXor:()=>yt.RW8,LowerBound:()=>yt.yPW,MatrixBandPart:()=>yt.WRv,Max:()=>yt.VAI,MaxPool:()=>yt.t3d,MaxPool3D:()=>yt.ySp,MaxPool3DGrad:()=>yt.cHb,MaxPoolGrad:()=>yt.RXX,MaxPoolWithArgmax:()=>yt.TL8,Maximum:()=>yt.LDN,Mean:()=>yt.g5A,Min:()=>yt.lNG,Minimum:()=>yt.LG0,MirrorPad:()=>yt.x7F,Mod:()=>yt.BLA,MomentumOptimizer:()=>We,Multinomial:()=>yt.WT3,Multiply:()=>yt.xu7,Neg:()=>yt.l0G,NonMaxSuppressionV3:()=>yt.SDM,NonMaxSuppressionV4:()=>yt.Zl4,NonMaxSuppressionV5:()=>yt.e0f,NotEqual:()=>yt.ylV,OP_SCOPE_SUFFIX:()=>Qt.BTT,OneHot:()=>yt.urI,OnesLike:()=>yt.LWX,Optimizer:()=>Ae,OptimizerConstructors:()=>Xt,Pack:()=>yt.mM$,PadV2:()=>yt.ODT,Pool:()=>yt.bCz,Pow:()=>yt.pyJ,Prelu:()=>yt.Ncv,Prod:()=>yt.kdj,RMSPropOptimizer:()=>Ve,RaggedGather:()=>yt.oJ2,RaggedRange:()=>yt.CQC,RaggedTensorToTensor:()=>yt.mH5,Range:()=>yt.Q6t,Rank:()=>Zt.rg,Real:()=>yt.LRy,RealDiv:()=>yt.sDr,Reciprocal:()=>yt.huO,Reduction:()=>$t.i,Relu:()=>yt.fUj,Relu6:()=>yt.P_L,Reshape:()=>yt.R23,ResizeBilinear:()=>yt.hgw,ResizeBilinearGrad:()=>yt.FCQ,ResizeNearestNeighbor:()=>yt.jOE,ResizeNearestNeighborGrad:()=>yt.XQy,Reverse:()=>yt.D7i,RotateWithOffset:()=>yt.BK4,Round:()=>yt.hVg,Rsqrt:()=>yt.TOR,SGDOptimizer:()=>Be,ScatterNd:()=>yt.pJc,SearchSorted:()=>yt.uWl,Select:()=>yt.l6P,Selu:()=>yt.u$b,Sigmoid:()=>yt.vI1,Sign:()=>yt.YVe,Sin:()=>yt.hql,Sinh:()=>yt.J3C,Slice:()=>yt.JiE,Softmax:()=>yt.rFG,Softplus:()=>yt.Fin,SpaceToBatchND:()=>yt.A8B,SparseFillEmptyRows:()=>yt.C8s,SparseReshape:()=>yt.BoJ,SparseSegmentMean:()=>yt.L6G,SparseSegmentSum:()=>yt.DvZ,SparseToDense:()=>yt.jgd,SplitV:()=>yt.Blb,Sqrt:()=>yt.dFH,Square:()=>yt.M6A,SquaredDifference:()=>yt.Ddj,StaticRegexReplace:()=>yt.GZp,Step:()=>yt.pnw,StridedSlice:()=>yt.UcO,StringNGrams:()=>yt.YAb,StringSplit:()=>yt.iW0,StringToHashBucketFast:()=>yt.$jE,Sub:()=>yt.PbM,Sum:()=>yt.WuN,Tan:()=>yt.oFs,Tanh:()=>yt.iuW,Tensor:()=>he.qY,TensorBuffer:()=>he.yl,TensorScatterUpdate:()=>yt.X4r,Tile:()=>yt.FAs,TopK:()=>yt.TBb,Transform:()=>yt.dLy,Transpose:()=>yt.wx0,Unique:()=>yt.EwU,Unpack:()=>yt.dXR,UnsortedSegmentSum:()=>yt.pPe,UpperBound:()=>yt.RMm,Variable:()=>he.rT,ZerosLike:()=>yt.xJ3,_FusedMatMul:()=>yt.Dr,abs:()=>Qt.tnl,acos:()=>Qt.HQu,acosh:()=>Qt.FqL,add:()=>Qt.WQq,addN:()=>Qt.QiD,all:()=>Qt.Q7R,any:()=>Qt.bzn,argMax:()=>Qt.FLi,argMin:()=>Qt.XRg,asin:()=>Qt.qRo,asinh:()=>Qt.yHs,atan:()=>Qt.rYl,atan2:()=>Qt.FPz,atanh:()=>Qt.rfv,avgPool:()=>Qt.$jT,avgPool3d:()=>Qt.sub,backend:()=>fe.Hs,backend_util:()=>d,basicLSTMCell:()=>Qt.lZX,batchNorm:()=>Qt.$v7,batchNorm2d:()=>Qt.BFc,batchNorm3d:()=>Qt.kSi,batchNorm4d:()=>Qt.T5N,batchToSpaceND:()=>Qt.GTe,bincount:()=>Qt.HbZ,bitwiseAnd:()=>Qt.vjT,booleanMaskAsync:()=>Qt.ftb,broadcastArgs:()=>Qt.ROE,broadcastTo:()=>Qt.hOW,broadcast_util:()=>gt,browser:()=>i,buffer:()=>Qt.ra8,cast:()=>Qt.wgE,ceil:()=>Qt.mkO,clipByValue:()=>Qt.zQh,clone:()=>Qt.o8B,complex:()=>Qt.faB,concat:()=>Qt.xWs,concat1d:()=>Qt.I1m,concat2d:()=>Qt.RPU,concat3d:()=>Qt.O5O,concat4d:()=>Qt.P1l,conv1d:()=>Qt.kA9,conv2d:()=>Qt.Xtf,conv2dTranspose:()=>Qt.wX9,conv3d:()=>Qt.IPL,conv3dTranspose:()=>Qt.jIJ,copyRegisteredKernels:()=>bt.Cf,cos:()=>Qt.gnS,cosh:()=>Qt.yIG,cosineWindow:()=>Qt._jP,cumprod:()=>Qt.Lp0,cumsum:()=>Qt.rCv,customGrad:()=>we._X,denseBincount:()=>Qt.aOp,deprecationWarn:()=>fe.fL,depthToSpace:()=>Qt.Rj8,depthwiseConv2d:()=>Qt.Gl3,device_util:()=>a,diag:()=>Qt.smy,dilation2d:()=>Qt.X7t,disableDeprecationWarnings:()=>fe.IS,dispose:()=>fe.AS,disposeVariables:()=>fe.rm,div:()=>Qt.y4m,divNoNan:()=>Qt.ek5,dot:()=>Qt.Omf,dropout:()=>Qt.EZY,einsum:()=>Qt._3C,elu:()=>Qt.Pqc,enableDebugMode:()=>fe.gY,enableProdMode:()=>fe.Sm,enclosingPowerOfTwo:()=>Qt.FJY,engine:()=>fe.Hi,ensureShape:()=>Qt.QP2,env:()=>b._K,equal:()=>Qt.LCg,erf:()=>Qt.Y12,euclideanNorm:()=>Qt.p4S,exp:()=>Qt.oNF,expandDims:()=>Qt.UG6,expm1:()=>Qt.IYd,eye:()=>Qt.y5U,fft:()=>Qt.hVP,fill:()=>Qt.GSj,findBackend:()=>fe.go,findBackendFactory:()=>fe.W4,floor:()=>Qt.RIf,floorDiv:()=>Qt.wh_,fused:()=>Qt.cZk,gather:()=>Qt.kgh,gatherND:()=>Qt.SY9,gather_util:()=>c,getBackend:()=>fe.jz,getGradient:()=>bt.vQ,getKernel:()=>bt._5,getKernelsForBackend:()=>bt.Op,grad:()=>we.Dv,grads:()=>we.ok,greater:()=>Qt.rhj,greaterEqual:()=>Qt.DQN,ifft:()=>Qt.KGM,imag:()=>Qt.ngS,image:()=>Qt.Slp,inTopKAsync:()=>Qt.U4u,io:()=>s,irfft:()=>Qt.ggX,isFinite:()=>Qt.MIs,isInf:()=>Qt.EN4,isNaN:()=>Qt.yrW,keep:()=>fe.aC,kernel_impls:()=>h,leakyRelu:()=>Qt.H8d,less:()=>Qt.M7h,lessEqual:()=>Qt.InN,linalg:()=>Qt.mPL,linspace:()=>Qt.mT8,localResponseNormalization:()=>Qt.Kgs,log:()=>Qt.Rm2,log1p:()=>Qt.Kko,logSigmoid:()=>Qt.nqI,logSoftmax:()=>Qt.HPB,logSumExp:()=>Qt.VZ,logicalAnd:()=>Qt.n76,logicalNot:()=>Qt.NSZ,logicalOr:()=>Qt.ztW,logicalXor:()=>Qt.rxB,losses:()=>Qt.YYh,lowerBound:()=>Qt.yzS,matMul:()=>Qt.NoW,math:()=>o,max:()=>Qt.T9B,maxPool:()=>Qt.jgi,maxPool3d:()=>Qt.NYV,maxPoolWithArgmax:()=>Qt.RO,maximum:()=>Qt.PhQ,mean:()=>Qt.i2o,memory:()=>fe.m1,meshgrid:()=>Qt.OYQ,min:()=>Qt.jkA,minimum:()=>Qt.BpO,mirrorPad:()=>Qt.FFZ,mod:()=>Qt.ziu,moments:()=>Qt.Clk,movingAverage:()=>Qt.CRk,mul:()=>Qt.lKK,multiRNNCell:()=>Qt.YDF,multinomial:()=>Qt.OjQ,neg:()=>Qt.HZy,nextFrame:()=>tn,norm:()=>Qt.xbf,notEqual:()=>Qt.Ec,oneHot:()=>Qt.Mw0,ones:()=>Qt.SaS,onesLike:()=>Qt.P61,op:()=>Qt.op,outerProduct:()=>Qt.X4o,pad:()=>Qt.eVF,pad1d:()=>Qt.BZs,pad2d:()=>Qt.grY,pad3d:()=>Qt.XHu,pad4d:()=>Qt.WLX,pool:()=>Qt.dzn,pow:()=>Qt.n7C,prelu:()=>Qt.NsG,print:()=>Qt.yyV,prod:()=>Qt._eU,profile:()=>fe.ME,raggedGather:()=>Qt.whe,raggedRange:()=>Qt.iyU,raggedTensorToTensor:()=>Qt.Q0_,rand:()=>Qt._9M,randomGamma:()=>Qt.pR9,randomNormal:()=>Qt.FE$,randomStandardNormal:()=>Qt.m0H,randomUniform:()=>Qt.YeY,randomUniformInt:()=>Qt.HYA,range:()=>Qt.y17,ready:()=>fe.Gc,real:()=>Qt.xav,reciprocal:()=>Qt.VOZ,registerBackend:()=>fe.gJ,registerGradient:()=>bt.kr,registerKernel:()=>bt.tA,relu:()=>Qt.VVh,relu6:()=>Qt.j__,removeBackend:()=>fe.rE,reshape:()=>Qt.tQQ,reverse:()=>Qt.BEg,reverse1d:()=>Qt.QD2,reverse2d:()=>Qt.LMr,reverse3d:()=>Qt.I2l,reverse4d:()=>Qt.JYU,rfft:()=>Qt.z8$,round:()=>Qt.LIG,rsqrt:()=>Qt.Z$r,scalar:()=>Qt.d_2,scatterND:()=>Qt.NFr,scatter_util:()=>_t,searchSorted:()=>Qt.sZg,selu:()=>Qt.WfX,separableConv2d:()=>Qt.wdz,serialization:()=>r,setBackend:()=>fe.jh,setPlatform:()=>fe.Ok,setdiff1dAsync:()=>Qt.F12,sigmoid:()=>Qt.ry7,sign:()=>Qt._SZ,signal:()=>Qt.vPA,sin:()=>Qt.F8e,sinh:()=>Qt.L0l,slice:()=>Qt.dik,slice1d:()=>Qt.Q$M,slice2d:()=>Qt.zAd,slice3d:()=>Qt.wck,slice4d:()=>Qt.R0O,slice_util:()=>Rt,softmax:()=>Qt.Vs9,softplus:()=>Qt.lw0,spaceToBatchND:()=>Qt.eDJ,sparse:()=>Qt.lMo,sparseToDense:()=>Qt.Zhr,spectral:()=>Qt.lOn,split:()=>Qt.lDo,sqrt:()=>Qt.RZD,square:()=>Qt.EwI,squaredDifference:()=>Qt.Pbu,squeeze:()=>Qt.r2V,stack:()=>Qt.t$z,step:()=>Qt.PMw,stridedSlice:()=>Qt.Ym9,string:()=>Qt.YjP,sub:()=>Qt.jbE,sum:()=>Qt.czq,sumOutType:()=>Zt.ch,tan:()=>Qt.Mlm,tanh:()=>Qt.ymU,tensor:()=>Qt.OEK,tensor1d:()=>Qt.tGX,tensor2d:()=>Qt.KtR,tensor3d:()=>Qt.$_$,tensor4d:()=>Qt.g9W,tensor5d:()=>Qt.Lpo,tensor6d:()=>Qt.yxw,tensorScatterUpdate:()=>Qt.NNh,tensor_util:()=>Ft,test_util:()=>l,tidy:()=>fe.DZ,tile:()=>Qt.Vsq,time:()=>fe.kB,topk:()=>Qt.rfw,train:()=>Jt,transpose:()=>Qt.mgz,truncatedNormal:()=>Qt.efE,unique:()=>Qt.AmM,unregisterGradient:()=>bt.rY,unregisterKernel:()=>bt.iP,unsortedSegmentSum:()=>Qt.zAU,unstack:()=>Qt.K$i,upcastType:()=>Zt.Tu,upperBound:()=>Qt.rni,util:()=>Dt,valueAndGrad:()=>we.jY,valueAndGrads:()=>we.mu,variable:()=>Qt.bvq,variableGrads:()=>we.y7,version_core:()=>Kt,where:()=>Qt._M9,whereAsync:()=>Qt.YJN,zeros:()=>Qt.Ul9,zerosLike:()=>Qt.POl});var a={};n.r(a),n.d(a,{isBrowser:()=>y,isMobile:()=>g,mockIsMobile:()=>m});var r={};n.r(r),n.d(r,{Serializable:()=>Ne,SerializationMap:()=>Ie,getRegisteredName:()=>Ee,registerClass:()=>Ce});var s={};n.r(s),n.d(s,{CompositeArrayBuffer:()=>I.D,browserFiles:()=>qe,browserHTTPRequest:()=>nt,concatenateArrayBuffers:()=>x.AQ,copyModel:()=>te,decodeWeights:()=>x.CY,decodeWeightsStream:()=>x.s5,encodeWeights:()=>x.aG,fromMemory:()=>ot,fromMemorySync:()=>it,getLoadHandlers:()=>N,getModelArtifactsForJSON:()=>x.Ej,getModelArtifactsForJSONSync:()=>x.Rl,getModelArtifactsInfoForJSON:()=>x.oR,getSaveHandlers:()=>T,getWeightSpecs:()=>x.Xf,http:()=>tt,isHTTPScheme:()=>Je,listModels:()=>J,loadWeights:()=>Ze,moveModel:()=>ne,registerLoadRouter:()=>S,registerSaveRouter:()=>k,removeModel:()=>ee,weightsLoaderFactory:()=>Qe,withSaveHandler:()=>ct,withSaveHandlerSync:()=>lt});var o={};n.r(o),n.d(o,{confusionMatrix:()=>mt});var i={};n.r(i),n.d(i,{draw:()=>Ct,fromPixels:()=>Et,fromPixelsAsync:()=>Tt,toPixels:()=>It});var c={};n.r(c),n.d(c,{prepareAndValidate:()=>At});var l={};n.r(l),n.d(l,{TEST_EPSILON_FLOAT16:()=>Mt,createVideoElement:()=>qt,encodeStrings:()=>jt,expectArrayBuffersEqual:()=>Ht,expectArraysClose:()=>zt,expectArraysEqual:()=>Wt,expectNumbersClose:()=>Vt,expectPromiseToFail:()=>Bt,expectValuesInRange:()=>Gt,play:()=>Yt,testEpsilon:()=>Lt});var u={};n.r(u),n.d(u,{collectGatherOpShapeInfo:()=>ca,computeOutShape:()=>ia,segOpComputeOptimalWindowSize:()=>oa});var d={};n.r(d),n.d(d,{ERF_A1:()=>Sn,ERF_A2:()=>Tn,ERF_A3:()=>Nn,ERF_A4:()=>In,ERF_A5:()=>Cn,ERF_P:()=>kn,PARALLELIZE_THRESHOLD:()=>pn,RowPartitionType:()=>sn,SELU_SCALE:()=>wn.X,SELU_SCALEALPHA:()=>wn.j,applyActivation:()=>cn.f2,assertAndGetBroadcastShape:()=>gt.assertAndGetBroadcastShape,assertAxesAreInnerMostDims:()=>nn.WC,assertParamsConsistent:()=>an,assignToTypedArray:()=>On,axesAreInnerMostDims:()=>nn.WH,calculateShapes:()=>_t.calculateShapes,checkEinsumDimSizes:()=>Gn,checkPadOnDimRoundingMode:()=>on.s_,combineLocations:()=>nn.aF,combineRaggedTensorToTensorShapes:()=>ln,complexWithEvenIndex:()=>Rn,complexWithOddIndex:()=>Fn,computeConv2DInfo:()=>on.uf,computeConv3DInfo:()=>on.p$,computeDefaultPad:()=>on.G8,computeDilation2DInfo:()=>on.YQ,computeOptimalWindowSize:()=>fn,computeOutAndReduceShapes:()=>nn.lb,computeOutShape:()=>rn,computePool2DInfo:()=>on.E6,computePool3DInfo:()=>on.l5,convertConv2DDataFormat:()=>on.$Q,decodeEinsumEquation:()=>Vn,eitherStridesOrDilationsAreOne:()=>on.G0,expandShapeToKeepDim:()=>nn.SM,exponent:()=>zn,exponents:()=>Mn,fromStringArrayToUint8:()=>ua,fromUint8ToStringArray:()=>la,getAxesPermutation:()=>nn.Em,getBroadcastDims:()=>gt.getBroadcastDims,getComplexWithIndex:()=>Dn,getEinsumComputePath:()=>Hn,getEinsumPermutation:()=>Un,getFusedBiasGradient:()=>cn.Do,getFusedDyActivation:()=>cn.XB,getImageCenter:()=>mn,getInnerMostAxes:()=>nn.fK,getPermuted:()=>yn,getRaggedRank:()=>dn,getReductionAxes:()=>gt.getReductionAxes,getReshaped:()=>gn,getReshapedPermuted:()=>bn,getRowPartitionTypesHelper:()=>un,getSliceBeginCoords:()=>vn,getSliceSize:()=>xn,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Kn,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Xn,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Zn,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Jn,getSparseReshapeInputOutputMismatchErrorMessage:()=>ta,getSparseReshapeInputOutputMultipleErrorMessage:()=>ea,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Qn,getSparseReshapeNegativeOutputDimErrorMessage:()=>$n,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>sa,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>na,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>aa,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>ra,getUndoAxesPermutation:()=>nn.gx,isIdentityPermutation:()=>jn,log:()=>En.R,mergeRealAndImagArrays:()=>An,prepareAndValidate:()=>At,prepareSplitSize:()=>Yn,segment_util:()=>u,shouldFuse:()=>cn.zE,slice_util:()=>Rt,splitRealAndImagArrays:()=>_n,stridesOrDilationsArePositive:()=>on.qk,tupleValuesAreOne:()=>on.Dh,upcastType:()=>Zt.Tu,validateDefaultValueShape:()=>hn,validateInput:()=>_t.validateInput,validateUpdateShape:()=>_t.validateUpdateShape,warn:()=>En.i});var h={};n.r(h),n.d(h,{nonMaxSuppressionV3Impl:()=>da.c7,nonMaxSuppressionV4Impl:()=>da.ZS,nonMaxSuppressionV5Impl:()=>da.ut,whereImpl:()=>ha.Y});var p=n(2164);let f;function m(e){f=e}function g(e){if(void 0!==f)return f;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function y(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}var b=n(5399);const v=(0,b._K)();v.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),v.registerFlag("IS_BROWSER",()=>y()),v.registerFlag("IS_NODE",()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node),v.registerFlag("IS_CHROME",()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),v.registerFlag("IS_SAFARI",()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),v.registerFlag("PROD",()=>!1),v.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>v.getBool("DEBUG")),v.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),v.registerFlag("IS_TEST",()=>!1),v.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>v.getBool("DEBUG")),v.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),v.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),v.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);var x=n(285);class w{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==w.instance&&(w.instance=new w),w.instance}static registerSaveRouter(e){w.getInstance().saveRouters.push(e)}static registerLoadRouter(e){w.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return w.getHandlers(e,"save")}static getLoadHandlers(e,t){return w.getHandlers(e,"load",t)}static getHandlers(e,t,n){const a=[];return("load"===t?w.getInstance().loadRouters:w.getInstance().saveRouters).forEach(t=>{const r=t(e,n);null!==r&&a.push(r)}),a}}const k=e=>w.registerSaveRouter(e),S=e=>w.registerLoadRouter(e),T=e=>w.getSaveHandlers(e),N=(e,t)=>w.getLoadHandlers(e,t);var I=n(7131);const C="tensorflowjs",E="models_store",A="model_info_store";function _(){if(!(0,b._K)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function R(e){const t=e.result;t.createObjectStore(E,{keyPath:"modelPath"}),t.createObjectStore(A,{keyPath:"modelPath"})}class F{constructor(e){if(this.indexedDB=_(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const a=this.indexedDB.open(C,1);a.onupgradeneeded=()=>R(a),a.onsuccess=()=>{const r=a.result;if(null==t){const t=r.transaction(E,"readonly"),a=t.objectStore(E).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return r.close(),n(new Error("Cannot find model with path '".concat(this.modelPath,"' ")+"in IndexedDB."));e(a.result.modelArtifacts)},a.onerror=e=>(r.close(),n(a.error)),t.oncomplete=()=>r.close()}else{t.weightData=I.D.join(t.weightData);const a=(0,x.oR)(t),o=r.transaction(A,"readwrite");let i,c,l=o.objectStore(A);try{i=l.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(s){return n(s)}i.onsuccess=()=>{c=r.transaction(E,"readwrite");const i=c.objectStore(E);let u;try{u=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(s){return n(s)}u.onsuccess=()=>e({modelArtifactsInfo:a}),u.onerror=e=>{l=o.objectStore(A);const t=l.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(u.error)),t.onerror=e=>(r.close(),n(u.error))}},i.onerror=e=>(r.close(),n(i.error)),o.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}}},a.onerror=e=>n(a.error)})}}F.URL_SCHEME="indexeddb://";const D=e=>{return(0,b._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(F.URL_SCHEME)?(t=e.slice(F.URL_SCHEME.length),new F(t)):null;var t};w.registerSaveRouter(D),w.registerLoadRouter(D);class O{constructor(){this.indexedDB=_()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open(C,1);n.onupgradeneeded=()=>R(n),n.onsuccess=()=>{const a=n.result,r=a.transaction(A,"readonly"),s=r.objectStore(A).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(a.close(),t(s.error)),r.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(F.URL_SCHEME)?t.slice(F.URL_SCHEME.length):t,new Promise((t,n)=>{const a=this.indexedDB.open(C,1);a.onupgradeneeded=()=>R(a),a.onsuccess=()=>{const r=a.result,s=r.transaction(A,"readwrite"),o=s.objectStore(A),i=o.get(e);let c;i.onsuccess=()=>{if(null==i.result)return r.close(),n(new Error("Cannot find model with path '".concat(e,"' ")+"in IndexedDB."));{const a=o.delete(e),s=()=>{c=r.transaction(E,"readwrite");const a=c.objectStore(E).delete(e);a.onsuccess=()=>t(i.result.modelArtifactsInfo),a.onerror=e=>n(i.error)};a.onsuccess=s,a.onerror=e=>(s(),r.close(),n(i.error))}},i.onerror=e=>(r.close(),n(i.error)),s.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}},a.onerror=e=>n(a.error)})}}var M=n(1426);const z="/",L="tensorflowjs_models",P="info",B="model_topology",W="weight_specs",V="weight_data",U="model_metadata";function G(e){return{info:[L,e,P].join(z),topology:[L,e,B].join(z),weightSpecs:[L,e,W].join(z),weightData:[L,e,V].join(z),modelMetadata:[L,e,U].join(z)}}function H(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function j(e){const t=e.split(z);if(t.length<3)throw new Error("Invalid key format: ".concat(e));return t.slice(1,t.length-1).join(z)}class q{constructor(e){if(!(0,b._K)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=G(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),a=JSON.stringify(e.weightSpecs),r=(0,x.oR)(e),s=I.D.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,(0,x.l3)(s));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:r}}catch(t){throw H(this.keys),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(r.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(r.weightSpecsBytes,", ")+"weightDataBytes=".concat(r.weightDataBytes,"."))}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");t.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");t.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));return t.weightData=(0,x.jf)(s),t}}q.URL_SCHEME="localstorage://";const Y=e=>{return(0,b._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(q.URL_SCHEME)?(t=e.slice(q.URL_SCHEME.length),new q(t)):null;var t};w.registerSaveRouter(Y),w.registerLoadRouter(Y);class K{constructor(){(0,M.vA)((0,b._K)().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),(0,M.vA)("undefined"===typeof window||"undefined"!==typeof window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=L+z,n=z+P;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);if(r.startsWith(t)&&r.endsWith(n)){e[j(r)]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){var t;const n=G(e=(t=e).startsWith(q.URL_SCHEME)?t.slice(q.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error("Cannot find model at path '".concat(e,"'"));const a=JSON.parse(this.LS.getItem(n.info));return H(n),a}}const X="://";class Z{constructor(){this.managers={}}static getInstance(){return null==Z.instance&&(Z.instance=new Z),Z.instance}static registerManager(e,t){(0,M.vA)(null!=e,()=>"scheme must not be undefined or null."),e.endsWith(X)&&(e=e.slice(0,e.indexOf(X))),(0,M.vA)(e.length>0,()=>"scheme must not be an empty string.");const n=Z.getInstance();(0,M.vA)(null==n.managers[e],()=>"A model store manager is already registered for scheme '".concat(e,"'.")),n.managers[e]=t}static getManager(e){const t=Z.getInstance().managers[e];if(null==t)throw new Error("Cannot find model manager for scheme '".concat(e,"'"));return t}static getSchemes(){return Object.keys(Z.getInstance().managers)}}function Q(e){if(-1===e.indexOf(X))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+"".concat(Z.getSchemes().join(",")));return{scheme:e.split(X)[0],path:e.split(X)[1]}}async function $(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];(0,M.vA)(e!==t,()=>"Old path and new path are the same: '".concat(e,"'"));const a=w.getLoadHandlers(e);(0,M.vA)(a.length>0,()=>"Copying failed because no load handler is found for source URL ".concat(e,".")),(0,M.vA)(a.length<2,()=>"Copying failed because more than one (".concat(a.length,") ")+"load handlers for source URL ".concat(e,"."));const r=a[0],s=w.getSaveHandlers(t);(0,M.vA)(s.length>0,()=>"Copying failed because no save handler is found for destination "+"URL ".concat(t,".")),(0,M.vA)(s.length<2,()=>"Copying failed because more than one (".concat(a.length,") ")+"save handlers for destination URL ".concat(t,"."));const o=s[0],i=Q(e).scheme,c=Q(e).path,l=i===Q(e).scheme,u=await r.load();n&&l&&await Z.getManager(i).removeModel(c);const d=await o.save(u);return n&&!l&&await Z.getManager(i).removeModel(c),d.modelArtifactsInfo}async function J(){const e=Z.getSchemes(),t={};for(const n of e){const e=await Z.getManager(n).listModels();for(const a in e){t[n+X+a]=e[a]}}return t}async function ee(e){const t=Q(e);return Z.getManager(t.scheme).removeModel(t.path)}async function te(e,t){return $(e,t,!1)}async function ne(e,t){return $(e,t,!0)}var ae=n(5767);class re{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got ".concat(t));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&(0,b._K)().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))):setTimeout(e,t)}isTypedArray(e){return(0,ae.Y)(e)}}if((0,b._K)().get("IS_BROWSER")){(0,b._K)().setPlatform("browser",new re);try{Z.registerManager(q.URL_SCHEME,new K)}catch(fa){}try{Z.registerManager(F.URL_SCHEME,new O)}catch(fa){}}const se=()=>n(5817);let oe;class ie{constructor(){this.util=n(8590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,b._K)().global.fetch?(0,b._K)().global.fetch(e,t):(null==oe&&(oe=se()),oe(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(t));return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}(0,b._K)().get("IS_NODE")&&!(0,b._K)().get("IS_BROWSER")&&(0,b._K)().setPlatform("node",new ie);var ce=n(259),le=n(7794),ue=n(9820),de=n(6574),he=n(9494);(0,p.Ye)();const pe={buffer:ce.r,cast:le.w,clone:ue.o,print:de.y};(0,he.Q5)(pe);var fe=n(8046),me=n(7242),ge=n(4974),ye=n(803),be=n(191),ve=n(7738),xe=n(3290),we=n(1839),ke=n(1997);const Se=new Map,Te=new Map;class Ne{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Ie{constructor(){this.classNameMap={}}static getMap(){return null==Ie.instance&&(Ie.instance=new Ie),Ie.instance}static register(e){Ie.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Ce(e,t,n){(0,M.vA)(null!=e.className,()=>"Class being registered does not have the static className property defined."),(0,M.vA)("string"===typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),(0,M.vA)(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const a=t+">"+n;return Ie.register(e),Se.set(a,e),Te.set(e,a),e}function Ee(e){return Te.has(e)?Te.get(e):e.className}class Ae extends Ne{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:a,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map(e=>({name:e.name,tensor:r[e.name]}));this.applyGradients(e)}else this.applyGradients(r);return(0,fe.AS)(r),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,we.y7)(e,t)}dispose(){null!=this.iterations_&&(0,fe.AS)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,ke.d)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+"".concat(this.getClassName()))}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ae,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class _e extends Ae{static get className(){return"Adadelta"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=p.T2.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const a=p.T2.registeredVariables[t],r=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:"".concat(t,"/accum_grad"),variable:(0,fe.DZ)(()=>(0,xe.P)(a).variable(r))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:"".concat(t,"/accum_var"),variable:(0,fe.DZ)(()=>(0,xe.P)(a).variable(r))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;(0,fe.DZ)(()=>{const e=(0,me.W)((0,ye.l)(o,this.rho),(0,ye.l)((0,ve.E)(s),1-this.rho)),t=(0,ye.l)((0,ge.y)((0,be.R)((0,me.W)(i,this.epsilon)),(0,be.R)((0,me.W)(o,this.epsilon))),s),n=(0,me.W)((0,ye.l)(i,this.rho),(0,ye.l)((0,ve.E)(t),1-this.rho));o.assign(e),i.assign(n);const r=(0,me.W)((0,ye.l)(t,-this.learningRate),a);a.assign(r)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,fe.AS)(this.accumulatedGrads.map(e=>e.variable)),(0,fe.AS)(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}var Re=n(4660);class Fe extends Ae{static get className(){return"Adagrad"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const a=p.T2.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:"".concat(t,"/accumulator"),variable:(0,fe.DZ)(()=>(0,Re.G)(a.shape,this.initialAccumulatorValue).variable(e))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=this.accumulatedGrads[n].variable;(0,fe.DZ)(()=>{const e=(0,me.W)(s,(0,ve.E)(r));s.assign(e);const t=(0,me.W)((0,ye.l)((0,ge.y)(r,(0,be.R)((0,me.W)(e,p.T2.backend.epsilon()))),-this.learningRate),a);a.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,fe.AS)(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(false)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}var De=n(7587),Oe=n(7951);class Me extends Ae{static get className(){return"Adam"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,fe.DZ)(()=>{this.accBeta1=(0,ke.d)(t).variable(),this.accBeta2=(0,ke.d)(n).variable()}),null==a&&(this.epsilon=p.T2.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);(0,fe.DZ)(()=>{const n=(0,Oe.j)(1,this.accBeta1),a=(0,Oe.j)(1,this.accBeta2);t.forEach((t,r)=>{const s=p.T2.registeredVariables[t],o=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(t,"/m"),variable:(0,fe.DZ)(()=>(0,xe.P)(s).variable(o))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:"".concat(t,"/v"),variable:(0,fe.DZ)(()=>(0,xe.P)(s).variable(o))});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const c=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=(0,me.W)((0,ye.l)(c,this.beta1),(0,ye.l)(i,1-this.beta1)),d=(0,me.W)((0,ye.l)(l,this.beta2),(0,ye.l)((0,ve.E)(i),1-this.beta2)),h=(0,ge.y)(u,n),f=(0,ge.y)(d,a);c.assign(u),l.assign(d);const m=(0,me.W)((0,ye.l)((0,ge.y)(h,(0,me.W)((0,be.R)(f),this.epsilon)),-this.learningRate),s);s.assign(m)}),this.accBeta1.assign((0,ye.l)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,ye.l)(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,fe.AS)(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&(0,fe.AS)(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),(0,fe.DZ)(()=>{this.accBeta1.assign((0,De.n)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,De.n)(this.beta2,this.iterations_+1))});const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}var ze=n(3753),Le=n(2131);class Pe extends Ae{static get className(){return"Adamax"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,fe.DZ)(()=>{this.iteration=(0,ke.d)(0).variable(),this.accBeta1=(0,ke.d)(t).variable()}),null==a&&(this.epsilon=p.T2.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);(0,fe.DZ)(()=>{const n=(0,Oe.j)(1,this.accBeta1),a=(0,ge.y)(-this.learningRate,(0,me.W)((0,ye.l)(this.iteration,this.decay),1));t.forEach((t,r)=>{const s=p.T2.registeredVariables[t],o=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(t,"/m"),variable:(0,xe.P)(s).variable(o)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:"".concat(t,"/v"),variable:(0,xe.P)(s).variable(o)});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const c=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=(0,me.W)((0,ye.l)(c,this.beta1),(0,ye.l)(i,1-this.beta1)),d=(0,ye.l)(l,this.beta2),h=(0,ze.t)(i),f=(0,Le.P)(d,h);c.assign(u),l.assign(f);const m=(0,me.W)((0,ye.l)((0,ge.y)(a,n),(0,ge.y)(u,(0,me.W)(f,this.epsilon))),s);s.assign(m)}),this.iteration.assign((0,me.W)(this.iteration,1)),this.accBeta1.assign((0,ye.l)(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,fe.AS)(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&(0,fe.AS)(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class Be extends Ae{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const r=p.T2.registeredVariables[t];(0,fe.DZ)(()=>{const e=(0,me.W)((0,ye.l)(this.c,a),r);r.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,fe.aC)((0,ke.d)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class We extends Be{static get className(){return"Momentum"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,ke.d)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const a=p.T2.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:"".concat(t,"/momentum"),variable:(0,fe.DZ)(()=>(0,xe.P)(a).variable(e))}}const r=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&(0,fe.DZ)(()=>{let e;const t=(0,me.W)((0,ye.l)(this.m,r),s);e=this.useNesterov?(0,me.W)((0,ye.l)(this.c,(0,me.W)(s,(0,ye.l)(t,this.m))),a):(0,me.W)((0,ye.l)(this.c,t),a),r.assign(t),a.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,fe.AS)(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(false)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class Ve extends Ae{static get className(){return"RMSProp"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==a&&(this.epsilon=p.T2.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const a=p.T2.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:"".concat(t,"/rms"),variable:(0,fe.DZ)(()=>(0,xe.P)(a).variable(r))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:"".concat(t,"/momentum"),variable:(0,fe.DZ)(()=>(0,xe.P)(a).variable(r))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:"".concat(t,"/mg"),variable:(0,fe.DZ)(()=>(0,xe.P)(a).variable(r))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;(0,fe.DZ)(()=>{const e=(0,me.W)((0,ye.l)(o,this.decay),(0,ye.l)((0,ve.E)(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=(0,me.W)((0,ye.l)(t,this.decay),(0,ye.l)(s,1-this.decay)),c=(0,ge.y)((0,ye.l)(s,this.learningRate),(0,be.R)((0,Oe.j)(e,(0,me.W)((0,ve.E)(r),this.epsilon)))),l=(0,me.W)((0,ye.l)(i,this.momentum),c);o.assign(e),t.assign(r),i.assign(l);const u=(0,Oe.j)(a,l);a.assign(u)}else{const e=(0,me.W)((0,ye.l)(o,this.decay),(0,ye.l)((0,ve.E)(s),1-this.decay)),t=(0,me.W)((0,ye.l)(i,this.momentum),(0,ge.y)((0,ye.l)(s,this.learningRate),(0,be.R)((0,me.W)(e,this.epsilon))));o.assign(e),i.assign(t);const n=(0,Oe.j)(a,t);a.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,fe.AS)(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&(0,fe.AS)(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&(0,fe.AS)(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const Ue=[_e,Fe,Me,Pe,We,Ve,Be];function Ge(e){return new Promise(e=>setTimeout(e)).then(e)}class He{constructor(e){if(!(0,b._K)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(He.URL_SCHEME)&&(e=e.slice(He.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=I.D.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],a=(0,x.zV)(e,t),r=window.URL.createObjectURL(new Blob([JSON.stringify(a)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await Ge(()=>s.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Ge(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:(0,x.oR)(e)}}}}He.URL_SCHEME="downloads://";class je{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, "+"but received ".concat(e));this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const n=new FileReader;n.onload=n=>{const a=JSON.parse(n.target.result),r=a.modelTopology;if(null==r)return void t(new Error("modelTopology field is missing from file ".concat(this.jsonFile.name)));if(null==a.weightsManifest)return void t(new Error("weightManifest field is missing from file ".concat(this.jsonFile.name)));if(0===this.weightsFiles.length)return void e({modelTopology:r});const s=(0,x.Ej)(a,e=>this.loadWeights(e));e(s)},n.onerror=e=>t("Failed to read model topology and weights manifest JSON "+"from file '".concat(this.jsonFile.name,"'. BrowserFiles supports loading ")+"Keras-style tf.Model artifacts only."),n.readAsText(this.jsonFile)})}loadWeights(e){const t=[],n=[];for(const s of e)t.push(...s.weights),n.push(...s.paths);const a=this.checkManifestAndWeightFiles(e),r=n.map(e=>this.loadWeightsFile(e,a[e]));return Promise.all(r).then(e=>[t,e])}loadWeightsFile(e,t){return new Promise((n,a)=>{const r=new FileReader;r.onload=e=>{const t=e.target.result;n(t)},r.onerror=t=>a("Failed to weights data from file of path '".concat(e,"'.")),r.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map(e=>(0,x.P8)(e.name)),a={};for(const r of e)r.paths.forEach(e=>{const r=(0,x.P8)(e);if(-1!==t.indexOf(r))throw new Error("Duplicate file basename found in weights manifest: "+"'".concat(r,"'"));if(t.push(r),-1===n.indexOf(r))throw new Error("Weight file with basename '".concat(r,"' is not provided."));a[e]=this.weightsFiles[n.indexOf(r)]});if(t.length!==this.weightsFiles.length)throw new Error("Mismatch in the number of files in weights manifest "+"(".concat(t.length,") and the number of weight files provided ")+"(".concat(this.weightsFiles.length,")."));return a}}function qe(e){return new je(e)}function Ye(e,t,n,a){!function(e){(0,M.vA)(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}(e),function(e,t){(0,M.vA)(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but "+"got startFraction ".concat(e)),(0,M.vA)(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but "+"got endFraction ".concat(t)),(0,M.vA)(t>=e,()=>"startFraction must be no more than endFraction, but "+"got startFraction ".concat(e," and endFraction ")+"".concat(t))}(n=null==n?0:n,a=null==a?1:a);let r=0;return Promise.all(e.map(s=>(s.then(s=>{const o=n+ ++r/e.length*(a-n);return t(o),s}),s)))}w.registerSaveRouter(e=>(0,b._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(He.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new He(e)}(e.slice(He.URL_SCHEME.length)):null);var Ke=n(1042);async function Xe(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,b._K)().platform.fetch:t.fetchFunc,a=e.map(e=>n(e,t.requestInit,{isBinary:!0})),r=(null==t.onProgress?await Promise.all(a):await Ye(a,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(r):await Ye(r,t.onProgress,.5,1)}async function Ze(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return Qe(e=>Xe(e,{requestInit:a}))(e,t,n)}function Qe(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",a=arguments.length>2?arguments[2]:void 0;const r=t.map(()=>!1),s={},o=null!=a?a.map(()=>!1):[],i=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{const c="quantization"in e?e.quantization.dtype:e.dtype,l=Ke.i[c]*M.Ze(e.shape),u=()=>{r[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=a?a.forEach((t,n)=>{t===e.name&&(u(),o[n]=!0)}):u(),i.push(e.name),n+=l})}),!o.every(e=>e)){const e=a.filter((e,t)=>!o[t]);throw new Error("Could not find weights in manifest with names: "+"".concat(e.join(", "),". \n")+"Manifest JSON has weights with names: "+"".concat(i.join(", "),"."))}const c=r.reduce((e,t,n)=>(t&&e.push(n),e),[]),l=[];c.forEach(e=>{t[e].paths.forEach(e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)})});const u=await e(l),d={};let h=0;return c.forEach(e=>{const n=t[e].paths.length,a=new I.D(u.slice(h,h+n));s[e].forEach(e=>{const t=a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=(0,x.CY)(t,[e.manifestEntry]);for(const a in n)d[a]=n[a]}),h+=n}),d}}class $e{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,M.vA)("function"===typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=(0,b._K)().platform.fetch,(0,M.vA)(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&(0,M.vA)(2===e.length,()=>"URL paths for http must have a length of 2, "+"(actual length is ".concat(e.length,").")),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],a=(0,x.zV)(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(a)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=I.D.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:(0,x.oR)(e),responses:[r]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+"".concat(r.status,"."))}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error("Request to ".concat(this.path," failed with status code ")+"".concat(e.status,". Please verify this URL points to ")+"the model JSON of the model to load.");let t;try{t=await e.json()}catch(r){let e="Failed to parse model JSON of response from ".concat(this.path,".");throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,a=t.weightsManifest;if(null==n&&null==a)throw new Error("The JSON from HTTP path ".concat(this.path," contains neither model ")+"topology or manifest for weights.");return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return(0,x.Ej)(e,e=>this.loadWeights(e))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=(0,x.Xf)(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const a=null==t.fetchFunc?(0,b._K)().platform.fetch:t.fetchFunc;let r,s=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var o;s<e.length;){if(!r){const n=(await a(e[s],t.requestInit,{isBinary:!0})).body;r=n.getReader()}const{done:i,value:c}=await r.read();if(!i)return void n.enqueue(c);s++,r=void 0,null===(o=t.onProgress)||void 0===o||o.call(t,s/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),a=e.substring(0,t),r=n>t?e.substring(n):"";return[a+"/",r]}(t),r=this.weightPathPrefix||n,s=[],o=[];for(const i of e)for(const e of i.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):s.push(r+e+a);return this.weightUrlConverter&&s.push(...await Promise.all(o)),s}async loadWeights(e){const t=await this.getWeightUrls(e);return[(0,x.Xf)(e),await Xe(t,this.loadOptions)]}}function Je(e){return null!=e.match($e.URL_SCHEME_REGEX)}$e.URL_SCHEME_REGEX=/^https?:\/\//;const et=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>Je(e)):Je(e),n)return tt(e,t)}return null};function tt(e,t){return new $e(e,t)}function nt(e,t){return tt(e,t)}w.registerSaveRouter(et),w.registerLoadRouter(et);class at{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class rt{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class st{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function ot(e,t,n,a){return new st(it(...arguments))}function it(e,t,n,a){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new at(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new at({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new at({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:a})}function ct(e){return new rt(e)}function lt(e){return new rt(e)}var ut=n(4148),dt=n(5162),ht=n(6865),pt=n(7892),ft=n(2154);const mt=(0,pt.op)({confusionMatrix_:function(e,t,n){const a=(0,ut.YT)(e,"labels","confusionMatrix"),r=(0,ut.YT)(t,"predictions","confusionMatrix");M.vA(null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, "+"but got ".concat(n)),M.vA(1===a.rank,()=>"Expected the rank of labels to be 1, but got ".concat(a.rank)),M.vA(1===r.rank,()=>"Expected the rank of predictions to be 1, "+"but got ".concat(r.rank)),M.vA(a.shape[0]===r.shape[0],()=>"Mismatch in the number of examples: "+"".concat(a.shape[0]," vs. ").concat(r.shape[0],". ")+"Labels and predictions should have the same number of elements."),M.vA(n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+"".concat(n));const s=(0,ht.M)((0,le.w)(a,"int32"),n),o=(0,ht.M)((0,le.w)(r,"int32"),n),i=(0,ft.m)(s),c=(0,dt.N)(i,o);return(0,le.w)(c,"int32")}});var gt=n(8805),yt=n(9554),bt=n(843),vt=n(5395);let xt,wt=!1;function kt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,r=!1,s=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)a=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)o=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, "+"but was ".concat(e.constructor.name));i=!0}if(null!=(0,bt._5)(yt.awo,p.T2.backendName)){const n={pixels:e},a={numChannels:t};return p.T2.runKernel(yt.awo,n,a)}const[c,l]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];let u,d;if(o)u=e.getContext("2d").getImageData(0,0,c,l).data;else if(a||n)u=e.data;else if(s||r||i){if(null==xt)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");xt=new OffscreenCanvas(1,1).getContext("2d")}else xt=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});xt.canvas.width=c,xt.canvas.height=l,xt.drawImage(e,0,0,c,l),u=xt.getImageData(0,0,c,l).data}if(4===t)d=new Int32Array(u);else{const e=c*l;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=u[4*n+e]}const h=[l,c,t];return(0,vt.$)(d,h,"int32")}function St(e){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function Tt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,n=null;if((0,b._K)().getBool("WRAP_TO_IMAGEBITMAP")&&St(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(a){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return kt(n,t)}function Nt(e){if(2!==e.rank&&3!==e.rank)throw new Error("toPixels only supports rank 2 or 3 tensors, got rank ".concat(e.rank,"."));const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error("toPixels only supports depth of size "+"1, 3 or 4 but got ".concat(t));if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error("Unsupported type for toPixels: ".concat(e.dtype,".")+" Please use float32 or int32 tensors.")}async function It(e,t){let n=(0,ut.YT)(e,"img","toPixels");if(!(e instanceof he.qY)){const e=n;n=(0,le.w)(e,"int32"),e.dispose()}Nt(n);const[a,r]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2],o=await n.data(),i="float32"===n.dtype?255:1,c=new Uint8ClampedArray(r*a*4);for(let l=0;l<a*r;++l){const e=[0,0,0,255];for(let a=0;a<s;a++){const t=o[l*s+a];if("float32"===n.dtype){if(t<0||t>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(t,"."))}else if("int32"===n.dtype&&(t<0||t>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(t,"."));1===s?(e[0]=t*i,e[1]=t*i,e[2]=t*i):e[a]=t*i}const t=4*l;c[t+0]=Math.round(e[0]),c[t+1]=Math.round(e[1]),c[t+2]=Math.round(e[2]),c[t+3]=Math.round(e[3])}if(null!=t){if(!wt){null!=(0,bt._5)(yt.XmO,p.T2.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),wt=!0)}t.width=r,t.height=a;const e=t.getContext("2d"),n=new ImageData(c,r,a);e.putImageData(n,0,0)}return n!==e&&n.dispose(),c}function Ct(e,t,n){let a=(0,ut.YT)(e,"img","draw");if(!(e instanceof he.qY)){const e=a;a=(0,le.w)(e,"int32"),e.dispose()}Nt(a),function(e){const t=(null===e||void 0===e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error("Alpha value ".concat(t," is suppoed to be in range [0 - 1]."))}(null===n||void 0===n?void 0:n.imageOptions);const r={image:a},s={canvas:t,options:n};p.T2.runKernel(yt.XmO,r,s)}const Et=(0,pt.op)({fromPixels_:kt});function At(e,t){const n=e.shape.length,a=t.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+" but the rank was ".concat(n,"."));if(a<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(a,"."));if("int32"!==t.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+" but the dtype was ".concat(t.dtype,"."));if(t.shape[a-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+"".concat(t.shape[a-1]," vs. ").concat(n));if(0===(0,M.Ze)(e.shape))throw new Error("Requested more than 0 entries, but input is empty."+" Input shape: ".concat(e.shape,"."));const r=t.shape,s=r[r.length-1];let o=1;for(let d=0;d<r.length-1;++d)o*=r[d];const i=e.shape,c=r.slice();c.pop();let l=1;for(let d=s;d<n;++d)l*=i[d],c.push(i[d]);const u=[...(0,M.Ur)(e.shape).map(e=>e/l),1].slice(0,s);return[c,o,l,u]}var _t=n(4083),Rt=n(4642),Ft=n(8804),Dt=n(8977);const Ot=.001,Mt=.1;function zt(e,t,n){return null==n&&(n=Lt()),Pt(e,t,(e,t)=>Ut(e,t,n))}function Lt(){return 32===p.T2.backend.floatPrecision()?Ot:Mt}function Pt(e,t,n){let a=!0;if(((0,Dt.isTypedArray)(e)||(0,Dt.isTypedArray)(t))&&(a=!1),(0,Dt.isTypedArray)(e)&&(0,Dt.isTypedArray)(t)&&(a=!0),a){const n=e.constructor.name,a=t.constructor.name;if(n!==a)throw new Error("Arrays are of different type. Actual: ".concat(n,". ")+"Expected: ".concat(a))}if(Array.isArray(e)&&Array.isArray(t)){const n=(0,ut.MZ)(e),a=(0,ut.MZ)(t);if(!(0,M.r1)(n,a))throw new Error("Arrays have different shapes. "+"Actual: [".concat(n,"]. Expected: [").concat(a,"]"))}const r=(0,Dt.isTypedArray)(e)?e:(0,Dt.flatten)(e),s=(0,Dt.isTypedArray)(t)?t:(0,Dt.flatten)(t);if(r.length!==s.length)throw new Error("Arrays have different lengths actual: ".concat(r.length," vs ")+"expected: ".concat(s.length,".\n")+"Actual:   ".concat(r,".\n")+"Expected: ".concat(s,"."));for(let o=0;o<s.length;++o){const e=r[o],t=s[o];if(!n(e,t))throw new Error("Arrays differ: actual[".concat(o,"] = ").concat(e,", expected[").concat(o,"] = ").concat(t,".\n")+"Actual:   ".concat(r,".\n")+"Expected: ".concat(s,"."))}"undefined"!==typeof expect&&expect().nothing()}function Bt(e,t){e().then(()=>t.fail(),()=>t()),"undefined"!==typeof expect&&expect().nothing()}function Wt(e,t){const n="string"===typeof t||"number"===typeof t||"boolean"===typeof t?[t]:t;return(0,M.Kg)(e)||(0,M.Kg)(e[0])||(0,M.Kg)(t)||(0,M.Kg)(t[0])?Pt(e,n,(e,t)=>e==t):Pt(e,t,(e,t)=>Ut(e,t,0))}function Vt(e,t,n){if(null==n&&(n=Lt()),!Ut(e,t,n))throw new Error("Numbers differ: actual === ".concat(e,", expected === ").concat(t));"undefined"!==typeof expect&&expect().nothing()}function Ut(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Gt(e,t,n){for(let a=0;a<e.length;a++)if(e[a]<t||e[a]>n)throw new Error("Value out of range:".concat(e[a]," low: ").concat(t,", high: ").concat(n))}function Ht(e,t){const n=new Float32Array(e),a=new Float32Array(t);if(n.length!==a.length)throw new Error("Expected ArrayBuffer to be of length "+"".concat(a.length,", but it was ").concat(n.length));for(let r=0;r<a.length;r++)if(n[r]!==a[r])throw new Error("Expected ArrayBuffer value at ".concat(r," to be ")+"".concat(a[r]," but got ").concat(n[r]," instead"))}function jt(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?jt(n):e[t]=(0,Dt.encodeString)(n)}return e}function qt(e){const t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise(e=>{t.addEventListener("loadeddata",n=>e(t)),t.load()})}async function Yt(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise(t=>{e.requestVideoFrameCallback(t)})}const Kt="4.22.0";class Xt{static sgd(e){return new Be(e)}static momentum(e,t){return new We(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new Ve(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new Me(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new _e(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new Pe(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new Fe(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}}var Zt=n(8075),Qt=n(9249),$t=n(1667);const Jt=Xt,en="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function tn(){return new Promise(e=>en(()=>e()))}var nn=n(9235);function an(e,t){const n=e[0].length;e.forEach((e,t)=>{M.vA(e.length===n,()=>"Error in concat".concat(n,"D: rank of tensors[").concat(t,"] must be the same ")+"as the rank of the rest (".concat(n,")"))}),M.vA(t>=0&&t<n,()=>"Error in concat".concat(n,"D: axis must be between 0 and ").concat(n-1,"."));const a=e[0];e.forEach((e,r)=>{for(let s=0;s<n;s++)M.vA(s===t||e[s]===a[s],()=>"Error in concat".concat(n,"D: Shape of tensors[").concat(r,"] (").concat(e,") ")+"does not match the shape of the rest (".concat(a,") ")+"along the non-concatenated axis ".concat(r,"."))})}function rn(e,t){const n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}var sn,on=n(7538),cn=n(7905);function ln(e,t,n){let a=new Array;if(null==n&&null==t)return a;if(null==t)for(;a.length<e+n.length;)a.push(-1);else a=t.slice();if(null==n)return a;if(e+n.length!==a.length)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.rank = ").concat(e+n.length,", but shape.rank = ").concat(a.length));for(let r=1;r<n.length;++r){const s=n[r],o=a[a.length-n.length+r],i=a[o];if(s>=0)if(i>=0){if(i!==s)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.shape[").concat(r+e,"] = ").concat(s," but shape[").concat(r+e,"] = ").concat(i))}else a[o]=s}return a}function un(e){const t={FIRST_DIM_SIZE:sn.FIRST_DIM_SIZE,VALUE_ROWIDS:sn.VALUE_ROWIDS,ROW_LENGTHS:sn.ROW_LENGTHS,ROW_SPLITS:sn.ROW_SPLITS,ROW_LIMITS:sn.ROW_LIMITS,ROW_STARTS:sn.ROW_STARTS},n=[];for(const a of e){if(!(a in t))break;n.push(t[a])}return n}function dn(e){return 0===e.length?0:e[0]===sn.FIRST_DIM_SIZE?e.length-1:e.length}function hn(e,t){if(null==e||null==t)return;const n=e.length,a=t.length;if(n>=a)throw new Error("defaultValue.shape=".concat(e," and ragged tensor flatValues.shape=").concat(t,", are incompatible: defaultValue.rank = ").concat(n," must be less than ragged tensor input flatValues.rank = ").concat(a,")"));for(let r=0;r<Math.min(n,a-1);++r){const n=e[r],a=t[r+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw new Error("defaultValue.shape=".concat(e,", and ragged tensor input flatValues.shape=").concat(t," are incompatible: defaultValue.shape[").concat(r-e.length,"] = ").concat(n," but ragged tensor input.flatValues.shape[").concat(r-e.length,"] = ").concat(a))}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(sn||(sn={}));const pn=30;function fn(e){return e<=pn?e:(0,M.lK)(e,Math.floor(Math.sqrt(e)))}function mn(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function gn(e,t,n){let a=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function yn(e,t){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(t);for(let a=t+1;a<e;++a)a<=2*t?(n.push(a),n.push(a-(t+1))):n.push(a)}else{const a=[],r=[];for(let n=1;n<e;++n)n>=2*t+1||n%2===1?r.push(n):a.push(n);n.push(...a),n.push(0),n.push(...r)}return n}function bn(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=[];a?r.push(e[0]/n):r.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?a?r.push(t[s-1]*e[s]):r.push(e[s]/t[s-1]):r.push(e[s]);return r}function vn(e,t){const n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function xn(e,t,n){const a=e.slice(0,1);for(let r=0;r<n;++r)a.push(e[r+1]-t[r][0]-t[r][1]);return a}var wn=n(3765);const kn=.3275911,Sn=.254829592,Tn=-.284496736,Nn=1.421413741,In=-1.453152027,Cn=1.061405429;var En=n(4124);function An(e,t){if(e.length!==t.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+"".concat(e.length,", imag: ").concat(t.length,"."));const n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function _n(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function Rn(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function Fn(e){const t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function Dn(e,t){return{real:e[2*t],imag:e[2*t+1]}}function On(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function Mn(e,t){const n=new Float32Array(e/2),a=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const s=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(s),a[r]=Math.sin(s)}return{real:n,imag:a}}function zn(e,t,n){const a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}const Ln="->",Pn=/->/g,Bn=",",Wn="...";function Vn(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Pn,"").length)/Ln.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("'.concat(Ln,'").'));const[a,r]=e.split(Ln);(0,M.vA)(-1===a.indexOf(Wn),()=>'The ellipsis notation ("'.concat(Wn,'") is not supported yet.'));const s=a.split(Bn),o=s.length;if(t!==o)throw new Error("Expected ".concat(o," input tensors, received ").concat(t));if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let d=0;d<r.length;++d){const e=r[d];if(!s.some(t=>-1!==t.indexOf(e)))throw new Error("Output subscripts contain the label ".concat(e," ")+"not present in the input subscripts.");-1===i.indexOf(e)&&i.push(e)}for(let d=0;d<a.length;++d){const e=a[d];-1===i.indexOf(e)&&e!==Bn&&i.push(e)}const c=new Array(s.length);for(let d=0;d<o;++d){if(new Set(s[d].split("")).size!==s[d].length)throw new Error("Found duplicate axes in input component ".concat(s[d],". ")+"Support for duplicate axes in input is not implemented yet.");c[d]=[];for(let e=0;e<s[d].length;++e)c[d].push(i.indexOf(s[d][e]))}const l=i.length,u=[];for(let d=r.length;d<l;++d)u.push(d);return{allDims:i,summedDims:u,idDims:c}}function Un(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;const a=[];for(let r=0;r<e;++r)-1===n[r]&&a.push(r);return n=n.filter(e=>-1!==e),{permutationIndices:n,expandDims:a}}function Gn(e,t,n){const a=new Array(e);for(let r=0;r<n.length;++r){const e=n[r].shape;for(let n=0;n<t[r].length;++n)void 0===a[t[r][n]]?a[t[r][n]]=e[n]:(0,M.vA)(a[t[r][n]]===e[n],()=>"Expected dimension ".concat(a[t[r][n]]," at axis ").concat(n," ")+"of input shaped ".concat(JSON.stringify(e),", ")+"but got dimension ".concat(e[n]))}}function Hn(e,t){const n=e,a=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let o=0;o<r;++o)a.push([]);const s=[];for(let o=0;o<n.length;++o){const e=qn(t,n[o]);for(const t of e)-1===s.indexOf(t)&&(a[o].push(t),s.push(t))}return{path:n,steps:a}}function jn(e){return e.every((e,t)=>e===t)}function qn(e,t){const n=[];for(let a=0;a<e.length;++a)0!==e[a].length&&-1===e[a].indexOf(t)&&-1!==t||n.push(a);return n}function Yn(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=[];if("number"===typeof t)(0,M.vA)(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),a=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce((e,t)=>(-1===t&&(e+=1),e),0);(0,M.vA)(r<=1,()=>"There should be only one negative value in split array.");const s=t.indexOf(-1);if(-1!==s){const a=t.reduce((e,t)=>t>0?e+t:e);t[s]=e.shape[n]-a}(0,M.vA)(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),a=t}return a}function Kn(e){return"Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ".concat(e)}function Xn(e,t){return"indices(".concat(e,", 0) is invalid: ").concat(t," < 0")}function Zn(e,t,n){return"indices(".concat(e,", 0) is invalid: ").concat(t," >= ").concat(n)}function Qn(e,t){return"only one output dimension may be -1, not both ".concat(e," and ").concat(t)}function $n(e,t){return"size ".concat(e," must be non-negative, not ").concat(t)}function Jn(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function ea(e,t){const n=(0,M.Ze)(e),a=(0,M.Ze)(t);return"Input to reshape is a SparseTensor with ".concat(n,"\n  dense values, but the requested shape requires a multiple of ").concat(a,". inputShape=").concat(e," outputShape= ").concat(t)}function ta(e,t){const n=(0,M.Ze)(e),a=(0,M.Ze)(t);return"Input to reshape is a tensor with ".concat(n," dense values, but the requested shape has ").concat(a,". inputShape=").concat(e," outputShape=").concat(t)}function na(){return"segment ids must be >= 0"}function aa(){return"segment ids are not increasing"}function ra(e,t){return"Segment id ".concat(e," out of range [0, ").concat(t,"), possibly because segmentIds input is not sorted.")}function sa(e,t,n){return"Bad: indices[".concat(e,"] == ").concat(t," out of range [0, ").concat(n,")")}function oa(e,t){let n,a=!1;for(e<=pn?(n=e,a=!0):n=(0,M.lK)(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=(0,M.lK)(e,n+1);return n}function ia(e,t,n){const a=[],r=e.length;for(let s=0;s<r;s++)s!==t?a.push(e[s]):a.push(n);return a}function ca(e,t,n,a){const r=t.shape.length,s=e.shape.length;if(0!==a&&(a<-r||a>r))throw new Error("Expect batchDims in the range of [-".concat(r,", ").concat(r,"], but got ").concat(a));if(a<0&&(a+=r),a>s)throw new Error("batchDims (".concat(a,") must be less than rank(x) (\n    ").concat(s,")."));if(n<a)throw new Error("batchDims (".concat(a,") must be less than or equal to axis (").concat(n,")."));for(let d=0;d<a;++d)if(e.shape[d]!==t.shape[d])throw new Error("x.shape[".concat(d,"]: ").concat(e.shape[d]," should be equal to indices.shape[").concat(d,"]: ").concat(t.shape[d],"."));const o=e.shape[n],i=[];let c=1,l=1,u=1;for(let d=0;d<a;++d)i.push(e.shape[d]),c*=e.shape[d];for(let d=a;d<n;d++)i.push(e.shape[d]),l*=e.shape[d];for(let d=a;d<r;d++)i.push(t.shape[d]);for(let d=n+1;d<s;d++)i.push(e.shape[d]),u*=e.shape[d];return{batchSize:c,sliceSize:u,outerSize:l,dimSize:o,outputShape:i}}function la(e){try{return e.map(e=>(0,Dt.decodeString)(e))}catch(fa){throw new Error("Failed to decode encoded string bytes into utf-8, error: ".concat(fa))}}function ua(e){return e.map(e=>(0,Dt.encodeString)(e))}var da=n(6692),ha=n(9286),pa=n(6790);!function(){for(const e of Ue)Ce(e)}()},5767:(e,t,n)=>{"use strict";function a(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}n.d(t,{Y:()=>a})},5817:()=>{},5894:(e,t,n)=>{"use strict";n.d(t,{g:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({cos_:function(e){const t={x:(0,s.YT)(e,"x","cos","float32")};return a.T2.runKernel(r.Mn0,t)}})},5896:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var a=n-1>>>1,r=e[a];if(!(0<s(r,t)))break e;e[a]=t,e[n]=r,n=a}}function a(e){return 0===e.length?null:e[0]}function r(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var a=0,r=e.length,o=r>>>1;a<o;){var i=2*(a+1)-1,c=e[i],l=i+1,u=e[l];if(0>s(c,n))l<r&&0>s(u,c)?(e[a]=u,e[l]=n,a=l):(e[a]=c,e[i]=n,a=i);else{if(!(l<r&&0>s(u,n)))break e;e[a]=u,e[l]=n,a=l}}}return t}function s(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if(t.unstable_now=void 0,"object"===typeof performance&&"function"===typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var i=Date,c=i.now();t.unstable_now=function(){return i.now()-c}}var l=[],u=[],d=1,h=null,p=3,f=!1,m=!1,g=!1,y=!1,b="function"===typeof setTimeout?setTimeout:null,v="function"===typeof clearTimeout?clearTimeout:null,x="undefined"!==typeof setImmediate?setImmediate:null;function w(e){for(var t=a(u);null!==t;){if(null===t.callback)r(u);else{if(!(t.startTime<=e))break;r(u),t.sortIndex=t.expirationTime,n(l,t)}t=a(u)}}function k(e){if(g=!1,w(e),!m)if(null!==a(l))m=!0,T||(T=!0,S());else{var t=a(u);null!==t&&F(k,t.startTime-e)}}var S,T=!1,N=-1,I=5,C=-1;function E(){return!!y||!(t.unstable_now()-C<I)}function A(){if(y=!1,T){var e=t.unstable_now();C=e;var n=!0;try{e:{m=!1,g&&(g=!1,v(N),N=-1),f=!0;var s=p;try{t:{for(w(e),h=a(l);null!==h&&!(h.expirationTime>e&&E());){var o=h.callback;if("function"===typeof o){h.callback=null,p=h.priorityLevel;var i=o(h.expirationTime<=e);if(e=t.unstable_now(),"function"===typeof i){h.callback=i,w(e),n=!0;break t}h===a(l)&&r(l),w(e)}else r(l);h=a(l)}if(null!==h)n=!0;else{var c=a(u);null!==c&&F(k,c.startTime-e),n=!1}}break e}finally{h=null,p=s,f=!1}n=void 0}}finally{n?S():T=!1}}}if("function"===typeof x)S=function(){x(A)};else if("undefined"!==typeof MessageChannel){var _=new MessageChannel,R=_.port2;_.port1.onmessage=A,S=function(){R.postMessage(null)}}else S=function(){b(A,0)};function F(e,n){N=b(function(){e(t.unstable_now())},n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):I=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_requestPaint=function(){y=!0},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,r,s){var o=t.unstable_now();switch("object"===typeof s&&null!==s?s="number"===typeof(s=s.delay)&&0<s?o+s:o:s=o,e){case 1:var i=-1;break;case 2:i=250;break;case 5:i=1073741823;break;case 4:i=1e4;break;default:i=5e3}return e={id:d++,callback:r,priorityLevel:e,startTime:s,expirationTime:i=s+i,sortIndex:-1},s>o?(e.sortIndex=s,n(u,e),null===a(l)&&e===a(u)&&(g?(v(N),N=-1):g=!0,F(k,s-o))):(e.sortIndex=i,n(l,e),m||f||(m=!0,T||(T=!0,S()))),e},t.unstable_shouldYield=E,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},5911:(e,t,n)=>{"use strict";n.d(t,{R:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({log_:function(e){const t={x:(0,s.YT)(e,"x","log","float32")};return a.T2.runKernel(r.tG8,t)}})},6005:(e,t,n)=>{"use strict";n.d(t,{E:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({isInf_:function(e){const t={x:(0,s.YT)(e,"x","isInf")};return a.T2.runKernel(r.E3$,t)}})},6044:(e,t,n)=>{"use strict";n.d(t,{j:()=>u});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7538),c=n(7892),l=n(5583);const u=(0,c.op)({maxPool_:function(e,t,n,c,u){const d=(0,s.YT)(e,"x","maxPool");let h=d,p=!1;3===d.rank&&(p=!0,h=(0,l.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),o.vA(4===h.rank,()=>"Error in maxPool: input must be rank 4 but got rank ".concat(h.rank,".")),o.vA(i.G0(n,1),()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'")),i.s_("maxPool",c,u);const f={x:h},m={filterSize:t,strides:n,pad:c,dimRoundingMode:u},g=a.T2.runKernel(r.t3d,f,m);return p?(0,l.t)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},6149:(e,t,n)=>{"use strict";n.d(t,{f:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({complex_:function(e,t){const n=(0,s.YT)(e,"real","complex"),i=(0,s.YT)(t,"imag","complex");o.O3(n.shape,i.shape,"real and imag shapes, ".concat(n.shape," and ").concat(i.shape,", ")+"must match in call to tf.complex().");const c={real:n,imag:i};return a.T2.runKernel(r.pr3,c)}})},6178:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const i={x:(0,s.YT)(e,"x","gather"),indices:(0,s.YT)(t,"indices","gather","int32")},c={axis:n,batchDims:o};return a.T2.runKernel(r.mxL,i,c)}})},6288:function(e,t,n){var a;!function(e,r){function s(e){var t=this;t.next=function(){var e,n,a=t.w,r=t.X,s=t.i;return t.w=a=a+1640531527|0,n=r[s+34&127],e=r[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[s]=n^e,t.i=s,n+(a^a>>>16)|0},function(e,t){var n,a,r,s,o,i=[],c=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,c=Math.max(c,t.length)),r=0,s=-32;s<c;++s)t&&(a^=t.charCodeAt((s+32)%t.length)),0===s&&(o=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,s>=0&&(o=o+1640531527|0,r=0==(n=i[127&s]^=a+o)?r+1:0);for(r>=128&&(i[127&(t&&t.length||0)]=-1),r=127,s=512;s>0;--s)a=i[r+34&127],n=i[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,i[r]=a^n;e.w=o,e.X=i,e.i=r}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function i(e,t){null==e&&(e=+new Date);var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.X&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.xor4096=i}(0,e=n.nmd(e),n.amdD)},6309:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({reciprocal_:function(e){const t={x:(0,s.YT)(e,"x","reciprocal")};return a.T2.runKernel(r.huO,t)}})},6349:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var a=n(2164),r=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({atan2_:function(e,t){let n=(0,o.YT)(e,"a","atan2"),i=(0,o.YT)(t,"b","atan2");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.lxb,c)}})},6410:(e,t,n)=>{"use strict";n.d(t,{c:()=>c});var a=n(2164),r=n(9554),s=n(1426),o=n(7892),i=n(5583);const c=(0,o.op)({conv3DBackpropInput_:function(e,t,n,o,c){s.vA(e.length===t.rank,()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match"));let l=e,u=t,d=!1;4===t.rank&&(d=!0,u=(0,i.t)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),l=[1,e[0],e[1],e[2],e[3]]);const h=l[4],p=u.shape[4];s.vA(5===l.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(l.length,".")),s.vA(5===u.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(u.rank)),s.vA(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(n.rank)),s.vA(h===n.shape[3],()=>"Error in conv3dDerInput: depth of input (".concat(h,") must ")+"match input depth for filter ".concat(n.shape[3],".")),s.vA(p===n.shape[4],()=>"Error in conv3dDerInput: depth of output (".concat(p,") must ")+"match output depth for filter ".concat(n.shape[4],"."));const f={dy:u,filter:n},m={pad:c,strides:o,inputShape:l},g=a.T2.runKernel(r.gC7,f,m);return d?(0,i.t)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},6434:(e,t,n)=>{"use strict";n.d(t,{O:()=>c});var a=n(4148),r=n(1426),s=n(5162),o=n(7892),i=n(5583);const c=(0,o.op)({dot_:function(e,t){const n=(0,a.YT)(e,"t1","dot"),o=(0,a.YT)(t,"t2","dot");r.vA((1===n.rank||2===n.rank)&&(1===o.rank||2===o.rank),()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(n.rank," and ").concat(o.rank,"."));const c=1===n.rank?n.size:n.shape[1],l=1===o.rank?o.size:o.shape[0];if(r.vA(c===l,()=>"Error in dot: inner dimensions of inputs must match, but got "+"".concat(c," and ").concat(l,".")),1===n.rank&&1===o.rank){const e=(0,i.t)(n,[1,-1]),t=(0,i.t)(o,[-1,1]),a=(0,s.N)(e,t);return(0,i.t)(a,[])}if(1===n.rank&&2===o.rank){const e=(0,i.t)(n,[1,-1]),t=(0,i.t)(o,[o.shape[0],o.shape[1]]),a=(0,s.N)(e,t);return(0,i.t)(a,[a.size])}if(2===n.rank&&1===o.rank){const e=(0,i.t)(o,[-1,1]),t=(0,s.N)(n,e);return(0,i.t)(t,[t.size])}{const e=(0,i.t)(o,[o.shape[0],o.shape[1]]);return(0,s.N)(n,e)}}})},6464:(e,t,n)=>{"use strict";n.d(t,{y:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({asinh_:function(e){const t={x:(0,s.YT)(e,"x","asinh")};return a.T2.runKernel(r.epO,t)}})},6509:(e,t,n)=>{"use strict";n.d(t,{L:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({round_:function(e){const t={x:(0,s.YT)(e,"x","round")};return a.T2.runKernel(r.hVg,t)}})},6532:(e,t,n)=>{"use strict";n.d(t,{y:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({tanh_:function(e){const t={x:(0,s.YT)(e,"x","tanh","float32")};return a.T2.runKernel(r.iuW,t)}})},6561:(e,t,n)=>{"use strict";n.d(t,{B:()=>l});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805),c=n(7794);const l=(0,n(7892).op)({minimum_:function(e,t){let n=(0,o.YT)(e,"a","minimum"),l=(0,o.YT)(t,"b","minimum");[n,l]=(0,s.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,c.w)(n,"int32"),l=(0,c.w)(l,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return a.T2.runKernel(r.LG0,u)}})},6574:(e,t,n)=>{"use strict";function a(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}n.d(t,{y:()=>a})},6584:(e,t,n)=>{"use strict";n.d(t,{K:()=>l});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7892),c=n(5583);const l=(0,i.op)({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const u=(0,s.YT)(e,"x","localResponseNormalization");o.vA(4===u.rank||3===u.rank,()=>"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(u.rank,".")),o.vA(o.E6(t),()=>"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(t,"."));let d=u,h=!1;3===u.rank&&(h=!0,d=(0,c.t)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const p={x:d},f={depthRadius:t,bias:n,alpha:i,beta:l},m=a.T2.runKernel(r.jM4,p,f);return h?(0,c.t)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},6672:(e,t,n)=>{"use strict";var a=n(5043);function r(e){var t="https://react.dev/errors/"+e;if(1<arguments.length){t+="?args[]="+encodeURIComponent(arguments[1]);for(var n=2;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n])}return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function s(){}var o={d:{f:s,r:function(){throw Error(r(522))},D:s,C:s,L:s,m:s,X:s,S:s,M:s},p:0,findDOMNode:null},i=Symbol.for("react.portal");var c=a.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;function l(e,t){return"font"===e?"":"string"===typeof t?"use-credentials"===t?t:"":void 0}t.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=o,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!t||1!==t.nodeType&&9!==t.nodeType&&11!==t.nodeType)throw Error(r(299));return function(e,t,n){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:i,key:null==a?null:""+a,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.flushSync=function(e){var t=c.T,n=o.p;try{if(c.T=null,o.p=2,e)return e()}finally{c.T=t,o.p=n,o.d.f()}},t.preconnect=function(e,t){"string"===typeof e&&(t?t="string"===typeof(t=t.crossOrigin)?"use-credentials"===t?t:"":void 0:t=null,o.d.C(e,t))},t.prefetchDNS=function(e){"string"===typeof e&&o.d.D(e)},t.preinit=function(e,t){if("string"===typeof e&&t&&"string"===typeof t.as){var n=t.as,a=l(n,t.crossOrigin),r="string"===typeof t.integrity?t.integrity:void 0,s="string"===typeof t.fetchPriority?t.fetchPriority:void 0;"style"===n?o.d.S(e,"string"===typeof t.precedence?t.precedence:void 0,{crossOrigin:a,integrity:r,fetchPriority:s}):"script"===n&&o.d.X(e,{crossOrigin:a,integrity:r,fetchPriority:s,nonce:"string"===typeof t.nonce?t.nonce:void 0})}},t.preinitModule=function(e,t){if("string"===typeof e)if("object"===typeof t&&null!==t){if(null==t.as||"script"===t.as){var n=l(t.as,t.crossOrigin);o.d.M(e,{crossOrigin:n,integrity:"string"===typeof t.integrity?t.integrity:void 0,nonce:"string"===typeof t.nonce?t.nonce:void 0})}}else null==t&&o.d.M(e)},t.preload=function(e,t){if("string"===typeof e&&"object"===typeof t&&null!==t&&"string"===typeof t.as){var n=t.as,a=l(n,t.crossOrigin);o.d.L(e,n,{crossOrigin:a,integrity:"string"===typeof t.integrity?t.integrity:void 0,nonce:"string"===typeof t.nonce?t.nonce:void 0,type:"string"===typeof t.type?t.type:void 0,fetchPriority:"string"===typeof t.fetchPriority?t.fetchPriority:void 0,referrerPolicy:"string"===typeof t.referrerPolicy?t.referrerPolicy:void 0,imageSrcSet:"string"===typeof t.imageSrcSet?t.imageSrcSet:void 0,imageSizes:"string"===typeof t.imageSizes?t.imageSizes:void 0,media:"string"===typeof t.media?t.media:void 0})}},t.preloadModule=function(e,t){if("string"===typeof e)if(t){var n=l(t.as,t.crossOrigin);o.d.m(e,{as:"string"===typeof t.as&&"script"!==t.as?t.as:void 0,crossOrigin:n,integrity:"string"===typeof t.integrity?t.integrity:void 0})}else o.d.m(e)},t.requestFormReset=function(e){o.d.r(e)},t.unstable_batchedUpdates=function(e,t){return e(t)},t.useFormState=function(e,t,n){return c.H.useFormState(e,t,n)},t.useFormStatus=function(){return c.H.useHostTransitionStatus()},t.version="19.1.0"},6692:(e,t,n)=>{"use strict";function a(e,t,n){const a=function(e,t,n){return function(e,t,n){let a=0,r=e.length,s=0,o=!1;for(;a<r;){s=a+(r-a>>>1);const i=n(t,e[s]);i>0?a=s+1:(r=s,o=!i)}return o?a:-a-1}(e,t,n||r)}(e,t,n),s=a<0?-(a+1):a;e.splice(s,0,t)}function r(e,t){return e>t?1:e<t?-1:0}function s(e,t,n,a,r){return c(e,t,n,a,r,0)}function o(e,t,n,a,r,s){return c(e,t,n,a,r,0,!1,s,!0)}function i(e,t,n,a,r,s){return c(e,t,n,a,r,s,!0)}function c(e,t,n,r,s,o){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7&&void 0!==arguments[7]&&arguments[7],h=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const p=[];for(let a=0;a<t.length;a++)t[a]>s&&p.push({score:t[a],boxIndex:a,suppressBeginIndex:0});p.sort(d);const f=o>0?-.5/o:0,m=[],g=[];for(;m.length<n&&p.length>0;){const t=p.pop(),{score:n,boxIndex:o,suppressBeginIndex:i}=t;if(n<s)break;let c=!1;for(let a=m.length-1;a>=i;--a){const n=l(e,o,m[a]);if(n>=r){c=!0;break}if(t.score=t.score*u(r,f,n),t.score<=s)break}t.suppressBeginIndex=m.length,c||(t.score===n?(m.push(o),g.push(t.score)):t.score>s&&a(p,t,d))}const y=m.length,b=n-y;c&&b>0&&(m.push(...new Array(b).fill(0)),g.push(...new Array(b).fill(0)));const v={selectedIndices:m};return i&&(v.selectedScores=g),h&&(v.validOutputs=y),v}function l(e,t,n){const a=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),s=Math.min(a[0],a[2]),o=Math.min(a[1],a[3]),i=Math.max(a[0],a[2]),c=Math.max(a[1],a[3]),l=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),h=Math.max(r[1],r[3]),p=(i-s)*(c-o),f=(d-l)*(h-u);if(p<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(o,u),y=Math.min(i,d),b=Math.min(c,h),v=Math.max(y-m,0)*Math.max(b-g,0);return v/(p+f-v)}function u(e,t,n){const a=Math.exp(t*n*n);return n<=e?a:0}function d(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{c7:()=>s,ZS:()=>o,ut:()=>i})},6719:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=(0,s.YT)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and dim was ").concat(t));const o={logits:n},i={dim:t};return a.T2.runKernel(r.rFG,o,i)}})},6777:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({rsqrt_:function(e){const t={x:(0,s.YT)(e,"x","rsqrt","float32")};return a.T2.runKernel(r.TOR,t)}})},6790:(e,t,n)=>{"use strict";n.d(t,{GJ:()=>a,uI:()=>r});class a{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class r{refCount(e){return s("refCount")}incRef(e){return s("incRef")}timerAvailable(){return!0}time(e){return s("time")}read(e){return s("read")}readSync(e){return s("readSync")}readToGPU(e,t){return s("readToGPU")}numDataIds(){return s("numDataIds")}disposeData(e,t){return s("disposeData")}write(e,t,n){return s("write")}move(e,t,n,a,r){return s("move")}createTensorFromGPUData(e,t,n){return s("createTensorFromGPUData")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return s("dispose")}}function s(e){throw new Error("'".concat(e,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}},6865:(e,t,n)=>{"use strict";n.d(t,{M:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(t));const c={indices:(0,s.YT)(e,"indices","oneHot","int32")},l={dtype:i,depth:t,onValue:n,offValue:o};return a.T2.runKernel(r.urI,c,l)}})},6927:(e,t,n)=>{"use strict";n.d(t,{H:()=>l});var a=n(2164),r=n(9554),s=n(1426),o=n(7538),i=n(7892),c=n(5583);const l=(0,i.op)({conv2DBackpropFilter_:function(e,t,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",d=arguments.length>6?arguments[6]:void 0,h=e;3===e.rank&&(h=(0,c.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let p=t;3===p.rank&&(p=(0,c.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),s.vA(4===h.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(h.shape,".")),s.vA(4===p.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(p.shape,".")),s.vA(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(n,"."));const f="NHWC"===u?h.shape[3]:h.shape[1],m="NHWC"===u?p.shape[3]:p.shape[1];s.vA(f===n[2],()=>"Error in conv2dDerFilter: depth of input ".concat(f,") must ")+"match input depth in filter (".concat(n[2],".")),s.vA(m===n[3],()=>"Error in conv2dDerFilter: depth of dy (".concat(m,") must ")+"match output depth for filter (".concat(n[3],").")),o.s_("conv2dDerFilter",l,d);const g={x:h,dy:p},y={strides:i,pad:l,dataFormat:u,dimRoundingMode:d,filterShape:n};return a.T2.runKernel(r.rFm,g,y)}})},7004:(e,t,n)=>{"use strict";var a=n(8853),r=n(5043),s=n(7950);function o(e){var t="https://react.dev/errors/"+e;if(1<arguments.length){t+="?args[]="+encodeURIComponent(arguments[1]);for(var n=2;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n])}return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function i(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function c(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function l(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function u(e){if(c(e)!==e)throw Error(o(188))}function d(e){var t=e.tag;if(5===t||26===t||27===t||6===t)return e;for(e=e.child;null!==e;){if(null!==(t=d(e)))return t;e=e.sibling}return null}var h=Object.assign,p=Symbol.for("react.element"),f=Symbol.for("react.transitional.element"),m=Symbol.for("react.portal"),g=Symbol.for("react.fragment"),y=Symbol.for("react.strict_mode"),b=Symbol.for("react.profiler"),v=Symbol.for("react.provider"),x=Symbol.for("react.consumer"),w=Symbol.for("react.context"),k=Symbol.for("react.forward_ref"),S=Symbol.for("react.suspense"),T=Symbol.for("react.suspense_list"),N=Symbol.for("react.memo"),I=Symbol.for("react.lazy");Symbol.for("react.scope");var C=Symbol.for("react.activity");Symbol.for("react.legacy_hidden"),Symbol.for("react.tracing_marker");var E=Symbol.for("react.memo_cache_sentinel");Symbol.for("react.view_transition");var A=Symbol.iterator;function _(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=A&&e[A]||e["@@iterator"])?e:null}var R=Symbol.for("react.client.reference");function F(e){if(null==e)return null;if("function"===typeof e)return e.$$typeof===R?null:e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case g:return"Fragment";case b:return"Profiler";case y:return"StrictMode";case S:return"Suspense";case T:return"SuspenseList";case C:return"Activity"}if("object"===typeof e)switch(e.$$typeof){case m:return"Portal";case w:return(e.displayName||"Context")+".Provider";case x:return(e._context.displayName||"Context")+".Consumer";case k:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case N:return null!==(t=e.displayName||null)?t:F(e.type)||"Memo";case I:t=e._payload,e=e._init;try{return F(e(t))}catch(n){}}return null}var D=Array.isArray,O=r.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,M=s.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,z={pending:!1,data:null,method:null,action:null},L=[],P=-1;function B(e){return{current:e}}function W(e){0>P||(e.current=L[P],L[P]=null,P--)}function V(e,t){P++,L[P]=e.current,e.current=t}var U=B(null),G=B(null),H=B(null),j=B(null);function q(e,t){switch(V(H,t),V(G,e),V(U,null),t.nodeType){case 9:case 11:e=(e=t.documentElement)&&(e=e.namespaceURI)?rd(e):0;break;default:if(e=t.tagName,t=t.namespaceURI)e=sd(t=rd(t),e);else switch(e){case"svg":e=1;break;case"math":e=2;break;default:e=0}}W(U),V(U,e)}function Y(){W(U),W(G),W(H)}function K(e){null!==e.memoizedState&&V(j,e);var t=U.current,n=sd(t,e.type);t!==n&&(V(G,e),V(U,n))}function X(e){G.current===e&&(W(U),W(G)),j.current===e&&(W(j),Kd._currentValue=z)}var Z=Object.prototype.hasOwnProperty,Q=a.unstable_scheduleCallback,$=a.unstable_cancelCallback,J=a.unstable_shouldYield,ee=a.unstable_requestPaint,te=a.unstable_now,ne=a.unstable_getCurrentPriorityLevel,ae=a.unstable_ImmediatePriority,re=a.unstable_UserBlockingPriority,se=a.unstable_NormalPriority,oe=a.unstable_LowPriority,ie=a.unstable_IdlePriority,ce=a.log,le=a.unstable_setDisableYieldValue,ue=null,de=null;function he(e){if("function"===typeof ce&&le(e),de&&"function"===typeof de.setStrictMode)try{de.setStrictMode(ue,e)}catch(t){}}var pe=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(fe(e)/me|0)|0},fe=Math.log,me=Math.LN2;var ge=256,ye=4194304;function be(e){var t=42&e;if(0!==t)return t;switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:return 128;case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194048&e;case 4194304:case 8388608:case 16777216:case 33554432:return 62914560&e;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return e}}function ve(e,t,n){var a=e.pendingLanes;if(0===a)return 0;var r=0,s=e.suspendedLanes,o=e.pingedLanes;e=e.warmLanes;var i=134217727&a;return 0!==i?0!==(a=i&~s)?r=be(a):0!==(o&=i)?r=be(o):n||0!==(n=i&~e)&&(r=be(n)):0!==(i=a&~s)?r=be(i):0!==o?r=be(o):n||0!==(n=a&~e)&&(r=be(n)),0===r?0:0!==t&&t!==r&&0===(t&s)&&((s=r&-r)>=(n=t&-t)||32===s&&0!==(4194048&n))?t:r}function xe(e,t){return 0===(e.pendingLanes&~(e.suspendedLanes&~e.pingedLanes)&t)}function we(e,t){switch(e){case 1:case 2:case 4:case 8:case 64:return t+250;case 16:case 32:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ke(){var e=ge;return 0===(4194048&(ge<<=1))&&(ge=256),e}function Se(){var e=ye;return 0===(62914560&(ye<<=1))&&(ye=4194304),e}function Te(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Ne(e,t){e.pendingLanes|=t,268435456!==t&&(e.suspendedLanes=0,e.pingedLanes=0,e.warmLanes=0)}function Ie(e,t,n){e.pendingLanes|=t,e.suspendedLanes&=~t;var a=31-pe(t);e.entangledLanes|=t,e.entanglements[a]=1073741824|e.entanglements[a]|4194090&n}function Ce(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var a=31-pe(n),r=1<<a;r&t|e[a]&t&&(e[a]|=t),n&=~r}}function Ee(e){switch(e){case 2:e=1;break;case 8:e=4;break;case 32:e=16;break;case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:e=128;break;case 268435456:e=134217728;break;default:e=0}return e}function Ae(e){return 2<(e&=-e)?8<e?0!==(134217727&e)?32:268435456:8:2}function _e(){var e=M.p;return 0!==e?e:void 0===(e=window.event)?32:lh(e.type)}var Re=Math.random().toString(36).slice(2),Fe="__reactFiber$"+Re,De="__reactProps$"+Re,Oe="__reactContainer$"+Re,Me="__reactEvents$"+Re,ze="__reactListeners$"+Re,Le="__reactHandles$"+Re,Pe="__reactResources$"+Re,Be="__reactMarker$"+Re;function We(e){delete e[Fe],delete e[De],delete e[Me],delete e[ze],delete e[Le]}function Ve(e){var t=e[Fe];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Oe]||n[Fe]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=vd(e);null!==e;){if(n=e[Fe])return n;e=vd(e)}return t}n=(e=n).parentNode}return null}function Ue(e){if(e=e[Fe]||e[Oe]){var t=e.tag;if(5===t||6===t||13===t||26===t||27===t||3===t)return e}return null}function Ge(e){var t=e.tag;if(5===t||26===t||27===t||6===t)return e.stateNode;throw Error(o(33))}function He(e){var t=e[Pe];return t||(t=e[Pe]={hoistableStyles:new Map,hoistableScripts:new Map}),t}function je(e){e[Be]=!0}var qe=new Set,Ye={};function Ke(e,t){Xe(e,t),Xe(e+"Capture",t)}function Xe(e,t){for(Ye[e]=t,e=0;e<t.length;e++)qe.add(t[e])}var Ze,Qe,$e=RegExp("^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"),Je={},et={};function tt(e,t,n){if(r=t,Z.call(et,r)||!Z.call(Je,r)&&($e.test(r)?et[r]=!0:(Je[r]=!0,0)))if(null===n)e.removeAttribute(t);else{switch(typeof n){case"undefined":case"function":case"symbol":return void e.removeAttribute(t);case"boolean":var a=t.toLowerCase().slice(0,5);if("data-"!==a&&"aria-"!==a)return void e.removeAttribute(t)}e.setAttribute(t,""+n)}var r}function nt(e,t,n){if(null===n)e.removeAttribute(t);else{switch(typeof n){case"undefined":case"function":case"symbol":case"boolean":return void e.removeAttribute(t)}e.setAttribute(t,""+n)}}function at(e,t,n,a){if(null===a)e.removeAttribute(n);else{switch(typeof a){case"undefined":case"function":case"symbol":case"boolean":return void e.removeAttribute(n)}e.setAttributeNS(t,n,""+a)}}function rt(e){if(void 0===Ze)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);Ze=t&&t[1]||"",Qe=-1<n.stack.indexOf("\n    at")?" (<anonymous>)":-1<n.stack.indexOf("@")?"@unknown:0:0":""}return"\n"+Ze+e+Qe}var st=!1;function ot(e,t){if(!e||st)return"";st=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var a={DetermineComponentFrameRoot:function(){try{if(t){var n=function(){throw Error()};if(Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(n,[])}catch(r){var a=r}Reflect.construct(e,[],n)}else{try{n.call()}catch(s){a=s}e.call(n.prototype)}}else{try{throw Error()}catch(o){a=o}(n=e())&&"function"===typeof n.catch&&n.catch(function(){})}}catch(i){if(i&&a&&"string"===typeof i.stack)return[i.stack,a.stack]}return[null,null]}};a.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var r=Object.getOwnPropertyDescriptor(a.DetermineComponentFrameRoot,"name");r&&r.configurable&&Object.defineProperty(a.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var s=a.DetermineComponentFrameRoot(),o=s[0],i=s[1];if(o&&i){var c=o.split("\n"),l=i.split("\n");for(r=a=0;a<c.length&&!c[a].includes("DetermineComponentFrameRoot");)a++;for(;r<l.length&&!l[r].includes("DetermineComponentFrameRoot");)r++;if(a===c.length||r===l.length)for(a=c.length-1,r=l.length-1;1<=a&&0<=r&&c[a]!==l[r];)r--;for(;1<=a&&0<=r;a--,r--)if(c[a]!==l[r]){if(1!==a||1!==r)do{if(a--,0>--r||c[a]!==l[r]){var u="\n"+c[a].replace(" at new "," at ");return e.displayName&&u.includes("<anonymous>")&&(u=u.replace("<anonymous>",e.displayName)),u}}while(1<=a&&0<=r);break}}}finally{st=!1,Error.prepareStackTrace=n}return(n=e?e.displayName||e.name:"")?rt(n):""}function it(e){switch(e.tag){case 26:case 27:case 5:return rt(e.type);case 16:return rt("Lazy");case 13:return rt("Suspense");case 19:return rt("SuspenseList");case 0:case 15:return ot(e.type,!1);case 11:return ot(e.type.render,!1);case 1:return ot(e.type,!0);case 31:return rt("Activity");default:return""}}function ct(e){try{var t="";do{t+=it(e),e=e.return}while(e);return t}catch(n){return"\nError generating stack: "+n.message+"\n"+n.stack}}function lt(e){switch(typeof e){case"bigint":case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function ut(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function dt(e){e._valueTracker||(e._valueTracker=function(e){var t=ut(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),a=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var r=n.get,s=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return r.call(this)},set:function(e){a=""+e,s.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return a},setValue:function(e){a=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function ht(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),a="";return e&&(a=ut(e)?e.checked?"true":"false":e.value),(e=a)!==n&&(t.setValue(e),!0)}function pt(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}var ft=/[\n"\\]/g;function mt(e){return e.replace(ft,function(e){return"\\"+e.charCodeAt(0).toString(16)+" "})}function gt(e,t,n,a,r,s,o,i){e.name="",null!=o&&"function"!==typeof o&&"symbol"!==typeof o&&"boolean"!==typeof o?e.type=o:e.removeAttribute("type"),null!=t?"number"===o?(0===t&&""===e.value||e.value!=t)&&(e.value=""+lt(t)):e.value!==""+lt(t)&&(e.value=""+lt(t)):"submit"!==o&&"reset"!==o||e.removeAttribute("value"),null!=t?bt(e,o,lt(t)):null!=n?bt(e,o,lt(n)):null!=a&&e.removeAttribute("value"),null==r&&null!=s&&(e.defaultChecked=!!s),null!=r&&(e.checked=r&&"function"!==typeof r&&"symbol"!==typeof r),null!=i&&"function"!==typeof i&&"symbol"!==typeof i&&"boolean"!==typeof i?e.name=""+lt(i):e.removeAttribute("name")}function yt(e,t,n,a,r,s,o,i){if(null!=s&&"function"!==typeof s&&"symbol"!==typeof s&&"boolean"!==typeof s&&(e.type=s),null!=t||null!=n){if(!("submit"!==s&&"reset"!==s||void 0!==t&&null!==t))return;n=null!=n?""+lt(n):"",t=null!=t?""+lt(t):n,i||t===e.value||(e.value=t),e.defaultValue=t}a="function"!==typeof(a=null!=a?a:r)&&"symbol"!==typeof a&&!!a,e.checked=i?e.checked:!!a,e.defaultChecked=!!a,null!=o&&"function"!==typeof o&&"symbol"!==typeof o&&"boolean"!==typeof o&&(e.name=o)}function bt(e,t,n){"number"===t&&pt(e.ownerDocument)===e||e.defaultValue===""+n||(e.defaultValue=""+n)}function vt(e,t,n,a){if(e=e.options,t){t={};for(var r=0;r<n.length;r++)t["$"+n[r]]=!0;for(n=0;n<e.length;n++)r=t.hasOwnProperty("$"+e[n].value),e[n].selected!==r&&(e[n].selected=r),r&&a&&(e[n].defaultSelected=!0)}else{for(n=""+lt(n),t=null,r=0;r<e.length;r++){if(e[r].value===n)return e[r].selected=!0,void(a&&(e[r].defaultSelected=!0));null!==t||e[r].disabled||(t=e[r])}null!==t&&(t.selected=!0)}}function xt(e,t,n){null==t||((t=""+lt(t))!==e.value&&(e.value=t),null!=n)?e.defaultValue=null!=n?""+lt(n):"":e.defaultValue!==t&&(e.defaultValue=t)}function wt(e,t,n,a){if(null==t){if(null!=a){if(null!=n)throw Error(o(92));if(D(a)){if(1<a.length)throw Error(o(93));a=a[0]}n=a}null==n&&(n=""),t=n}n=lt(t),e.defaultValue=n,(a=e.textContent)===n&&""!==a&&null!==a&&(e.value=a)}function kt(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var St=new Set("animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(" "));function Tt(e,t,n){var a=0===t.indexOf("--");null==n||"boolean"===typeof n||""===n?a?e.setProperty(t,""):"float"===t?e.cssFloat="":e[t]="":a?e.setProperty(t,n):"number"!==typeof n||0===n||St.has(t)?"float"===t?e.cssFloat=n:e[t]=(""+n).trim():e[t]=n+"px"}function Nt(e,t,n){if(null!=t&&"object"!==typeof t)throw Error(o(62));if(e=e.style,null!=n){for(var a in n)!n.hasOwnProperty(a)||null!=t&&t.hasOwnProperty(a)||(0===a.indexOf("--")?e.setProperty(a,""):"float"===a?e.cssFloat="":e[a]="");for(var r in t)a=t[r],t.hasOwnProperty(r)&&n[r]!==a&&Tt(e,r,a)}else for(var s in t)t.hasOwnProperty(s)&&Tt(e,s,t[s])}function It(e){if(-1===e.indexOf("-"))return!1;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Ct=new Map([["acceptCharset","accept-charset"],["htmlFor","for"],["httpEquiv","http-equiv"],["crossOrigin","crossorigin"],["accentHeight","accent-height"],["alignmentBaseline","alignment-baseline"],["arabicForm","arabic-form"],["baselineShift","baseline-shift"],["capHeight","cap-height"],["clipPath","clip-path"],["clipRule","clip-rule"],["colorInterpolation","color-interpolation"],["colorInterpolationFilters","color-interpolation-filters"],["colorProfile","color-profile"],["colorRendering","color-rendering"],["dominantBaseline","dominant-baseline"],["enableBackground","enable-background"],["fillOpacity","fill-opacity"],["fillRule","fill-rule"],["floodColor","flood-color"],["floodOpacity","flood-opacity"],["fontFamily","font-family"],["fontSize","font-size"],["fontSizeAdjust","font-size-adjust"],["fontStretch","font-stretch"],["fontStyle","font-style"],["fontVariant","font-variant"],["fontWeight","font-weight"],["glyphName","glyph-name"],["glyphOrientationHorizontal","glyph-orientation-horizontal"],["glyphOrientationVertical","glyph-orientation-vertical"],["horizAdvX","horiz-adv-x"],["horizOriginX","horiz-origin-x"],["imageRendering","image-rendering"],["letterSpacing","letter-spacing"],["lightingColor","lighting-color"],["markerEnd","marker-end"],["markerMid","marker-mid"],["markerStart","marker-start"],["overlinePosition","overline-position"],["overlineThickness","overline-thickness"],["paintOrder","paint-order"],["panose-1","panose-1"],["pointerEvents","pointer-events"],["renderingIntent","rendering-intent"],["shapeRendering","shape-rendering"],["stopColor","stop-color"],["stopOpacity","stop-opacity"],["strikethroughPosition","strikethrough-position"],["strikethroughThickness","strikethrough-thickness"],["strokeDasharray","stroke-dasharray"],["strokeDashoffset","stroke-dashoffset"],["strokeLinecap","stroke-linecap"],["strokeLinejoin","stroke-linejoin"],["strokeMiterlimit","stroke-miterlimit"],["strokeOpacity","stroke-opacity"],["strokeWidth","stroke-width"],["textAnchor","text-anchor"],["textDecoration","text-decoration"],["textRendering","text-rendering"],["transformOrigin","transform-origin"],["underlinePosition","underline-position"],["underlineThickness","underline-thickness"],["unicodeBidi","unicode-bidi"],["unicodeRange","unicode-range"],["unitsPerEm","units-per-em"],["vAlphabetic","v-alphabetic"],["vHanging","v-hanging"],["vIdeographic","v-ideographic"],["vMathematical","v-mathematical"],["vectorEffect","vector-effect"],["vertAdvY","vert-adv-y"],["vertOriginX","vert-origin-x"],["vertOriginY","vert-origin-y"],["wordSpacing","word-spacing"],["writingMode","writing-mode"],["xmlnsXlink","xmlns:xlink"],["xHeight","x-height"]]),Et=/^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i;function At(e){return Et.test(""+e)?"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')":e}var _t=null;function Rt(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ft=null,Dt=null;function Ot(e){var t=Ue(e);if(t&&(e=t.stateNode)){var n=e[De]||null;e:switch(e=t.stateNode,t.type){case"input":if(gt(e,n.value,n.defaultValue,n.defaultValue,n.checked,n.defaultChecked,n.type,n.name),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll('input[name="'+mt(""+t)+'"][type="radio"]'),t=0;t<n.length;t++){var a=n[t];if(a!==e&&a.form===e.form){var r=a[De]||null;if(!r)throw Error(o(90));gt(a,r.value,r.defaultValue,r.defaultValue,r.checked,r.defaultChecked,r.type,r.name)}}for(t=0;t<n.length;t++)(a=n[t]).form===e.form&&ht(a)}break e;case"textarea":xt(e,n.value,n.defaultValue);break e;case"select":null!=(t=n.value)&&vt(e,!!n.multiple,t,!1)}}}var Mt=!1;function zt(e,t,n){if(Mt)return e(t,n);Mt=!0;try{return e(t)}finally{if(Mt=!1,(null!==Ft||null!==Dt)&&(Vl(),Ft&&(t=Ft,e=Dt,Dt=Ft=null,Ot(t),e)))for(t=0;t<e.length;t++)Ot(e[t])}}function Lt(e,t){var n=e.stateNode;if(null===n)return null;var a=n[De]||null;if(null===a)return null;n=a[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(a=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!a;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(o(231,t,typeof n));return n}var Pt=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),Bt=!1;if(Pt)try{var Wt={};Object.defineProperty(Wt,"passive",{get:function(){Bt=!0}}),window.addEventListener("test",Wt,Wt),window.removeEventListener("test",Wt,Wt)}catch(Dh){Bt=!1}var Vt=null,Ut=null,Gt=null;function Ht(){if(Gt)return Gt;var e,t,n=Ut,a=n.length,r="value"in Vt?Vt.value:Vt.textContent,s=r.length;for(e=0;e<a&&n[e]===r[e];e++);var o=a-e;for(t=1;t<=o&&n[a-t]===r[s-t];t++);return Gt=r.slice(e,1<t?1-t:void 0)}function jt(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function qt(){return!0}function Yt(){return!1}function Kt(e){function t(t,n,a,r,s){for(var o in this._reactName=t,this._targetInst=a,this.type=n,this.nativeEvent=r,this.target=s,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(r):r[o]);return this.isDefaultPrevented=(null!=r.defaultPrevented?r.defaultPrevented:!1===r.returnValue)?qt:Yt,this.isPropagationStopped=Yt,this}return h(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=qt)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=qt)},persist:function(){},isPersistent:qt}),t}var Xt,Zt,Qt,$t={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},Jt=Kt($t),en=h({},$t,{view:0,detail:0}),tn=Kt(en),nn=h({},en,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:fn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==Qt&&(Qt&&"mousemove"===e.type?(Xt=e.screenX-Qt.screenX,Zt=e.screenY-Qt.screenY):Zt=Xt=0,Qt=e),Xt)},movementY:function(e){return"movementY"in e?e.movementY:Zt}}),an=Kt(nn),rn=Kt(h({},nn,{dataTransfer:0})),sn=Kt(h({},en,{relatedTarget:0})),on=Kt(h({},$t,{animationName:0,elapsedTime:0,pseudoElement:0})),cn=Kt(h({},$t,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),ln=Kt(h({},$t,{data:0})),un={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},dn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},hn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function pn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=hn[e])&&!!t[e]}function fn(){return pn}var mn=Kt(h({},en,{key:function(e){if(e.key){var t=un[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=jt(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?dn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:fn,charCode:function(e){return"keypress"===e.type?jt(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?jt(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),gn=Kt(h({},nn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),yn=Kt(h({},en,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:fn})),bn=Kt(h({},$t,{propertyName:0,elapsedTime:0,pseudoElement:0})),vn=Kt(h({},nn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),xn=Kt(h({},$t,{newState:0,oldState:0})),wn=[9,13,27,32],kn=Pt&&"CompositionEvent"in window,Sn=null;Pt&&"documentMode"in document&&(Sn=document.documentMode);var Tn=Pt&&"TextEvent"in window&&!Sn,Nn=Pt&&(!kn||Sn&&8<Sn&&11>=Sn),In=String.fromCharCode(32),Cn=!1;function En(e,t){switch(e){case"keyup":return-1!==wn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function An(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var _n=!1;var Rn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Fn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Rn[e.type]:"textarea"===t}function Dn(e,t,n,a){Ft?Dt?Dt.push(a):Dt=[a]:Ft=a,0<(t=Hu(t,"onChange")).length&&(n=new Jt("onChange","change",null,n,a),e.push({event:n,listeners:t}))}var On=null,Mn=null;function zn(e){zu(e,0)}function Ln(e){if(ht(Ge(e)))return e}function Pn(e,t){if("change"===e)return t}var Bn=!1;if(Pt){var Wn;if(Pt){var Vn="oninput"in document;if(!Vn){var Un=document.createElement("div");Un.setAttribute("oninput","return;"),Vn="function"===typeof Un.oninput}Wn=Vn}else Wn=!1;Bn=Wn&&(!document.documentMode||9<document.documentMode)}function Gn(){On&&(On.detachEvent("onpropertychange",Hn),Mn=On=null)}function Hn(e){if("value"===e.propertyName&&Ln(Mn)){var t=[];Dn(t,Mn,e,Rt(e)),zt(zn,t)}}function jn(e,t,n){"focusin"===e?(Gn(),Mn=n,(On=t).attachEvent("onpropertychange",Hn)):"focusout"===e&&Gn()}function qn(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Ln(Mn)}function Yn(e,t){if("click"===e)return Ln(t)}function Kn(e,t){if("input"===e||"change"===e)return Ln(t)}var Xn="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function Zn(e,t){if(Xn(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(a=0;a<n.length;a++){var r=n[a];if(!Z.call(t,r)||!Xn(e[r],t[r]))return!1}return!0}function Qn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function $n(e,t){var n,a=Qn(e);for(e=0;a;){if(3===a.nodeType){if(n=e+a.textContent.length,e<=t&&n>=t)return{node:a,offset:t-e};e=n}e:{for(;a;){if(a.nextSibling){a=a.nextSibling;break e}a=a.parentNode}a=void 0}a=Qn(a)}}function Jn(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?Jn(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function ea(e){for(var t=pt((e=null!=e&&null!=e.ownerDocument&&null!=e.ownerDocument.defaultView?e.ownerDocument.defaultView:window).document);t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(a){n=!1}if(!n)break;t=pt((e=t.contentWindow).document)}return t}function ta(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var na=Pt&&"documentMode"in document&&11>=document.documentMode,aa=null,ra=null,sa=null,oa=!1;function ia(e,t,n){var a=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;oa||null==aa||aa!==pt(a)||("selectionStart"in(a=aa)&&ta(a)?a={start:a.selectionStart,end:a.selectionEnd}:a={anchorNode:(a=(a.ownerDocument&&a.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:a.anchorOffset,focusNode:a.focusNode,focusOffset:a.focusOffset},sa&&Zn(sa,a)||(sa=a,0<(a=Hu(ra,"onSelect")).length&&(t=new Jt("onSelect","select",null,t,n),e.push({event:t,listeners:a}),t.target=aa)))}function ca(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var la={animationend:ca("Animation","AnimationEnd"),animationiteration:ca("Animation","AnimationIteration"),animationstart:ca("Animation","AnimationStart"),transitionrun:ca("Transition","TransitionRun"),transitionstart:ca("Transition","TransitionStart"),transitioncancel:ca("Transition","TransitionCancel"),transitionend:ca("Transition","TransitionEnd")},ua={},da={};function ha(e){if(ua[e])return ua[e];if(!la[e])return e;var t,n=la[e];for(t in n)if(n.hasOwnProperty(t)&&t in da)return ua[e]=n[t];return e}Pt&&(da=document.createElement("div").style,"AnimationEvent"in window||(delete la.animationend.animation,delete la.animationiteration.animation,delete la.animationstart.animation),"TransitionEvent"in window||delete la.transitionend.transition);var pa=ha("animationend"),fa=ha("animationiteration"),ma=ha("animationstart"),ga=ha("transitionrun"),ya=ha("transitionstart"),ba=ha("transitioncancel"),va=ha("transitionend"),xa=new Map,wa="abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function ka(e,t){xa.set(e,t),Ke(t,[e])}wa.push("scrollEnd");var Sa=new WeakMap;function Ta(e,t){if("object"===typeof e&&null!==e){var n=Sa.get(e);return void 0!==n?n:(t={value:e,source:t,stack:ct(t)},Sa.set(e,t),t)}return{value:e,source:t,stack:ct(t)}}var Na=[],Ia=0,Ca=0;function Ea(){for(var e=Ia,t=Ca=Ia=0;t<e;){var n=Na[t];Na[t++]=null;var a=Na[t];Na[t++]=null;var r=Na[t];Na[t++]=null;var s=Na[t];if(Na[t++]=null,null!==a&&null!==r){var o=a.pending;null===o?r.next=r:(r.next=o.next,o.next=r),a.pending=r}0!==s&&Fa(n,r,s)}}function Aa(e,t,n,a){Na[Ia++]=e,Na[Ia++]=t,Na[Ia++]=n,Na[Ia++]=a,Ca|=a,e.lanes|=a,null!==(e=e.alternate)&&(e.lanes|=a)}function _a(e,t,n,a){return Aa(e,t,n,a),Da(e)}function Ra(e,t){return Aa(e,null,null,t),Da(e)}function Fa(e,t,n){e.lanes|=n;var a=e.alternate;null!==a&&(a.lanes|=n);for(var r=!1,s=e.return;null!==s;)s.childLanes|=n,null!==(a=s.alternate)&&(a.childLanes|=n),22===s.tag&&(null===(e=s.stateNode)||1&e._visibility||(r=!0)),e=s,s=s.return;return 3===e.tag?(s=e.stateNode,r&&null!==t&&(r=31-pe(n),null===(a=(e=s.hiddenUpdates)[r])?e[r]=[t]:a.push(t),t.lane=536870912|n),s):null}function Da(e){if(50<Fl)throw Fl=0,Dl=null,Error(o(185));for(var t=e.return;null!==t;)t=(e=t).return;return 3===e.tag?e.stateNode:null}var Oa={};function Ma(e,t,n,a){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function za(e,t,n,a){return new Ma(e,t,n,a)}function La(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Pa(e,t){var n=e.alternate;return null===n?((n=za(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=65011712&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n.refCleanup=e.refCleanup,n}function Ba(e,t){e.flags&=65011714;var n=e.alternate;return null===n?(e.childLanes=0,e.lanes=t,e.child=null,e.subtreeFlags=0,e.memoizedProps=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.stateNode=null):(e.childLanes=n.childLanes,e.lanes=n.lanes,e.child=n.child,e.subtreeFlags=0,e.deletions=null,e.memoizedProps=n.memoizedProps,e.memoizedState=n.memoizedState,e.updateQueue=n.updateQueue,e.type=n.type,t=n.dependencies,e.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext}),e}function Wa(e,t,n,a,r,s){var i=0;if(a=e,"function"===typeof e)La(e)&&(i=1);else if("string"===typeof e)i=function(e,t,n){if(1===n||null!=t.itemProp)return!1;switch(e){case"meta":case"title":return!0;case"style":if("string"!==typeof t.precedence||"string"!==typeof t.href||""===t.href)break;return!0;case"link":if("string"!==typeof t.rel||"string"!==typeof t.href||""===t.href||t.onLoad||t.onError)break;return"stylesheet"!==t.rel||(e=t.disabled,"string"===typeof t.precedence&&null==e);case"script":if(t.async&&"function"!==typeof t.async&&"symbol"!==typeof t.async&&!t.onLoad&&!t.onError&&t.src&&"string"===typeof t.src)return!0}return!1}(e,n,U.current)?26:"html"===e||"head"===e||"body"===e?27:5;else e:switch(e){case C:return(e=za(31,n,t,r)).elementType=C,e.lanes=s,e;case g:return Va(n.children,r,s,t);case y:i=8,r|=24;break;case b:return(e=za(12,n,t,2|r)).elementType=b,e.lanes=s,e;case S:return(e=za(13,n,t,r)).elementType=S,e.lanes=s,e;case T:return(e=za(19,n,t,r)).elementType=T,e.lanes=s,e;default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case v:case w:i=10;break e;case x:i=9;break e;case k:i=11;break e;case N:i=14;break e;case I:i=16,a=null;break e}i=29,n=Error(o(130,null===e?"null":typeof e,"")),a=null}return(t=za(i,n,t,r)).elementType=e,t.type=a,t.lanes=s,t}function Va(e,t,n,a){return(e=za(7,e,a,t)).lanes=n,e}function Ua(e,t,n){return(e=za(6,e,null,t)).lanes=n,e}function Ga(e,t,n){return(t=za(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}var Ha=[],ja=0,qa=null,Ya=0,Ka=[],Xa=0,Za=null,Qa=1,$a="";function Ja(e,t){Ha[ja++]=Ya,Ha[ja++]=qa,qa=e,Ya=t}function er(e,t,n){Ka[Xa++]=Qa,Ka[Xa++]=$a,Ka[Xa++]=Za,Za=e;var a=Qa;e=$a;var r=32-pe(a)-1;a&=~(1<<r),n+=1;var s=32-pe(t)+r;if(30<s){var o=r-r%5;s=(a&(1<<o)-1).toString(32),a>>=o,r-=o,Qa=1<<32-pe(t)+r|n<<r|a,$a=s+e}else Qa=1<<s|n<<r|a,$a=e}function tr(e){null!==e.return&&(Ja(e,1),er(e,1,0))}function nr(e){for(;e===qa;)qa=Ha[--ja],Ha[ja]=null,Ya=Ha[--ja],Ha[ja]=null;for(;e===Za;)Za=Ka[--Xa],Ka[Xa]=null,$a=Ka[--Xa],Ka[Xa]=null,Qa=Ka[--Xa],Ka[Xa]=null}var ar=null,rr=null,sr=!1,or=null,ir=!1,cr=Error(o(519));function lr(e){throw mr(Ta(Error(o(418,"")),e)),cr}function ur(e){var t=e.stateNode,n=e.type,a=e.memoizedProps;switch(t[Fe]=e,t[De]=a,n){case"dialog":Lu("cancel",t),Lu("close",t);break;case"iframe":case"object":case"embed":Lu("load",t);break;case"video":case"audio":for(n=0;n<Ou.length;n++)Lu(Ou[n],t);break;case"source":Lu("error",t);break;case"img":case"image":case"link":Lu("error",t),Lu("load",t);break;case"details":Lu("toggle",t);break;case"input":Lu("invalid",t),yt(t,a.value,a.defaultValue,a.checked,a.defaultChecked,a.type,a.name,!0),dt(t);break;case"select":Lu("invalid",t);break;case"textarea":Lu("invalid",t),wt(t,a.value,a.defaultValue,a.children),dt(t)}"string"!==typeof(n=a.children)&&"number"!==typeof n&&"bigint"!==typeof n||t.textContent===""+n||!0===a.suppressHydrationWarning||Zu(t.textContent,n)?(null!=a.popover&&(Lu("beforetoggle",t),Lu("toggle",t)),null!=a.onScroll&&Lu("scroll",t),null!=a.onScrollEnd&&Lu("scrollend",t),null!=a.onClick&&(t.onclick=Qu),t=!0):t=!1,t||lr(e)}function dr(e){for(ar=e.return;ar;)switch(ar.tag){case 5:case 13:return void(ir=!1);case 27:case 3:return void(ir=!0);default:ar=ar.return}}function hr(e){if(e!==ar)return!1;if(!sr)return dr(e),sr=!0,!1;var t,n=e.tag;if((t=3!==n&&27!==n)&&((t=5===n)&&(t=!("form"!==(t=e.type)&&"button"!==t)||od(e.type,e.memoizedProps)),t=!t),t&&rr&&lr(e),dr(e),13===n){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,n=0;e;){if(8===e.nodeType)if("/$"===(t=e.data)){if(0===n){rr=yd(e.nextSibling);break e}n--}else"$"!==t&&"$!"!==t&&"$?"!==t||n++;e=e.nextSibling}rr=null}}else 27===n?(n=rr,pd(e.type)?(e=bd,bd=null,rr=e):rr=n):rr=ar?yd(e.stateNode.nextSibling):null;return!0}function pr(){rr=ar=null,sr=!1}function fr(){var e=or;return null!==e&&(null===vl?vl=e:vl.push.apply(vl,e),or=null),e}function mr(e){null===or?or=[e]:or.push(e)}var gr=B(null),yr=null,br=null;function vr(e,t,n){V(gr,t._currentValue),t._currentValue=n}function xr(e){e._currentValue=gr.current,W(gr)}function wr(e,t,n){for(;null!==e;){var a=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==a&&(a.childLanes|=t)):null!==a&&(a.childLanes&t)!==t&&(a.childLanes|=t),e===n)break;e=e.return}}function kr(e,t,n,a){var r=e.child;for(null!==r&&(r.return=e);null!==r;){var s=r.dependencies;if(null!==s){var i=r.child;s=s.firstContext;e:for(;null!==s;){var c=s;s=r;for(var l=0;l<t.length;l++)if(c.context===t[l]){s.lanes|=n,null!==(c=s.alternate)&&(c.lanes|=n),wr(s.return,n,e),a||(i=null);break e}s=c.next}}else if(18===r.tag){if(null===(i=r.return))throw Error(o(341));i.lanes|=n,null!==(s=i.alternate)&&(s.lanes|=n),wr(i,n,e),i=null}else i=r.child;if(null!==i)i.return=r;else for(i=r;null!==i;){if(i===e){i=null;break}if(null!==(r=i.sibling)){r.return=i.return,i=r;break}i=i.return}r=i}}function Sr(e,t,n,a){e=null;for(var r=t,s=!1;null!==r;){if(!s)if(0!==(524288&r.flags))s=!0;else if(0!==(262144&r.flags))break;if(10===r.tag){var i=r.alternate;if(null===i)throw Error(o(387));if(null!==(i=i.memoizedProps)){var c=r.type;Xn(r.pendingProps.value,i.value)||(null!==e?e.push(c):e=[c])}}else if(r===j.current){if(null===(i=r.alternate))throw Error(o(387));i.memoizedState.memoizedState!==r.memoizedState.memoizedState&&(null!==e?e.push(Kd):e=[Kd])}r=r.return}null!==e&&kr(t,e,n,a),t.flags|=262144}function Tr(e){for(e=e.firstContext;null!==e;){if(!Xn(e.context._currentValue,e.memoizedValue))return!0;e=e.next}return!1}function Nr(e){yr=e,br=null,null!==(e=e.dependencies)&&(e.firstContext=null)}function Ir(e){return Er(yr,e)}function Cr(e,t){return null===yr&&Nr(e),Er(e,t)}function Er(e,t){var n=t._currentValue;if(t={context:t,memoizedValue:n,next:null},null===br){if(null===e)throw Error(o(308));br=t,e.dependencies={lanes:0,firstContext:t},e.flags|=524288}else br=br.next=t;return n}var Ar="undefined"!==typeof AbortController?AbortController:function(){var e=[],t=this.signal={aborted:!1,addEventListener:function(t,n){e.push(n)}};this.abort=function(){t.aborted=!0,e.forEach(function(e){return e()})}},_r=a.unstable_scheduleCallback,Rr=a.unstable_NormalPriority,Fr={$$typeof:w,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0};function Dr(){return{controller:new Ar,data:new Map,refCount:0}}function Or(e){e.refCount--,0===e.refCount&&_r(Rr,function(){e.controller.abort()})}var Mr=null,zr=0,Lr=0,Pr=null;function Br(){if(0===--zr&&null!==Mr){null!==Pr&&(Pr.status="fulfilled");var e=Mr;Mr=null,Lr=0,Pr=null;for(var t=0;t<e.length;t++)(0,e[t])()}}var Wr=O.S;O.S=function(e,t){"object"===typeof t&&null!==t&&"function"===typeof t.then&&function(e,t){if(null===Mr){var n=Mr=[];zr=0,Lr=Au(),Pr={status:"pending",value:void 0,then:function(e){n.push(e)}}}zr++,t.then(Br,Br)}(0,t),null!==Wr&&Wr(e,t)};var Vr=B(null);function Ur(){var e=Vr.current;return null!==e?e:al.pooledCache}function Gr(e,t){V(Vr,null===t?Vr.current:t.pool)}function Hr(){var e=Ur();return null===e?null:{parent:Fr._currentValue,pool:e}}var jr=Error(o(460)),qr=Error(o(474)),Yr=Error(o(542)),Kr={then:function(){}};function Xr(e){return"fulfilled"===(e=e.status)||"rejected"===e}function Zr(){}function Qr(e,t,n){switch(void 0===(n=e[n])?e.push(t):n!==t&&(t.then(Zr,Zr),t=n),t.status){case"fulfilled":return t.value;case"rejected":throw es(e=t.reason),e;default:if("string"===typeof t.status)t.then(Zr,Zr);else{if(null!==(e=al)&&100<e.shellSuspendCounter)throw Error(o(482));(e=t).status="pending",e.then(function(e){if("pending"===t.status){var n=t;n.status="fulfilled",n.value=e}},function(e){if("pending"===t.status){var n=t;n.status="rejected",n.reason=e}})}switch(t.status){case"fulfilled":return t.value;case"rejected":throw es(e=t.reason),e}throw $r=t,jr}}var $r=null;function Jr(){if(null===$r)throw Error(o(459));var e=$r;return $r=null,e}function es(e){if(e===jr||e===Yr)throw Error(o(483))}var ts=!1;function ns(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function as(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,callbacks:null})}function rs(e){return{lane:e,tag:0,payload:null,callback:null,next:null}}function ss(e,t,n){var a=e.updateQueue;if(null===a)return null;if(a=a.shared,0!==(2&nl)){var r=a.pending;return null===r?t.next=t:(t.next=r.next,r.next=t),a.pending=t,t=Da(e),Fa(e,null,n),t}return Aa(e,a,t,n),Da(e)}function os(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194048&n))){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,Ce(e,n)}}function is(e,t){var n=e.updateQueue,a=e.alternate;if(null!==a&&n===(a=a.updateQueue)){var r=null,s=null;if(null!==(n=n.firstBaseUpdate)){do{var o={lane:n.lane,tag:n.tag,payload:n.payload,callback:null,next:null};null===s?r=s=o:s=s.next=o,n=n.next}while(null!==n);null===s?r=s=t:s=s.next=t}else r=s=t;return n={baseState:a.baseState,firstBaseUpdate:r,lastBaseUpdate:s,shared:a.shared,callbacks:a.callbacks},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}var cs=!1;function ls(){if(cs){if(null!==Pr)throw Pr}}function us(e,t,n,a){cs=!1;var r=e.updateQueue;ts=!1;var s=r.firstBaseUpdate,o=r.lastBaseUpdate,i=r.shared.pending;if(null!==i){r.shared.pending=null;var c=i,l=c.next;c.next=null,null===o?s=l:o.next=l,o=c;var u=e.alternate;null!==u&&((i=(u=u.updateQueue).lastBaseUpdate)!==o&&(null===i?u.firstBaseUpdate=l:i.next=l,u.lastBaseUpdate=c))}if(null!==s){var d=r.baseState;for(o=0,u=l=c=null,i=s;;){var p=-536870913&i.lane,f=p!==i.lane;if(f?(sl&p)===p:(a&p)===p){0!==p&&p===Lr&&(cs=!0),null!==u&&(u=u.next={lane:0,tag:i.tag,payload:i.payload,callback:null,next:null});e:{var m=e,g=i;p=t;var y=n;switch(g.tag){case 1:if("function"===typeof(m=g.payload)){d=m.call(y,d,p);break e}d=m;break e;case 3:m.flags=-65537&m.flags|128;case 0:if(null===(p="function"===typeof(m=g.payload)?m.call(y,d,p):m)||void 0===p)break e;d=h({},d,p);break e;case 2:ts=!0}}null!==(p=i.callback)&&(e.flags|=64,f&&(e.flags|=8192),null===(f=r.callbacks)?r.callbacks=[p]:f.push(p))}else f={lane:p,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===u?(l=u=f,c=d):u=u.next=f,o|=p;if(null===(i=i.next)){if(null===(i=r.shared.pending))break;i=(f=i).next,f.next=null,r.lastBaseUpdate=f,r.shared.pending=null}}null===u&&(c=d),r.baseState=c,r.firstBaseUpdate=l,r.lastBaseUpdate=u,null===s&&(r.shared.lanes=0),pl|=o,e.lanes=o,e.memoizedState=d}}function ds(e,t){if("function"!==typeof e)throw Error(o(191,e));e.call(t)}function hs(e,t){var n=e.callbacks;if(null!==n)for(e.callbacks=null,e=0;e<n.length;e++)ds(n[e],t)}var ps=B(null),fs=B(0);function ms(e,t){V(fs,e=dl),V(ps,t),dl=e|t.baseLanes}function gs(){V(fs,dl),V(ps,ps.current)}function ys(){dl=fs.current,W(ps),W(fs)}var bs=0,vs=null,xs=null,ws=null,ks=!1,Ss=!1,Ts=!1,Ns=0,Is=0,Cs=null,Es=0;function As(){throw Error(o(321))}function _s(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Xn(e[n],t[n]))return!1;return!0}function Rs(e,t,n,a,r,s){return bs=s,vs=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,O.H=null===e||null===e.memoizedState?qo:Yo,Ts=!1,s=n(a,r),Ts=!1,Ss&&(s=Ds(t,n,a,r)),Fs(e),s}function Fs(e){O.H=jo;var t=null!==xs&&null!==xs.next;if(bs=0,ws=xs=vs=null,ks=!1,Is=0,Cs=null,t)throw Error(o(300));null===e||Ci||null!==(e=e.dependencies)&&Tr(e)&&(Ci=!0)}function Ds(e,t,n,a){vs=e;var r=0;do{if(Ss&&(Cs=null),Is=0,Ss=!1,25<=r)throw Error(o(301));if(r+=1,ws=xs=null,null!=e.updateQueue){var s=e.updateQueue;s.lastEffect=null,s.events=null,s.stores=null,null!=s.memoCache&&(s.memoCache.index=0)}O.H=Ko,s=t(n,a)}while(Ss);return s}function Os(){var e=O.H,t=e.useState()[0];return t="function"===typeof t.then?Ws(t):t,e=e.useState()[0],(null!==xs?xs.memoizedState:null)!==e&&(vs.flags|=1024),t}function Ms(){var e=0!==Ns;return Ns=0,e}function zs(e,t,n){t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~n}function Ls(e){if(ks){for(e=e.memoizedState;null!==e;){var t=e.queue;null!==t&&(t.pending=null),e=e.next}ks=!1}bs=0,ws=xs=vs=null,Ss=!1,Is=Ns=0,Cs=null}function Ps(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===ws?vs.memoizedState=ws=e:ws=ws.next=e,ws}function Bs(){if(null===xs){var e=vs.alternate;e=null!==e?e.memoizedState:null}else e=xs.next;var t=null===ws?vs.memoizedState:ws.next;if(null!==t)ws=t,xs=e;else{if(null===e){if(null===vs.alternate)throw Error(o(467));throw Error(o(310))}e={memoizedState:(xs=e).memoizedState,baseState:xs.baseState,baseQueue:xs.baseQueue,queue:xs.queue,next:null},null===ws?vs.memoizedState=ws=e:ws=ws.next=e}return ws}function Ws(e){var t=Is;return Is+=1,null===Cs&&(Cs=[]),e=Qr(Cs,e,t),t=vs,null===(null===ws?t.memoizedState:ws.next)&&(t=t.alternate,O.H=null===t||null===t.memoizedState?qo:Yo),e}function Vs(e){if(null!==e&&"object"===typeof e){if("function"===typeof e.then)return Ws(e);if(e.$$typeof===w)return Ir(e)}throw Error(o(438,String(e)))}function Us(e){var t=null,n=vs.updateQueue;if(null!==n&&(t=n.memoCache),null==t){var a=vs.alternate;null!==a&&(null!==(a=a.updateQueue)&&(null!=(a=a.memoCache)&&(t={data:a.data.map(function(e){return e.slice()}),index:0})))}if(null==t&&(t={data:[],index:0}),null===n&&(n={lastEffect:null,events:null,stores:null,memoCache:null},vs.updateQueue=n),n.memoCache=t,void 0===(n=t.data[t.index]))for(n=t.data[t.index]=Array(e),a=0;a<e;a++)n[a]=E;return t.index++,n}function Gs(e,t){return"function"===typeof t?t(e):t}function Hs(e){return js(Bs(),xs,e)}function js(e,t,n){var a=e.queue;if(null===a)throw Error(o(311));a.lastRenderedReducer=n;var r=e.baseQueue,s=a.pending;if(null!==s){if(null!==r){var i=r.next;r.next=s.next,s.next=i}t.baseQueue=r=s,a.pending=null}if(s=e.baseState,null===r)e.memoizedState=s;else{var c=i=null,l=null,u=t=r.next,d=!1;do{var h=-536870913&u.lane;if(h!==u.lane?(sl&h)===h:(bs&h)===h){var p=u.revertLane;if(0===p)null!==l&&(l=l.next={lane:0,revertLane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),h===Lr&&(d=!0);else{if((bs&p)===p){u=u.next,p===Lr&&(d=!0);continue}h={lane:0,revertLane:u.revertLane,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null},null===l?(c=l=h,i=s):l=l.next=h,vs.lanes|=p,pl|=p}h=u.action,Ts&&n(s,h),s=u.hasEagerState?u.eagerState:n(s,h)}else p={lane:h,revertLane:u.revertLane,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null},null===l?(c=l=p,i=s):l=l.next=p,vs.lanes|=h,pl|=h;u=u.next}while(null!==u&&u!==t);if(null===l?i=s:l.next=c,!Xn(s,e.memoizedState)&&(Ci=!0,d&&null!==(n=Pr)))throw n;e.memoizedState=s,e.baseState=i,e.baseQueue=l,a.lastRenderedState=s}return null===r&&(a.lanes=0),[e.memoizedState,a.dispatch]}function qs(e){var t=Bs(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var a=n.dispatch,r=n.pending,s=t.memoizedState;if(null!==r){n.pending=null;var i=r=r.next;do{s=e(s,i.action),i=i.next}while(i!==r);Xn(s,t.memoizedState)||(Ci=!0),t.memoizedState=s,null===t.baseQueue&&(t.baseState=s),n.lastRenderedState=s}return[s,a]}function Ys(e,t,n){var a=vs,r=Bs(),s=sr;if(s){if(void 0===n)throw Error(o(407));n=n()}else n=t();var i=!Xn((xs||r).memoizedState,n);if(i&&(r.memoizedState=n,Ci=!0),r=r.queue,yo(2048,8,Zs.bind(null,a,r,e),[e]),r.getSnapshot!==t||i||null!==ws&&1&ws.memoizedState.tag){if(a.flags|=2048,fo(9,{destroy:void 0,resource:void 0},Xs.bind(null,a,r,n,t),null),null===al)throw Error(o(349));s||0!==(124&bs)||Ks(a,t,n)}return n}function Ks(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=vs.updateQueue)?(t={lastEffect:null,events:null,stores:null,memoCache:null},vs.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Xs(e,t,n,a){t.value=n,t.getSnapshot=a,Qs(t)&&$s(e)}function Zs(e,t,n){return n(function(){Qs(t)&&$s(e)})}function Qs(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!Xn(e,n)}catch(a){return!0}}function $s(e){var t=Ra(e,2);null!==t&&zl(t,e,2)}function Js(e){var t=Ps();if("function"===typeof e){var n=e;if(e=n(),Ts){he(!0);try{n()}finally{he(!1)}}}return t.memoizedState=t.baseState=e,t.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:Gs,lastRenderedState:e},t}function eo(e,t,n,a){return e.baseState=n,js(e,xs,"function"===typeof a?a:Gs)}function to(e,t,n,a,r){if(Uo(e))throw Error(o(485));if(null!==(e=t.action)){var s={payload:r,action:e,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(e){s.listeners.push(e)}};null!==O.T?n(!0):s.isTransition=!1,a(s),null===(n=t.pending)?(s.next=t.pending=s,no(t,s)):(s.next=n.next,t.pending=n.next=s)}}function no(e,t){var n=t.action,a=t.payload,r=e.state;if(t.isTransition){var s=O.T,o={};O.T=o;try{var i=n(r,a),c=O.S;null!==c&&c(o,i),ao(e,t,i)}catch(l){so(e,t,l)}finally{O.T=s}}else try{ao(e,t,s=n(r,a))}catch(u){so(e,t,u)}}function ao(e,t,n){null!==n&&"object"===typeof n&&"function"===typeof n.then?n.then(function(n){ro(e,t,n)},function(n){return so(e,t,n)}):ro(e,t,n)}function ro(e,t,n){t.status="fulfilled",t.value=n,oo(t),e.state=n,null!==(t=e.pending)&&((n=t.next)===t?e.pending=null:(n=n.next,t.next=n,no(e,n)))}function so(e,t,n){var a=e.pending;if(e.pending=null,null!==a){a=a.next;do{t.status="rejected",t.reason=n,oo(t),t=t.next}while(t!==a)}e.action=null}function oo(e){e=e.listeners;for(var t=0;t<e.length;t++)(0,e[t])()}function io(e,t){return t}function co(e,t){if(sr){var n=al.formState;if(null!==n){e:{var a=vs;if(sr){if(rr){t:{for(var r=rr,s=ir;8!==r.nodeType;){if(!s){r=null;break t}if(null===(r=yd(r.nextSibling))){r=null;break t}}r="F!"===(s=r.data)||"F"===s?r:null}if(r){rr=yd(r.nextSibling),a="F!"===r.data;break e}}lr(a)}a=!1}a&&(t=n[0])}}return(n=Ps()).memoizedState=n.baseState=t,a={pending:null,lanes:0,dispatch:null,lastRenderedReducer:io,lastRenderedState:t},n.queue=a,n=Bo.bind(null,vs,a),a.dispatch=n,a=Js(!1),s=Vo.bind(null,vs,!1,a.queue),r={state:t,dispatch:null,action:e,pending:null},(a=Ps()).queue=r,n=to.bind(null,vs,r,s,n),r.dispatch=n,a.memoizedState=e,[t,n,!1]}function lo(e){return uo(Bs(),xs,e)}function uo(e,t,n){if(t=js(e,t,io)[0],e=Hs(Gs)[0],"object"===typeof t&&null!==t&&"function"===typeof t.then)try{var a=Ws(t)}catch(o){if(o===jr)throw Yr;throw o}else a=t;var r=(t=Bs()).queue,s=r.dispatch;return n!==t.memoizedState&&(vs.flags|=2048,fo(9,{destroy:void 0,resource:void 0},ho.bind(null,r,n),null)),[a,s,e]}function ho(e,t){e.action=t}function po(e){var t=Bs(),n=xs;if(null!==n)return uo(t,n,e);Bs(),t=t.memoizedState;var a=(n=Bs()).queue.dispatch;return n.memoizedState=e,[t,a,!1]}function fo(e,t,n,a){return e={tag:e,create:n,deps:a,inst:t,next:null},null===(t=vs.updateQueue)&&(t={lastEffect:null,events:null,stores:null,memoCache:null},vs.updateQueue=t),null===(n=t.lastEffect)?t.lastEffect=e.next=e:(a=n.next,n.next=e,e.next=a,t.lastEffect=e),e}function mo(){return Bs().memoizedState}function go(e,t,n,a){var r=Ps();a=void 0===a?null:a,vs.flags|=e,r.memoizedState=fo(1|t,{destroy:void 0,resource:void 0},n,a)}function yo(e,t,n,a){var r=Bs();a=void 0===a?null:a;var s=r.memoizedState.inst;null!==xs&&null!==a&&_s(a,xs.memoizedState.deps)?r.memoizedState=fo(t,s,n,a):(vs.flags|=e,r.memoizedState=fo(1|t,s,n,a))}function bo(e,t){go(8390656,8,e,t)}function vo(e,t){yo(2048,8,e,t)}function xo(e,t){return yo(4,2,e,t)}function wo(e,t){return yo(4,4,e,t)}function ko(e,t){if("function"===typeof t){e=e();var n=t(e);return function(){"function"===typeof n?n():t(null)}}if(null!==t&&void 0!==t)return e=e(),t.current=e,function(){t.current=null}}function So(e,t,n){n=null!==n&&void 0!==n?n.concat([e]):null,yo(4,4,ko.bind(null,t,e),n)}function To(){}function No(e,t){var n=Bs();t=void 0===t?null:t;var a=n.memoizedState;return null!==t&&_s(t,a[1])?a[0]:(n.memoizedState=[e,t],e)}function Io(e,t){var n=Bs();t=void 0===t?null:t;var a=n.memoizedState;if(null!==t&&_s(t,a[1]))return a[0];if(a=e(),Ts){he(!0);try{e()}finally{he(!1)}}return n.memoizedState=[a,t],a}function Co(e,t,n){return void 0===n||0!==(1073741824&bs)?e.memoizedState=t:(e.memoizedState=n,e=Ml(),vs.lanes|=e,pl|=e,n)}function Eo(e,t,n,a){return Xn(n,t)?n:null!==ps.current?(e=Co(e,n,a),Xn(e,t)||(Ci=!0),e):0===(42&bs)?(Ci=!0,e.memoizedState=n):(e=Ml(),vs.lanes|=e,pl|=e,t)}function Ao(e,t,n,a,r){var s=M.p;M.p=0!==s&&8>s?s:8;var o=O.T,i={};O.T=i,Vo(e,!1,t,n);try{var c=r(),l=O.S;if(null!==l&&l(i,c),null!==c&&"object"===typeof c&&"function"===typeof c.then)Wo(e,t,function(e,t){var n=[],a={status:"pending",value:null,reason:null,then:function(e){n.push(e)}};return e.then(function(){a.status="fulfilled",a.value=t;for(var e=0;e<n.length;e++)(0,n[e])(t)},function(e){for(a.status="rejected",a.reason=e,e=0;e<n.length;e++)(0,n[e])(void 0)}),a}(c,a),Ol());else Wo(e,t,a,Ol())}catch(u){Wo(e,t,{then:function(){},status:"rejected",reason:u},Ol())}finally{M.p=s,O.T=o}}function _o(){}function Ro(e,t,n,a){if(5!==e.tag)throw Error(o(476));var r=Fo(e).queue;Ao(e,r,t,z,null===n?_o:function(){return Do(e),n(a)})}function Fo(e){var t=e.memoizedState;if(null!==t)return t;var n={};return(t={memoizedState:z,baseState:z,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Gs,lastRenderedState:z},next:null}).next={memoizedState:n,baseState:n,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Gs,lastRenderedState:n},next:null},e.memoizedState=t,null!==(e=e.alternate)&&(e.memoizedState=t),t}function Do(e){Wo(e,Fo(e).next.queue,{},Ol())}function Oo(){return Ir(Kd)}function Mo(){return Bs().memoizedState}function zo(){return Bs().memoizedState}function Lo(e){for(var t=e.return;null!==t;){switch(t.tag){case 24:case 3:var n=Ol(),a=ss(t,e=rs(n),n);return null!==a&&(zl(a,t,n),os(a,t,n)),t={cache:Dr()},void(e.payload=t)}t=t.return}}function Po(e,t,n){var a=Ol();n={lane:a,revertLane:0,action:n,hasEagerState:!1,eagerState:null,next:null},Uo(e)?Go(t,n):null!==(n=_a(e,t,n,a))&&(zl(n,e,a),Ho(n,t,a))}function Bo(e,t,n){Wo(e,t,n,Ol())}function Wo(e,t,n,a){var r={lane:a,revertLane:0,action:n,hasEagerState:!1,eagerState:null,next:null};if(Uo(e))Go(t,r);else{var s=e.alternate;if(0===e.lanes&&(null===s||0===s.lanes)&&null!==(s=t.lastRenderedReducer))try{var o=t.lastRenderedState,i=s(o,n);if(r.hasEagerState=!0,r.eagerState=i,Xn(i,o))return Aa(e,t,r,0),null===al&&Ea(),!1}catch(c){}if(null!==(n=_a(e,t,r,a)))return zl(n,e,a),Ho(n,t,a),!0}return!1}function Vo(e,t,n,a){if(a={lane:2,revertLane:Au(),action:a,hasEagerState:!1,eagerState:null,next:null},Uo(e)){if(t)throw Error(o(479))}else null!==(t=_a(e,n,a,2))&&zl(t,e,2)}function Uo(e){var t=e.alternate;return e===vs||null!==t&&t===vs}function Go(e,t){Ss=ks=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Ho(e,t,n){if(0!==(4194048&n)){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,Ce(e,n)}}var jo={readContext:Ir,use:Vs,useCallback:As,useContext:As,useEffect:As,useImperativeHandle:As,useLayoutEffect:As,useInsertionEffect:As,useMemo:As,useReducer:As,useRef:As,useState:As,useDebugValue:As,useDeferredValue:As,useTransition:As,useSyncExternalStore:As,useId:As,useHostTransitionStatus:As,useFormState:As,useActionState:As,useOptimistic:As,useMemoCache:As,useCacheRefresh:As},qo={readContext:Ir,use:Vs,useCallback:function(e,t){return Ps().memoizedState=[e,void 0===t?null:t],e},useContext:Ir,useEffect:bo,useImperativeHandle:function(e,t,n){n=null!==n&&void 0!==n?n.concat([e]):null,go(4194308,4,ko.bind(null,t,e),n)},useLayoutEffect:function(e,t){return go(4194308,4,e,t)},useInsertionEffect:function(e,t){go(4,2,e,t)},useMemo:function(e,t){var n=Ps();t=void 0===t?null:t;var a=e();if(Ts){he(!0);try{e()}finally{he(!1)}}return n.memoizedState=[a,t],a},useReducer:function(e,t,n){var a=Ps();if(void 0!==n){var r=n(t);if(Ts){he(!0);try{n(t)}finally{he(!1)}}}else r=t;return a.memoizedState=a.baseState=r,e={pending:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:r},a.queue=e,e=e.dispatch=Po.bind(null,vs,e),[a.memoizedState,e]},useRef:function(e){return e={current:e},Ps().memoizedState=e},useState:function(e){var t=(e=Js(e)).queue,n=Bo.bind(null,vs,t);return t.dispatch=n,[e.memoizedState,n]},useDebugValue:To,useDeferredValue:function(e,t){return Co(Ps(),e,t)},useTransition:function(){var e=Js(!1);return e=Ao.bind(null,vs,e.queue,!0,!1),Ps().memoizedState=e,[!1,e]},useSyncExternalStore:function(e,t,n){var a=vs,r=Ps();if(sr){if(void 0===n)throw Error(o(407));n=n()}else{if(n=t(),null===al)throw Error(o(349));0!==(124&sl)||Ks(a,t,n)}r.memoizedState=n;var s={value:n,getSnapshot:t};return r.queue=s,bo(Zs.bind(null,a,s,e),[e]),a.flags|=2048,fo(9,{destroy:void 0,resource:void 0},Xs.bind(null,a,s,n,t),null),n},useId:function(){var e=Ps(),t=al.identifierPrefix;if(sr){var n=$a;t="\xab"+t+"R"+(n=(Qa&~(1<<32-pe(Qa)-1)).toString(32)+n),0<(n=Ns++)&&(t+="H"+n.toString(32)),t+="\xbb"}else t="\xab"+t+"r"+(n=Es++).toString(32)+"\xbb";return e.memoizedState=t},useHostTransitionStatus:Oo,useFormState:co,useActionState:co,useOptimistic:function(e){var t=Ps();t.memoizedState=t.baseState=e;var n={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return t.queue=n,t=Vo.bind(null,vs,!0,n),n.dispatch=t,[e,t]},useMemoCache:Us,useCacheRefresh:function(){return Ps().memoizedState=Lo.bind(null,vs)}},Yo={readContext:Ir,use:Vs,useCallback:No,useContext:Ir,useEffect:vo,useImperativeHandle:So,useInsertionEffect:xo,useLayoutEffect:wo,useMemo:Io,useReducer:Hs,useRef:mo,useState:function(){return Hs(Gs)},useDebugValue:To,useDeferredValue:function(e,t){return Eo(Bs(),xs.memoizedState,e,t)},useTransition:function(){var e=Hs(Gs)[0],t=Bs().memoizedState;return["boolean"===typeof e?e:Ws(e),t]},useSyncExternalStore:Ys,useId:Mo,useHostTransitionStatus:Oo,useFormState:lo,useActionState:lo,useOptimistic:function(e,t){return eo(Bs(),0,e,t)},useMemoCache:Us,useCacheRefresh:zo},Ko={readContext:Ir,use:Vs,useCallback:No,useContext:Ir,useEffect:vo,useImperativeHandle:So,useInsertionEffect:xo,useLayoutEffect:wo,useMemo:Io,useReducer:qs,useRef:mo,useState:function(){return qs(Gs)},useDebugValue:To,useDeferredValue:function(e,t){var n=Bs();return null===xs?Co(n,e,t):Eo(n,xs.memoizedState,e,t)},useTransition:function(){var e=qs(Gs)[0],t=Bs().memoizedState;return["boolean"===typeof e?e:Ws(e),t]},useSyncExternalStore:Ys,useId:Mo,useHostTransitionStatus:Oo,useFormState:po,useActionState:po,useOptimistic:function(e,t){var n=Bs();return null!==xs?eo(n,0,e,t):(n.baseState=e,[e,n.queue.dispatch])},useMemoCache:Us,useCacheRefresh:zo},Xo=null,Zo=0;function Qo(e){var t=Zo;return Zo+=1,null===Xo&&(Xo=[]),Qr(Xo,e,t)}function $o(e,t){t=t.props.ref,e.ref=void 0!==t?t:null}function Jo(e,t){if(t.$$typeof===p)throw Error(o(525));throw e=Object.prototype.toString.call(t),Error(o(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function ei(e){return(0,e._init)(e._payload)}function ti(e){function t(t,n){if(e){var a=t.deletions;null===a?(t.deletions=[n],t.flags|=16):a.push(n)}}function n(n,a){if(!e)return null;for(;null!==a;)t(n,a),a=a.sibling;return null}function a(e){for(var t=new Map;null!==e;)null!==e.key?t.set(e.key,e):t.set(e.index,e),e=e.sibling;return t}function r(e,t){return(e=Pa(e,t)).index=0,e.sibling=null,e}function s(t,n,a){return t.index=a,e?null!==(a=t.alternate)?(a=a.index)<n?(t.flags|=67108866,n):a:(t.flags|=67108866,n):(t.flags|=1048576,n)}function i(t){return e&&null===t.alternate&&(t.flags|=67108866),t}function c(e,t,n,a){return null===t||6!==t.tag?((t=Ua(n,e.mode,a)).return=e,t):((t=r(t,n)).return=e,t)}function l(e,t,n,a){var s=n.type;return s===g?d(e,t,n.props.children,a,n.key):null!==t&&(t.elementType===s||"object"===typeof s&&null!==s&&s.$$typeof===I&&ei(s)===t.type)?($o(t=r(t,n.props),n),t.return=e,t):($o(t=Wa(n.type,n.key,n.props,null,e.mode,a),n),t.return=e,t)}function u(e,t,n,a){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Ga(n,e.mode,a)).return=e,t):((t=r(t,n.children||[])).return=e,t)}function d(e,t,n,a,s){return null===t||7!==t.tag?((t=Va(n,e.mode,a,s)).return=e,t):((t=r(t,n)).return=e,t)}function h(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t||"bigint"===typeof t)return(t=Ua(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case f:return $o(n=Wa(t.type,t.key,t.props,null,e.mode,n),t),n.return=e,n;case m:return(t=Ga(t,e.mode,n)).return=e,t;case I:return h(e,t=(0,t._init)(t._payload),n)}if(D(t)||_(t))return(t=Va(t,e.mode,n,null)).return=e,t;if("function"===typeof t.then)return h(e,Qo(t),n);if(t.$$typeof===w)return h(e,Cr(e,t),n);Jo(e,t)}return null}function p(e,t,n,a){var r=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n||"bigint"===typeof n)return null!==r?null:c(e,t,""+n,a);if("object"===typeof n&&null!==n){switch(n.$$typeof){case f:return n.key===r?l(e,t,n,a):null;case m:return n.key===r?u(e,t,n,a):null;case I:return p(e,t,n=(r=n._init)(n._payload),a)}if(D(n)||_(n))return null!==r?null:d(e,t,n,a,null);if("function"===typeof n.then)return p(e,t,Qo(n),a);if(n.$$typeof===w)return p(e,t,Cr(e,n),a);Jo(e,n)}return null}function y(e,t,n,a,r){if("string"===typeof a&&""!==a||"number"===typeof a||"bigint"===typeof a)return c(t,e=e.get(n)||null,""+a,r);if("object"===typeof a&&null!==a){switch(a.$$typeof){case f:return l(t,e=e.get(null===a.key?n:a.key)||null,a,r);case m:return u(t,e=e.get(null===a.key?n:a.key)||null,a,r);case I:return y(e,t,n,a=(0,a._init)(a._payload),r)}if(D(a)||_(a))return d(t,e=e.get(n)||null,a,r,null);if("function"===typeof a.then)return y(e,t,n,Qo(a),r);if(a.$$typeof===w)return y(e,t,n,Cr(t,a),r);Jo(t,a)}return null}function b(c,l,u,d){if("object"===typeof u&&null!==u&&u.type===g&&null===u.key&&(u=u.props.children),"object"===typeof u&&null!==u){switch(u.$$typeof){case f:e:{for(var v=u.key;null!==l;){if(l.key===v){if((v=u.type)===g){if(7===l.tag){n(c,l.sibling),(d=r(l,u.props.children)).return=c,c=d;break e}}else if(l.elementType===v||"object"===typeof v&&null!==v&&v.$$typeof===I&&ei(v)===l.type){n(c,l.sibling),$o(d=r(l,u.props),u),d.return=c,c=d;break e}n(c,l);break}t(c,l),l=l.sibling}u.type===g?((d=Va(u.props.children,c.mode,d,u.key)).return=c,c=d):($o(d=Wa(u.type,u.key,u.props,null,c.mode,d),u),d.return=c,c=d)}return i(c);case m:e:{for(v=u.key;null!==l;){if(l.key===v){if(4===l.tag&&l.stateNode.containerInfo===u.containerInfo&&l.stateNode.implementation===u.implementation){n(c,l.sibling),(d=r(l,u.children||[])).return=c,c=d;break e}n(c,l);break}t(c,l),l=l.sibling}(d=Ga(u,c.mode,d)).return=c,c=d}return i(c);case I:return b(c,l,u=(v=u._init)(u._payload),d)}if(D(u))return function(r,o,i,c){for(var l=null,u=null,d=o,f=o=0,m=null;null!==d&&f<i.length;f++){d.index>f?(m=d,d=null):m=d.sibling;var g=p(r,d,i[f],c);if(null===g){null===d&&(d=m);break}e&&d&&null===g.alternate&&t(r,d),o=s(g,o,f),null===u?l=g:u.sibling=g,u=g,d=m}if(f===i.length)return n(r,d),sr&&Ja(r,f),l;if(null===d){for(;f<i.length;f++)null!==(d=h(r,i[f],c))&&(o=s(d,o,f),null===u?l=d:u.sibling=d,u=d);return sr&&Ja(r,f),l}for(d=a(d);f<i.length;f++)null!==(m=y(d,r,f,i[f],c))&&(e&&null!==m.alternate&&d.delete(null===m.key?f:m.key),o=s(m,o,f),null===u?l=m:u.sibling=m,u=m);return e&&d.forEach(function(e){return t(r,e)}),sr&&Ja(r,f),l}(c,l,u,d);if(_(u)){if("function"!==typeof(v=_(u)))throw Error(o(150));return function(r,i,c,l){if(null==c)throw Error(o(151));for(var u=null,d=null,f=i,m=i=0,g=null,b=c.next();null!==f&&!b.done;m++,b=c.next()){f.index>m?(g=f,f=null):g=f.sibling;var v=p(r,f,b.value,l);if(null===v){null===f&&(f=g);break}e&&f&&null===v.alternate&&t(r,f),i=s(v,i,m),null===d?u=v:d.sibling=v,d=v,f=g}if(b.done)return n(r,f),sr&&Ja(r,m),u;if(null===f){for(;!b.done;m++,b=c.next())null!==(b=h(r,b.value,l))&&(i=s(b,i,m),null===d?u=b:d.sibling=b,d=b);return sr&&Ja(r,m),u}for(f=a(f);!b.done;m++,b=c.next())null!==(b=y(f,r,m,b.value,l))&&(e&&null!==b.alternate&&f.delete(null===b.key?m:b.key),i=s(b,i,m),null===d?u=b:d.sibling=b,d=b);return e&&f.forEach(function(e){return t(r,e)}),sr&&Ja(r,m),u}(c,l,u=v.call(u),d)}if("function"===typeof u.then)return b(c,l,Qo(u),d);if(u.$$typeof===w)return b(c,l,Cr(c,u),d);Jo(c,u)}return"string"===typeof u&&""!==u||"number"===typeof u||"bigint"===typeof u?(u=""+u,null!==l&&6===l.tag?(n(c,l.sibling),(d=r(l,u)).return=c,c=d):(n(c,l),(d=Ua(u,c.mode,d)).return=c,c=d),i(c)):n(c,l)}return function(e,t,n,a){try{Zo=0;var r=b(e,t,n,a);return Xo=null,r}catch(o){if(o===jr||o===Yr)throw o;var s=za(29,o,null,e.mode);return s.lanes=a,s.return=e,s}}}var ni=ti(!0),ai=ti(!1),ri=B(null),si=null;function oi(e){var t=e.alternate;V(ui,1&ui.current),V(ri,e),null===si&&(null===t||null!==ps.current||null!==t.memoizedState)&&(si=e)}function ii(e){if(22===e.tag){if(V(ui,ui.current),V(ri,e),null===si){var t=e.alternate;null!==t&&null!==t.memoizedState&&(si=e)}}else ci()}function ci(){V(ui,ui.current),V(ri,ri.current)}function li(e){W(ri),si===e&&(si=null),W(ui)}var ui=B(0);function di(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||gd(n)))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function hi(e,t,n,a){n=null===(n=n(a,t=e.memoizedState))||void 0===n?t:h({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var pi={enqueueSetState:function(e,t,n){e=e._reactInternals;var a=Ol(),r=rs(a);r.payload=t,void 0!==n&&null!==n&&(r.callback=n),null!==(t=ss(e,r,a))&&(zl(t,e,a),os(t,e,a))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var a=Ol(),r=rs(a);r.tag=1,r.payload=t,void 0!==n&&null!==n&&(r.callback=n),null!==(t=ss(e,r,a))&&(zl(t,e,a),os(t,e,a))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=Ol(),a=rs(n);a.tag=2,void 0!==t&&null!==t&&(a.callback=t),null!==(t=ss(e,a,n))&&(zl(t,e,n),os(t,e,n))}};function fi(e,t,n,a,r,s,o){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(a,s,o):!t.prototype||!t.prototype.isPureReactComponent||(!Zn(n,a)||!Zn(r,s))}function mi(e,t,n,a){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,a),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,a),t.state!==e&&pi.enqueueReplaceState(t,t.state,null)}function gi(e,t){var n=t;if("ref"in t)for(var a in n={},t)"ref"!==a&&(n[a]=t[a]);if(e=e.defaultProps)for(var r in n===t&&(n=h({},n)),e)void 0===n[r]&&(n[r]=e[r]);return n}var yi="function"===typeof reportError?reportError:function(e){if("object"===typeof window&&"function"===typeof window.ErrorEvent){var t=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:"object"===typeof e&&null!==e&&"string"===typeof e.message?String(e.message):String(e),error:e});if(!window.dispatchEvent(t))return}else if("object"===typeof process&&"function"===typeof process.emit)return void process.emit("uncaughtException",e);console.error(e)};function bi(e){yi(e)}function vi(e){console.error(e)}function xi(e){yi(e)}function wi(e,t){try{(0,e.onUncaughtError)(t.value,{componentStack:t.stack})}catch(n){setTimeout(function(){throw n})}}function ki(e,t,n){try{(0,e.onCaughtError)(n.value,{componentStack:n.stack,errorBoundary:1===t.tag?t.stateNode:null})}catch(a){setTimeout(function(){throw a})}}function Si(e,t,n){return(n=rs(n)).tag=3,n.payload={element:null},n.callback=function(){wi(e,t)},n}function Ti(e){return(e=rs(e)).tag=3,e}function Ni(e,t,n,a){var r=n.type.getDerivedStateFromError;if("function"===typeof r){var s=a.value;e.payload=function(){return r(s)},e.callback=function(){ki(t,n,a)}}var o=n.stateNode;null!==o&&"function"===typeof o.componentDidCatch&&(e.callback=function(){ki(t,n,a),"function"!==typeof r&&(null===Tl?Tl=new Set([this]):Tl.add(this));var e=a.stack;this.componentDidCatch(a.value,{componentStack:null!==e?e:""})})}var Ii=Error(o(461)),Ci=!1;function Ei(e,t,n,a){t.child=null===e?ai(t,null,n,a):ni(t,e.child,n,a)}function Ai(e,t,n,a,r){n=n.render;var s=t.ref;if("ref"in a){var o={};for(var i in a)"ref"!==i&&(o[i]=a[i])}else o=a;return Nr(t),a=Rs(e,t,n,o,s,r),i=Ms(),null===e||Ci?(sr&&i&&tr(t),t.flags|=1,Ei(e,t,a,r),t.child):(zs(e,t,r),Xi(e,t,r))}function _i(e,t,n,a,r){if(null===e){var s=n.type;return"function"!==typeof s||La(s)||void 0!==s.defaultProps||null!==n.compare?((e=Wa(n.type,null,a,t,t.mode,r)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=s,Ri(e,t,s,a,r))}if(s=e.child,!Zi(e,r)){var o=s.memoizedProps;if((n=null!==(n=n.compare)?n:Zn)(o,a)&&e.ref===t.ref)return Xi(e,t,r)}return t.flags|=1,(e=Pa(s,a)).ref=t.ref,e.return=t,t.child=e}function Ri(e,t,n,a,r){if(null!==e){var s=e.memoizedProps;if(Zn(s,a)&&e.ref===t.ref){if(Ci=!1,t.pendingProps=a=s,!Zi(e,r))return t.lanes=e.lanes,Xi(e,t,r);0!==(131072&e.flags)&&(Ci=!0)}}return Mi(e,t,n,a,r)}function Fi(e,t,n){var a=t.pendingProps,r=a.children,s=null!==e?e.memoizedState:null;if("hidden"===a.mode){if(0!==(128&t.flags)){if(a=null!==s?s.baseLanes|n:n,null!==e){for(r=t.child=e.child,s=0;null!==r;)s=s|r.lanes|r.childLanes,r=r.sibling;t.childLanes=s&~a}else t.childLanes=0,t.child=null;return Di(e,t,a,n)}if(0===(536870912&n))return t.lanes=t.childLanes=536870912,Di(e,t,null!==s?s.baseLanes|n:n,n);t.memoizedState={baseLanes:0,cachePool:null},null!==e&&Gr(0,null!==s?s.cachePool:null),null!==s?ms(t,s):gs(),ii(t)}else null!==s?(Gr(0,s.cachePool),ms(t,s),ci(),t.memoizedState=null):(null!==e&&Gr(0,null),gs(),ci());return Ei(e,t,r,n),t.child}function Di(e,t,n,a){var r=Ur();return r=null===r?null:{parent:Fr._currentValue,pool:r},t.memoizedState={baseLanes:n,cachePool:r},null!==e&&Gr(0,null),gs(),ii(t),null!==e&&Sr(e,t,a,!0),null}function Oi(e,t){var n=t.ref;if(null===n)null!==e&&null!==e.ref&&(t.flags|=4194816);else{if("function"!==typeof n&&"object"!==typeof n)throw Error(o(284));null!==e&&e.ref===n||(t.flags|=4194816)}}function Mi(e,t,n,a,r){return Nr(t),n=Rs(e,t,n,a,void 0,r),a=Ms(),null===e||Ci?(sr&&a&&tr(t),t.flags|=1,Ei(e,t,n,r),t.child):(zs(e,t,r),Xi(e,t,r))}function zi(e,t,n,a,r,s){return Nr(t),t.updateQueue=null,n=Ds(t,a,n,r),Fs(e),a=Ms(),null===e||Ci?(sr&&a&&tr(t),t.flags|=1,Ei(e,t,n,s),t.child):(zs(e,t,s),Xi(e,t,s))}function Li(e,t,n,a,r){if(Nr(t),null===t.stateNode){var s=Oa,o=n.contextType;"object"===typeof o&&null!==o&&(s=Ir(o)),s=new n(a,s),t.memoizedState=null!==s.state&&void 0!==s.state?s.state:null,s.updater=pi,t.stateNode=s,s._reactInternals=t,(s=t.stateNode).props=a,s.state=t.memoizedState,s.refs={},ns(t),o=n.contextType,s.context="object"===typeof o&&null!==o?Ir(o):Oa,s.state=t.memoizedState,"function"===typeof(o=n.getDerivedStateFromProps)&&(hi(t,n,o,a),s.state=t.memoizedState),"function"===typeof n.getDerivedStateFromProps||"function"===typeof s.getSnapshotBeforeUpdate||"function"!==typeof s.UNSAFE_componentWillMount&&"function"!==typeof s.componentWillMount||(o=s.state,"function"===typeof s.componentWillMount&&s.componentWillMount(),"function"===typeof s.UNSAFE_componentWillMount&&s.UNSAFE_componentWillMount(),o!==s.state&&pi.enqueueReplaceState(s,s.state,null),us(t,a,s,r),ls(),s.state=t.memoizedState),"function"===typeof s.componentDidMount&&(t.flags|=4194308),a=!0}else if(null===e){s=t.stateNode;var i=t.memoizedProps,c=gi(n,i);s.props=c;var l=s.context,u=n.contextType;o=Oa,"object"===typeof u&&null!==u&&(o=Ir(u));var d=n.getDerivedStateFromProps;u="function"===typeof d||"function"===typeof s.getSnapshotBeforeUpdate,i=t.pendingProps!==i,u||"function"!==typeof s.UNSAFE_componentWillReceiveProps&&"function"!==typeof s.componentWillReceiveProps||(i||l!==o)&&mi(t,s,a,o),ts=!1;var h=t.memoizedState;s.state=h,us(t,a,s,r),ls(),l=t.memoizedState,i||h!==l||ts?("function"===typeof d&&(hi(t,n,d,a),l=t.memoizedState),(c=ts||fi(t,n,c,a,h,l,o))?(u||"function"!==typeof s.UNSAFE_componentWillMount&&"function"!==typeof s.componentWillMount||("function"===typeof s.componentWillMount&&s.componentWillMount(),"function"===typeof s.UNSAFE_componentWillMount&&s.UNSAFE_componentWillMount()),"function"===typeof s.componentDidMount&&(t.flags|=4194308)):("function"===typeof s.componentDidMount&&(t.flags|=4194308),t.memoizedProps=a,t.memoizedState=l),s.props=a,s.state=l,s.context=o,a=c):("function"===typeof s.componentDidMount&&(t.flags|=4194308),a=!1)}else{s=t.stateNode,as(e,t),u=gi(n,o=t.memoizedProps),s.props=u,d=t.pendingProps,h=s.context,l=n.contextType,c=Oa,"object"===typeof l&&null!==l&&(c=Ir(l)),(l="function"===typeof(i=n.getDerivedStateFromProps)||"function"===typeof s.getSnapshotBeforeUpdate)||"function"!==typeof s.UNSAFE_componentWillReceiveProps&&"function"!==typeof s.componentWillReceiveProps||(o!==d||h!==c)&&mi(t,s,a,c),ts=!1,h=t.memoizedState,s.state=h,us(t,a,s,r),ls();var p=t.memoizedState;o!==d||h!==p||ts||null!==e&&null!==e.dependencies&&Tr(e.dependencies)?("function"===typeof i&&(hi(t,n,i,a),p=t.memoizedState),(u=ts||fi(t,n,u,a,h,p,c)||null!==e&&null!==e.dependencies&&Tr(e.dependencies))?(l||"function"!==typeof s.UNSAFE_componentWillUpdate&&"function"!==typeof s.componentWillUpdate||("function"===typeof s.componentWillUpdate&&s.componentWillUpdate(a,p,c),"function"===typeof s.UNSAFE_componentWillUpdate&&s.UNSAFE_componentWillUpdate(a,p,c)),"function"===typeof s.componentDidUpdate&&(t.flags|=4),"function"===typeof s.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof s.componentDidUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!==typeof s.getSnapshotBeforeUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),t.memoizedProps=a,t.memoizedState=p),s.props=a,s.state=p,s.context=c,a=u):("function"!==typeof s.componentDidUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!==typeof s.getSnapshotBeforeUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),a=!1)}return s=a,Oi(e,t),a=0!==(128&t.flags),s||a?(s=t.stateNode,n=a&&"function"!==typeof n.getDerivedStateFromError?null:s.render(),t.flags|=1,null!==e&&a?(t.child=ni(t,e.child,null,r),t.child=ni(t,null,n,r)):Ei(e,t,n,r),t.memoizedState=s.state,e=t.child):e=Xi(e,t,r),e}function Pi(e,t,n,a){return pr(),t.flags|=256,Ei(e,t,n,a),t.child}var Bi={dehydrated:null,treeContext:null,retryLane:0,hydrationErrors:null};function Wi(e){return{baseLanes:e,cachePool:Hr()}}function Vi(e,t,n){return e=null!==e?e.childLanes&~n:0,t&&(e|=gl),e}function Ui(e,t,n){var a,r=t.pendingProps,s=!1,i=0!==(128&t.flags);if((a=i)||(a=(null===e||null!==e.memoizedState)&&0!==(2&ui.current)),a&&(s=!0,t.flags&=-129),a=0!==(32&t.flags),t.flags&=-33,null===e){if(sr){if(s?oi(t):ci(),sr){var c,l=rr;if(c=l){e:{for(c=l,l=ir;8!==c.nodeType;){if(!l){l=null;break e}if(null===(c=yd(c.nextSibling))){l=null;break e}}l=c}null!==l?(t.memoizedState={dehydrated:l,treeContext:null!==Za?{id:Qa,overflow:$a}:null,retryLane:536870912,hydrationErrors:null},(c=za(18,null,null,0)).stateNode=l,c.return=t,t.child=c,ar=t,rr=null,c=!0):c=!1}c||lr(t)}if(null!==(l=t.memoizedState)&&null!==(l=l.dehydrated))return gd(l)?t.lanes=32:t.lanes=536870912,null;li(t)}return l=r.children,r=r.fallback,s?(ci(),l=Hi({mode:"hidden",children:l},s=t.mode),r=Va(r,s,n,null),l.return=t,r.return=t,l.sibling=r,t.child=l,(s=t.child).memoizedState=Wi(n),s.childLanes=Vi(e,a,n),t.memoizedState=Bi,r):(oi(t),Gi(t,l))}if(null!==(c=e.memoizedState)&&null!==(l=c.dehydrated)){if(i)256&t.flags?(oi(t),t.flags&=-257,t=ji(e,t,n)):null!==t.memoizedState?(ci(),t.child=e.child,t.flags|=128,t=null):(ci(),s=r.fallback,l=t.mode,r=Hi({mode:"visible",children:r.children},l),(s=Va(s,l,n,null)).flags|=2,r.return=t,s.return=t,r.sibling=s,t.child=r,ni(t,e.child,null,n),(r=t.child).memoizedState=Wi(n),r.childLanes=Vi(e,a,n),t.memoizedState=Bi,t=s);else if(oi(t),gd(l)){if(a=l.nextSibling&&l.nextSibling.dataset)var u=a.dgst;a=u,(r=Error(o(419))).stack="",r.digest=a,mr({value:r,source:null,stack:null}),t=ji(e,t,n)}else if(Ci||Sr(e,t,n,!1),a=0!==(n&e.childLanes),Ci||a){if(null!==(a=al)&&(0!==(r=0!==((r=0!==(42&(r=n&-n))?1:Ee(r))&(a.suspendedLanes|n))?0:r)&&r!==c.retryLane))throw c.retryLane=r,Ra(e,r),zl(a,e,r),Ii;"$?"===l.data||Yl(),t=ji(e,t,n)}else"$?"===l.data?(t.flags|=192,t.child=e.child,t=null):(e=c.treeContext,rr=yd(l.nextSibling),ar=t,sr=!0,or=null,ir=!1,null!==e&&(Ka[Xa++]=Qa,Ka[Xa++]=$a,Ka[Xa++]=Za,Qa=e.id,$a=e.overflow,Za=t),(t=Gi(t,r.children)).flags|=4096);return t}return s?(ci(),s=r.fallback,l=t.mode,u=(c=e.child).sibling,(r=Pa(c,{mode:"hidden",children:r.children})).subtreeFlags=65011712&c.subtreeFlags,null!==u?s=Pa(u,s):(s=Va(s,l,n,null)).flags|=2,s.return=t,r.return=t,r.sibling=s,t.child=r,r=s,s=t.child,null===(l=e.child.memoizedState)?l=Wi(n):(null!==(c=l.cachePool)?(u=Fr._currentValue,c=c.parent!==u?{parent:u,pool:u}:c):c=Hr(),l={baseLanes:l.baseLanes|n,cachePool:c}),s.memoizedState=l,s.childLanes=Vi(e,a,n),t.memoizedState=Bi,r):(oi(t),e=(n=e.child).sibling,(n=Pa(n,{mode:"visible",children:r.children})).return=t,n.sibling=null,null!==e&&(null===(a=t.deletions)?(t.deletions=[e],t.flags|=16):a.push(e)),t.child=n,t.memoizedState=null,n)}function Gi(e,t){return(t=Hi({mode:"visible",children:t},e.mode)).return=e,e.child=t}function Hi(e,t){return(e=za(22,e,null,t)).lanes=0,e.stateNode={_visibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null},e}function ji(e,t,n){return ni(t,e.child,null,n),(e=Gi(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function qi(e,t,n){e.lanes|=t;var a=e.alternate;null!==a&&(a.lanes|=t),wr(e.return,t,n)}function Yi(e,t,n,a,r){var s=e.memoizedState;null===s?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:a,tail:n,tailMode:r}:(s.isBackwards=t,s.rendering=null,s.renderingStartTime=0,s.last=a,s.tail=n,s.tailMode=r)}function Ki(e,t,n){var a=t.pendingProps,r=a.revealOrder,s=a.tail;if(Ei(e,t,a.children,n),0!==(2&(a=ui.current)))a=1&a|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&qi(e,n,t);else if(19===e.tag)qi(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}a&=1}switch(V(ui,a),r){case"forwards":for(n=t.child,r=null;null!==n;)null!==(e=n.alternate)&&null===di(e)&&(r=n),n=n.sibling;null===(n=r)?(r=t.child,t.child=null):(r=n.sibling,n.sibling=null),Yi(t,!1,r,n,s);break;case"backwards":for(n=null,r=t.child,t.child=null;null!==r;){if(null!==(e=r.alternate)&&null===di(e)){t.child=r;break}e=r.sibling,r.sibling=n,n=r,r=e}Yi(t,!0,n,null,s);break;case"together":Yi(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Xi(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),pl|=t.lanes,0===(n&t.childLanes)){if(null===e)return null;if(Sr(e,t,n,!1),0===(n&t.childLanes))return null}if(null!==e&&t.child!==e.child)throw Error(o(153));if(null!==t.child){for(n=Pa(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Pa(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Zi(e,t){return 0!==(e.lanes&t)||!(null===(e=e.dependencies)||!Tr(e))}function Qi(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps)Ci=!0;else{if(!Zi(e,n)&&0===(128&t.flags))return Ci=!1,function(e,t,n){switch(t.tag){case 3:q(t,t.stateNode.containerInfo),vr(0,Fr,e.memoizedState.cache),pr();break;case 27:case 5:K(t);break;case 4:q(t,t.stateNode.containerInfo);break;case 10:vr(0,t.type,t.memoizedProps.value);break;case 13:var a=t.memoizedState;if(null!==a)return null!==a.dehydrated?(oi(t),t.flags|=128,null):0!==(n&t.child.childLanes)?Ui(e,t,n):(oi(t),null!==(e=Xi(e,t,n))?e.sibling:null);oi(t);break;case 19:var r=0!==(128&e.flags);if((a=0!==(n&t.childLanes))||(Sr(e,t,n,!1),a=0!==(n&t.childLanes)),r){if(a)return Ki(e,t,n);t.flags|=128}if(null!==(r=t.memoizedState)&&(r.rendering=null,r.tail=null,r.lastEffect=null),V(ui,ui.current),a)break;return null;case 22:case 23:return t.lanes=0,Fi(e,t,n);case 24:vr(0,Fr,e.memoizedState.cache)}return Xi(e,t,n)}(e,t,n);Ci=0!==(131072&e.flags)}else Ci=!1,sr&&0!==(1048576&t.flags)&&er(t,Ya,t.index);switch(t.lanes=0,t.tag){case 16:e:{e=t.pendingProps;var a=t.elementType,r=a._init;if(a=r(a._payload),t.type=a,"function"!==typeof a){if(void 0!==a&&null!==a){if((r=a.$$typeof)===k){t.tag=11,t=Ai(null,t,a,e,n);break e}if(r===N){t.tag=14,t=_i(null,t,a,e,n);break e}}throw t=F(a)||a,Error(o(306,t,""))}La(a)?(e=gi(a,e),t.tag=1,t=Li(null,t,a,e,n)):(t.tag=0,t=Mi(null,t,a,e,n))}return t;case 0:return Mi(e,t,t.type,t.pendingProps,n);case 1:return Li(e,t,a=t.type,r=gi(a,t.pendingProps),n);case 3:e:{if(q(t,t.stateNode.containerInfo),null===e)throw Error(o(387));a=t.pendingProps;var s=t.memoizedState;r=s.element,as(e,t),us(t,a,null,n);var i=t.memoizedState;if(a=i.cache,vr(0,Fr,a),a!==s.cache&&kr(t,[Fr],n,!0),ls(),a=i.element,s.isDehydrated){if(s={element:a,isDehydrated:!1,cache:i.cache},t.updateQueue.baseState=s,t.memoizedState=s,256&t.flags){t=Pi(e,t,a,n);break e}if(a!==r){mr(r=Ta(Error(o(424)),t)),t=Pi(e,t,a,n);break e}if(9===(e=t.stateNode.containerInfo).nodeType)e=e.body;else e="HTML"===e.nodeName?e.ownerDocument.body:e;for(rr=yd(e.firstChild),ar=t,sr=!0,or=null,ir=!0,n=ai(t,null,a,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(pr(),a===r){t=Xi(e,t,n);break e}Ei(e,t,a,n)}t=t.child}return t;case 26:return Oi(e,t),null===e?(n=Ed(t.type,null,t.pendingProps,null))?t.memoizedState=n:sr||(n=t.type,e=t.pendingProps,(a=ad(H.current).createElement(n))[Fe]=t,a[De]=e,ed(a,n,e),je(a),t.stateNode=a):t.memoizedState=Ed(t.type,e.memoizedProps,t.pendingProps,e.memoizedState),null;case 27:return K(t),null===e&&sr&&(a=t.stateNode=xd(t.type,t.pendingProps,H.current),ar=t,ir=!0,r=rr,pd(t.type)?(bd=r,rr=yd(a.firstChild)):rr=r),Ei(e,t,t.pendingProps.children,n),Oi(e,t),null===e&&(t.flags|=4194304),t.child;case 5:return null===e&&sr&&((r=a=rr)&&(null!==(a=function(e,t,n,a){for(;1===e.nodeType;){var r=n;if(e.nodeName.toLowerCase()!==t.toLowerCase()){if(!a&&("INPUT"!==e.nodeName||"hidden"!==e.type))break}else if(a){if(!e[Be])switch(t){case"meta":if(!e.hasAttribute("itemprop"))break;return e;case"link":if("stylesheet"===(s=e.getAttribute("rel"))&&e.hasAttribute("data-precedence"))break;if(s!==r.rel||e.getAttribute("href")!==(null==r.href||""===r.href?null:r.href)||e.getAttribute("crossorigin")!==(null==r.crossOrigin?null:r.crossOrigin)||e.getAttribute("title")!==(null==r.title?null:r.title))break;return e;case"style":if(e.hasAttribute("data-precedence"))break;return e;case"script":if(((s=e.getAttribute("src"))!==(null==r.src?null:r.src)||e.getAttribute("type")!==(null==r.type?null:r.type)||e.getAttribute("crossorigin")!==(null==r.crossOrigin?null:r.crossOrigin))&&s&&e.hasAttribute("async")&&!e.hasAttribute("itemprop"))break;return e;default:return e}}else{if("input"!==t||"hidden"!==e.type)return e;var s=null==r.name?null:""+r.name;if("hidden"===r.type&&e.getAttribute("name")===s)return e}if(null===(e=yd(e.nextSibling)))break}return null}(a,t.type,t.pendingProps,ir))?(t.stateNode=a,ar=t,rr=yd(a.firstChild),ir=!1,r=!0):r=!1),r||lr(t)),K(t),r=t.type,s=t.pendingProps,i=null!==e?e.memoizedProps:null,a=s.children,od(r,s)?a=null:null!==i&&od(r,i)&&(t.flags|=32),null!==t.memoizedState&&(r=Rs(e,t,Os,null,null,n),Kd._currentValue=r),Oi(e,t),Ei(e,t,a,n),t.child;case 6:return null===e&&sr&&((e=n=rr)&&(null!==(n=function(e,t,n){if(""===t)return null;for(;3!==e.nodeType;){if((1!==e.nodeType||"INPUT"!==e.nodeName||"hidden"!==e.type)&&!n)return null;if(null===(e=yd(e.nextSibling)))return null}return e}(n,t.pendingProps,ir))?(t.stateNode=n,ar=t,rr=null,e=!0):e=!1),e||lr(t)),null;case 13:return Ui(e,t,n);case 4:return q(t,t.stateNode.containerInfo),a=t.pendingProps,null===e?t.child=ni(t,null,a,n):Ei(e,t,a,n),t.child;case 11:return Ai(e,t,t.type,t.pendingProps,n);case 7:return Ei(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ei(e,t,t.pendingProps.children,n),t.child;case 10:return a=t.pendingProps,vr(0,t.type,a.value),Ei(e,t,a.children,n),t.child;case 9:return r=t.type._context,a=t.pendingProps.children,Nr(t),a=a(r=Ir(r)),t.flags|=1,Ei(e,t,a,n),t.child;case 14:return _i(e,t,t.type,t.pendingProps,n);case 15:return Ri(e,t,t.type,t.pendingProps,n);case 19:return Ki(e,t,n);case 31:return a=t.pendingProps,n=t.mode,a={mode:a.mode,children:a.children},null===e?((n=Hi(a,n)).ref=t.ref,t.child=n,n.return=t,t=n):((n=Pa(e.child,a)).ref=t.ref,t.child=n,n.return=t,t=n),t;case 22:return Fi(e,t,n);case 24:return Nr(t),a=Ir(Fr),null===e?(null===(r=Ur())&&(r=al,s=Dr(),r.pooledCache=s,s.refCount++,null!==s&&(r.pooledCacheLanes|=n),r=s),t.memoizedState={parent:a,cache:r},ns(t),vr(0,Fr,r)):(0!==(e.lanes&n)&&(as(e,t),us(t,null,null,n),ls()),r=e.memoizedState,s=t.memoizedState,r.parent!==a?(r={parent:a,cache:a},t.memoizedState=r,0===t.lanes&&(t.memoizedState=t.updateQueue.baseState=r),vr(0,Fr,a)):(a=s.cache,vr(0,Fr,a),a!==r.cache&&kr(t,[Fr],n,!0))),Ei(e,t,t.pendingProps.children,n),t.child;case 29:throw t.pendingProps}throw Error(o(156,t.tag))}function $i(e){e.flags|=4}function Ji(e,t){if("stylesheet"!==t.type||0!==(4&t.state.loading))e.flags&=-16777217;else if(e.flags|=16777216,!Vd(t)){if(null!==(t=ri.current)&&((4194048&sl)===sl?null!==si:(62914560&sl)!==sl&&0===(536870912&sl)||t!==si))throw $r=Kr,qr;e.flags|=8192}}function ec(e,t){null!==t&&(e.flags|=4),16384&e.flags&&(t=22!==e.tag?Se():536870912,e.lanes|=t,yl|=t)}function tc(e,t){if(!sr)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var a=null;null!==n;)null!==n.alternate&&(a=n),n=n.sibling;null===a?t||null===e.tail?e.tail=null:e.tail.sibling=null:a.sibling=null}}function nc(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,a=0;if(t)for(var r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=65011712&r.subtreeFlags,a|=65011712&r.flags,r.return=e,r=r.sibling;else for(r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=r.subtreeFlags,a|=r.flags,r.return=e,r=r.sibling;return e.subtreeFlags|=a,e.childLanes=n,t}function ac(e,t,n){var a=t.pendingProps;switch(nr(t),t.tag){case 31:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:case 1:return nc(t),null;case 3:return n=t.stateNode,a=null,null!==e&&(a=e.memoizedState.cache),t.memoizedState.cache!==a&&(t.flags|=2048),xr(Fr),Y(),n.pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||(hr(t)?$i(t):null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,fr())),nc(t),null;case 26:return n=t.memoizedState,null===e?($i(t),null!==n?(nc(t),Ji(t,n)):(nc(t),t.flags&=-16777217)):n?n!==e.memoizedState?($i(t),nc(t),Ji(t,n)):(nc(t),t.flags&=-16777217):(e.memoizedProps!==a&&$i(t),nc(t),t.flags&=-16777217),null;case 27:X(t),n=H.current;var r=t.type;if(null!==e&&null!=t.stateNode)e.memoizedProps!==a&&$i(t);else{if(!a){if(null===t.stateNode)throw Error(o(166));return nc(t),null}e=U.current,hr(t)?ur(t):(e=xd(r,a,n),t.stateNode=e,$i(t))}return nc(t),null;case 5:if(X(t),n=t.type,null!==e&&null!=t.stateNode)e.memoizedProps!==a&&$i(t);else{if(!a){if(null===t.stateNode)throw Error(o(166));return nc(t),null}if(e=U.current,hr(t))ur(t);else{switch(r=ad(H.current),e){case 1:e=r.createElementNS("http://www.w3.org/2000/svg",n);break;case 2:e=r.createElementNS("http://www.w3.org/1998/Math/MathML",n);break;default:switch(n){case"svg":e=r.createElementNS("http://www.w3.org/2000/svg",n);break;case"math":e=r.createElementNS("http://www.w3.org/1998/Math/MathML",n);break;case"script":(e=r.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild);break;case"select":e="string"===typeof a.is?r.createElement("select",{is:a.is}):r.createElement("select"),a.multiple?e.multiple=!0:a.size&&(e.size=a.size);break;default:e="string"===typeof a.is?r.createElement(n,{is:a.is}):r.createElement(n)}}e[Fe]=t,e[De]=a;e:for(r=t.child;null!==r;){if(5===r.tag||6===r.tag)e.appendChild(r.stateNode);else if(4!==r.tag&&27!==r.tag&&null!==r.child){r.child.return=r,r=r.child;continue}if(r===t)break e;for(;null===r.sibling;){if(null===r.return||r.return===t)break e;r=r.return}r.sibling.return=r.return,r=r.sibling}t.stateNode=e;e:switch(ed(e,n,a),n){case"button":case"input":case"select":case"textarea":e=!!a.autoFocus;break e;case"img":e=!0;break e;default:e=!1}e&&$i(t)}}return nc(t),t.flags&=-16777217,null;case 6:if(e&&null!=t.stateNode)e.memoizedProps!==a&&$i(t);else{if("string"!==typeof a&&null===t.stateNode)throw Error(o(166));if(e=H.current,hr(t)){if(e=t.stateNode,n=t.memoizedProps,a=null,null!==(r=ar))switch(r.tag){case 27:case 5:a=r.memoizedProps}e[Fe]=t,(e=!!(e.nodeValue===n||null!==a&&!0===a.suppressHydrationWarning||Zu(e.nodeValue,n)))||lr(t)}else(e=ad(e).createTextNode(a))[Fe]=t,t.stateNode=e}return nc(t),null;case 13:if(a=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(r=hr(t),null!==a&&null!==a.dehydrated){if(null===e){if(!r)throw Error(o(318));if(!(r=null!==(r=t.memoizedState)?r.dehydrated:null))throw Error(o(317));r[Fe]=t}else pr(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;nc(t),r=!1}else r=fr(),null!==e&&null!==e.memoizedState&&(e.memoizedState.hydrationErrors=r),r=!0;if(!r)return 256&t.flags?(li(t),t):(li(t),null)}if(li(t),0!==(128&t.flags))return t.lanes=n,t;if(n=null!==a,e=null!==e&&null!==e.memoizedState,n){r=null,null!==(a=t.child).alternate&&null!==a.alternate.memoizedState&&null!==a.alternate.memoizedState.cachePool&&(r=a.alternate.memoizedState.cachePool.pool);var s=null;null!==a.memoizedState&&null!==a.memoizedState.cachePool&&(s=a.memoizedState.cachePool.pool),s!==r&&(a.flags|=2048)}return n!==e&&n&&(t.child.flags|=8192),ec(t,t.updateQueue),nc(t),null;case 4:return Y(),null===e&&Wu(t.stateNode.containerInfo),nc(t),null;case 10:return xr(t.type),nc(t),null;case 19:if(W(ui),null===(r=t.memoizedState))return nc(t),null;if(a=0!==(128&t.flags),null===(s=r.rendering))if(a)tc(r,!1);else{if(0!==hl||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(s=di(e))){for(t.flags|=128,tc(r,!1),e=s.updateQueue,t.updateQueue=e,ec(t,e),t.subtreeFlags=0,e=n,n=t.child;null!==n;)Ba(n,e),n=n.sibling;return V(ui,1&ui.current|2),t.child}e=e.sibling}null!==r.tail&&te()>kl&&(t.flags|=128,a=!0,tc(r,!1),t.lanes=4194304)}else{if(!a)if(null!==(e=di(s))){if(t.flags|=128,a=!0,e=e.updateQueue,t.updateQueue=e,ec(t,e),tc(r,!0),null===r.tail&&"hidden"===r.tailMode&&!s.alternate&&!sr)return nc(t),null}else 2*te()-r.renderingStartTime>kl&&536870912!==n&&(t.flags|=128,a=!0,tc(r,!1),t.lanes=4194304);r.isBackwards?(s.sibling=t.child,t.child=s):(null!==(e=r.last)?e.sibling=s:t.child=s,r.last=s)}return null!==r.tail?(t=r.tail,r.rendering=t,r.tail=t.sibling,r.renderingStartTime=te(),t.sibling=null,e=ui.current,V(ui,a?1&e|2:1&e),t):(nc(t),null);case 22:case 23:return li(t),ys(),a=null!==t.memoizedState,null!==e?null!==e.memoizedState!==a&&(t.flags|=8192):a&&(t.flags|=8192),a?0!==(536870912&n)&&0===(128&t.flags)&&(nc(t),6&t.subtreeFlags&&(t.flags|=8192)):nc(t),null!==(n=t.updateQueue)&&ec(t,n.retryQueue),n=null,null!==e&&null!==e.memoizedState&&null!==e.memoizedState.cachePool&&(n=e.memoizedState.cachePool.pool),a=null,null!==t.memoizedState&&null!==t.memoizedState.cachePool&&(a=t.memoizedState.cachePool.pool),a!==n&&(t.flags|=2048),null!==e&&W(Vr),null;case 24:return n=null,null!==e&&(n=e.memoizedState.cache),t.memoizedState.cache!==n&&(t.flags|=2048),xr(Fr),nc(t),null;case 25:case 30:return null}throw Error(o(156,t.tag))}function rc(e,t){switch(nr(t),t.tag){case 1:return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return xr(Fr),Y(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 26:case 27:case 5:return X(t),null;case 13:if(li(t),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(o(340));pr()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return W(ui),null;case 4:return Y(),null;case 10:return xr(t.type),null;case 22:case 23:return li(t),ys(),null!==e&&W(Vr),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 24:return xr(Fr),null;default:return null}}function sc(e,t){switch(nr(t),t.tag){case 3:xr(Fr),Y();break;case 26:case 27:case 5:X(t);break;case 4:Y();break;case 13:li(t);break;case 19:W(ui);break;case 10:xr(t.type);break;case 22:case 23:li(t),ys(),null!==e&&W(Vr);break;case 24:xr(Fr)}}function oc(e,t){try{var n=t.updateQueue,a=null!==n?n.lastEffect:null;if(null!==a){var r=a.next;n=r;do{if((n.tag&e)===e){a=void 0;var s=n.create,o=n.inst;a=s(),o.destroy=a}n=n.next}while(n!==r)}}catch(i){uu(t,t.return,i)}}function ic(e,t,n){try{var a=t.updateQueue,r=null!==a?a.lastEffect:null;if(null!==r){var s=r.next;a=s;do{if((a.tag&e)===e){var o=a.inst,i=o.destroy;if(void 0!==i){o.destroy=void 0,r=t;var c=n,l=i;try{l()}catch(u){uu(r,c,u)}}}a=a.next}while(a!==s)}}catch(u){uu(t,t.return,u)}}function cc(e){var t=e.updateQueue;if(null!==t){var n=e.stateNode;try{hs(t,n)}catch(a){uu(e,e.return,a)}}}function lc(e,t,n){n.props=gi(e.type,e.memoizedProps),n.state=e.memoizedState;try{n.componentWillUnmount()}catch(a){uu(e,t,a)}}function uc(e,t){try{var n=e.ref;if(null!==n){switch(e.tag){case 26:case 27:case 5:var a=e.stateNode;break;default:a=e.stateNode}"function"===typeof n?e.refCleanup=n(a):n.current=a}}catch(r){uu(e,t,r)}}function dc(e,t){var n=e.ref,a=e.refCleanup;if(null!==n)if("function"===typeof a)try{a()}catch(r){uu(e,t,r)}finally{e.refCleanup=null,null!=(e=e.alternate)&&(e.refCleanup=null)}else if("function"===typeof n)try{n(null)}catch(s){uu(e,t,s)}else n.current=null}function hc(e){var t=e.type,n=e.memoizedProps,a=e.stateNode;try{e:switch(t){case"button":case"input":case"select":case"textarea":n.autoFocus&&a.focus();break e;case"img":n.src?a.src=n.src:n.srcSet&&(a.srcset=n.srcSet)}}catch(r){uu(e,e.return,r)}}function pc(e,t,n){try{var a=e.stateNode;!function(e,t,n,a){switch(t){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"input":var r=null,s=null,i=null,c=null,l=null,u=null,d=null;for(f in n){var h=n[f];if(n.hasOwnProperty(f)&&null!=h)switch(f){case"checked":case"value":break;case"defaultValue":l=h;default:a.hasOwnProperty(f)||$u(e,t,f,null,a,h)}}for(var p in a){var f=a[p];if(h=n[p],a.hasOwnProperty(p)&&(null!=f||null!=h))switch(p){case"type":s=f;break;case"name":r=f;break;case"checked":u=f;break;case"defaultChecked":d=f;break;case"value":i=f;break;case"defaultValue":c=f;break;case"children":case"dangerouslySetInnerHTML":if(null!=f)throw Error(o(137,t));break;default:f!==h&&$u(e,t,p,f,a,h)}}return void gt(e,i,c,l,u,d,s,r);case"select":for(s in f=i=c=p=null,n)if(l=n[s],n.hasOwnProperty(s)&&null!=l)switch(s){case"value":break;case"multiple":f=l;default:a.hasOwnProperty(s)||$u(e,t,s,null,a,l)}for(r in a)if(s=a[r],l=n[r],a.hasOwnProperty(r)&&(null!=s||null!=l))switch(r){case"value":p=s;break;case"defaultValue":c=s;break;case"multiple":i=s;default:s!==l&&$u(e,t,r,s,a,l)}return t=c,n=i,a=f,void(null!=p?vt(e,!!n,p,!1):!!a!==!!n&&(null!=t?vt(e,!!n,t,!0):vt(e,!!n,n?[]:"",!1)));case"textarea":for(c in f=p=null,n)if(r=n[c],n.hasOwnProperty(c)&&null!=r&&!a.hasOwnProperty(c))switch(c){case"value":case"children":break;default:$u(e,t,c,null,a,r)}for(i in a)if(r=a[i],s=n[i],a.hasOwnProperty(i)&&(null!=r||null!=s))switch(i){case"value":p=r;break;case"defaultValue":f=r;break;case"children":break;case"dangerouslySetInnerHTML":if(null!=r)throw Error(o(91));break;default:r!==s&&$u(e,t,i,r,a,s)}return void xt(e,p,f);case"option":for(var m in n)if(p=n[m],n.hasOwnProperty(m)&&null!=p&&!a.hasOwnProperty(m))if("selected"===m)e.selected=!1;else $u(e,t,m,null,a,p);for(l in a)if(p=a[l],f=n[l],a.hasOwnProperty(l)&&p!==f&&(null!=p||null!=f))if("selected"===l)e.selected=p&&"function"!==typeof p&&"symbol"!==typeof p;else $u(e,t,l,p,a,f);return;case"img":case"link":case"area":case"base":case"br":case"col":case"embed":case"hr":case"keygen":case"meta":case"param":case"source":case"track":case"wbr":case"menuitem":for(var g in n)p=n[g],n.hasOwnProperty(g)&&null!=p&&!a.hasOwnProperty(g)&&$u(e,t,g,null,a,p);for(u in a)if(p=a[u],f=n[u],a.hasOwnProperty(u)&&p!==f&&(null!=p||null!=f))switch(u){case"children":case"dangerouslySetInnerHTML":if(null!=p)throw Error(o(137,t));break;default:$u(e,t,u,p,a,f)}return;default:if(It(t)){for(var y in n)p=n[y],n.hasOwnProperty(y)&&void 0!==p&&!a.hasOwnProperty(y)&&Ju(e,t,y,void 0,a,p);for(d in a)p=a[d],f=n[d],!a.hasOwnProperty(d)||p===f||void 0===p&&void 0===f||Ju(e,t,d,p,a,f);return}}for(var b in n)p=n[b],n.hasOwnProperty(b)&&null!=p&&!a.hasOwnProperty(b)&&$u(e,t,b,null,a,p);for(h in a)p=a[h],f=n[h],!a.hasOwnProperty(h)||p===f||null==p&&null==f||$u(e,t,h,p,a,f)}(a,e.type,n,t),a[De]=t}catch(r){uu(e,e.return,r)}}function fc(e){return 5===e.tag||3===e.tag||26===e.tag||27===e.tag&&pd(e.type)||4===e.tag}function mc(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||fc(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(27===e.tag&&pd(e.type))continue e;if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function gc(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?(9===n.nodeType?n.body:"HTML"===n.nodeName?n.ownerDocument.body:n).insertBefore(e,t):((t=9===n.nodeType?n.body:"HTML"===n.nodeName?n.ownerDocument.body:n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=Qu));else if(4!==a&&(27===a&&pd(e.type)&&(n=e.stateNode,t=null),null!==(e=e.child)))for(gc(e,t,n),e=e.sibling;null!==e;)gc(e,t,n),e=e.sibling}function yc(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==a&&(27===a&&pd(e.type)&&(n=e.stateNode),null!==(e=e.child)))for(yc(e,t,n),e=e.sibling;null!==e;)yc(e,t,n),e=e.sibling}function bc(e){var t=e.stateNode,n=e.memoizedProps;try{for(var a=e.type,r=t.attributes;r.length;)t.removeAttributeNode(r[0]);ed(t,a,n),t[Fe]=e,t[De]=n}catch(s){uu(e,e.return,s)}}var vc=!1,xc=!1,wc=!1,kc="function"===typeof WeakSet?WeakSet:Set,Sc=null;function Tc(e,t,n){var a=n.flags;switch(n.tag){case 0:case 11:case 15:Lc(e,n),4&a&&oc(5,n);break;case 1:if(Lc(e,n),4&a)if(e=n.stateNode,null===t)try{e.componentDidMount()}catch(o){uu(n,n.return,o)}else{var r=gi(n.type,t.memoizedProps);t=t.memoizedState;try{e.componentDidUpdate(r,t,e.__reactInternalSnapshotBeforeUpdate)}catch(i){uu(n,n.return,i)}}64&a&&cc(n),512&a&&uc(n,n.return);break;case 3:if(Lc(e,n),64&a&&null!==(e=n.updateQueue)){if(t=null,null!==n.child)switch(n.child.tag){case 27:case 5:case 1:t=n.child.stateNode}try{hs(e,t)}catch(o){uu(n,n.return,o)}}break;case 27:null===t&&4&a&&bc(n);case 26:case 5:Lc(e,n),null===t&&4&a&&hc(n),512&a&&uc(n,n.return);break;case 12:Lc(e,n);break;case 13:Lc(e,n),4&a&&_c(e,n),64&a&&(null!==(e=n.memoizedState)&&(null!==(e=e.dehydrated)&&function(e,t){var n=e.ownerDocument;if("$?"!==e.data||"complete"===n.readyState)t();else{var a=function(){t(),n.removeEventListener("DOMContentLoaded",a)};n.addEventListener("DOMContentLoaded",a),e._reactRetry=a}}(e,n=fu.bind(null,n))));break;case 22:if(!(a=null!==n.memoizedState||vc)){t=null!==t&&null!==t.memoizedState||xc,r=vc;var s=xc;vc=a,(xc=t)&&!s?Bc(e,n,0!==(8772&n.subtreeFlags)):Lc(e,n),vc=r,xc=s}break;case 30:break;default:Lc(e,n)}}function Nc(e){var t=e.alternate;null!==t&&(e.alternate=null,Nc(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&We(t)),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}var Ic=null,Cc=!1;function Ec(e,t,n){for(n=n.child;null!==n;)Ac(e,t,n),n=n.sibling}function Ac(e,t,n){if(de&&"function"===typeof de.onCommitFiberUnmount)try{de.onCommitFiberUnmount(ue,n)}catch(s){}switch(n.tag){case 26:xc||dc(n,t),Ec(e,t,n),n.memoizedState?n.memoizedState.count--:n.stateNode&&(n=n.stateNode).parentNode.removeChild(n);break;case 27:xc||dc(n,t);var a=Ic,r=Cc;pd(n.type)&&(Ic=n.stateNode,Cc=!1),Ec(e,t,n),wd(n.stateNode),Ic=a,Cc=r;break;case 5:xc||dc(n,t);case 6:if(a=Ic,r=Cc,Ic=null,Ec(e,t,n),Cc=r,null!==(Ic=a))if(Cc)try{(9===Ic.nodeType?Ic.body:"HTML"===Ic.nodeName?Ic.ownerDocument.body:Ic).removeChild(n.stateNode)}catch(o){uu(n,t,o)}else try{Ic.removeChild(n.stateNode)}catch(o){uu(n,t,o)}break;case 18:null!==Ic&&(Cc?(fd(9===(e=Ic).nodeType?e.body:"HTML"===e.nodeName?e.ownerDocument.body:e,n.stateNode),Ch(e)):fd(Ic,n.stateNode));break;case 4:a=Ic,r=Cc,Ic=n.stateNode.containerInfo,Cc=!0,Ec(e,t,n),Ic=a,Cc=r;break;case 0:case 11:case 14:case 15:xc||ic(2,n,t),xc||ic(4,n,t),Ec(e,t,n);break;case 1:xc||(dc(n,t),"function"===typeof(a=n.stateNode).componentWillUnmount&&lc(n,t,a)),Ec(e,t,n);break;case 21:Ec(e,t,n);break;case 22:xc=(a=xc)||null!==n.memoizedState,Ec(e,t,n),xc=a;break;default:Ec(e,t,n)}}function _c(e,t){if(null===t.memoizedState&&(null!==(e=t.alternate)&&(null!==(e=e.memoizedState)&&null!==(e=e.dehydrated))))try{Ch(e)}catch(n){uu(t,t.return,n)}}function Rc(e,t){var n=function(e){switch(e.tag){case 13:case 19:var t=e.stateNode;return null===t&&(t=e.stateNode=new kc),t;case 22:return null===(t=(e=e.stateNode)._retryCache)&&(t=e._retryCache=new kc),t;default:throw Error(o(435,e.tag))}}(e);t.forEach(function(t){var a=mu.bind(null,e,t);n.has(t)||(n.add(t),t.then(a,a))})}function Fc(e,t){var n=t.deletions;if(null!==n)for(var a=0;a<n.length;a++){var r=n[a],s=e,i=t,c=i;e:for(;null!==c;){switch(c.tag){case 27:if(pd(c.type)){Ic=c.stateNode,Cc=!1;break e}break;case 5:Ic=c.stateNode,Cc=!1;break e;case 3:case 4:Ic=c.stateNode.containerInfo,Cc=!0;break e}c=c.return}if(null===Ic)throw Error(o(160));Ac(s,i,r),Ic=null,Cc=!1,null!==(s=r.alternate)&&(s.return=null),r.return=null}if(13878&t.subtreeFlags)for(t=t.child;null!==t;)Oc(t,e),t=t.sibling}var Dc=null;function Oc(e,t){var n=e.alternate,a=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:Fc(t,e),Mc(e),4&a&&(ic(3,e,e.return),oc(3,e),ic(5,e,e.return));break;case 1:Fc(t,e),Mc(e),512&a&&(xc||null===n||dc(n,n.return)),64&a&&vc&&(null!==(e=e.updateQueue)&&(null!==(a=e.callbacks)&&(n=e.shared.hiddenCallbacks,e.shared.hiddenCallbacks=null===n?a:n.concat(a))));break;case 26:var r=Dc;if(Fc(t,e),Mc(e),512&a&&(xc||null===n||dc(n,n.return)),4&a){var s=null!==n?n.memoizedState:null;if(a=e.memoizedState,null===n)if(null===a)if(null===e.stateNode){e:{a=e.type,n=e.memoizedProps,r=r.ownerDocument||r;t:switch(a){case"title":(!(s=r.getElementsByTagName("title")[0])||s[Be]||s[Fe]||"http://www.w3.org/2000/svg"===s.namespaceURI||s.hasAttribute("itemprop"))&&(s=r.createElement(a),r.head.insertBefore(s,r.querySelector("head > title"))),ed(s,a,n),s[Fe]=e,je(s),a=s;break e;case"link":var i=Bd("link","href",r).get(a+(n.href||""));if(i)for(var c=0;c<i.length;c++)if((s=i[c]).getAttribute("href")===(null==n.href||""===n.href?null:n.href)&&s.getAttribute("rel")===(null==n.rel?null:n.rel)&&s.getAttribute("title")===(null==n.title?null:n.title)&&s.getAttribute("crossorigin")===(null==n.crossOrigin?null:n.crossOrigin)){i.splice(c,1);break t}ed(s=r.createElement(a),a,n),r.head.appendChild(s);break;case"meta":if(i=Bd("meta","content",r).get(a+(n.content||"")))for(c=0;c<i.length;c++)if((s=i[c]).getAttribute("content")===(null==n.content?null:""+n.content)&&s.getAttribute("name")===(null==n.name?null:n.name)&&s.getAttribute("property")===(null==n.property?null:n.property)&&s.getAttribute("http-equiv")===(null==n.httpEquiv?null:n.httpEquiv)&&s.getAttribute("charset")===(null==n.charSet?null:n.charSet)){i.splice(c,1);break t}ed(s=r.createElement(a),a,n),r.head.appendChild(s);break;default:throw Error(o(468,a))}s[Fe]=e,je(s),a=s}e.stateNode=a}else Wd(r,e.type,e.stateNode);else e.stateNode=Od(r,a,e.memoizedProps);else s!==a?(null===s?null!==n.stateNode&&(n=n.stateNode).parentNode.removeChild(n):s.count--,null===a?Wd(r,e.type,e.stateNode):Od(r,a,e.memoizedProps)):null===a&&null!==e.stateNode&&pc(e,e.memoizedProps,n.memoizedProps)}break;case 27:Fc(t,e),Mc(e),512&a&&(xc||null===n||dc(n,n.return)),null!==n&&4&a&&pc(e,e.memoizedProps,n.memoizedProps);break;case 5:if(Fc(t,e),Mc(e),512&a&&(xc||null===n||dc(n,n.return)),32&e.flags){r=e.stateNode;try{kt(r,"")}catch(f){uu(e,e.return,f)}}4&a&&null!=e.stateNode&&pc(e,r=e.memoizedProps,null!==n?n.memoizedProps:r),1024&a&&(wc=!0);break;case 6:if(Fc(t,e),Mc(e),4&a){if(null===e.stateNode)throw Error(o(162));a=e.memoizedProps,n=e.stateNode;try{n.nodeValue=a}catch(f){uu(e,e.return,f)}}break;case 3:if(Pd=null,r=Dc,Dc=Td(t.containerInfo),Fc(t,e),Dc=r,Mc(e),4&a&&null!==n&&n.memoizedState.isDehydrated)try{Ch(t.containerInfo)}catch(f){uu(e,e.return,f)}wc&&(wc=!1,zc(e));break;case 4:a=Dc,Dc=Td(e.stateNode.containerInfo),Fc(t,e),Mc(e),Dc=a;break;case 12:default:Fc(t,e),Mc(e);break;case 13:Fc(t,e),Mc(e),8192&e.child.flags&&null!==e.memoizedState!==(null!==n&&null!==n.memoizedState)&&(wl=te()),4&a&&(null!==(a=e.updateQueue)&&(e.updateQueue=null,Rc(e,a)));break;case 22:r=null!==e.memoizedState;var l=null!==n&&null!==n.memoizedState,u=vc,d=xc;if(vc=u||r,xc=d||l,Fc(t,e),xc=d,vc=u,Mc(e),8192&a)e:for(t=e.stateNode,t._visibility=r?-2&t._visibility:1|t._visibility,r&&(null===n||l||vc||xc||Pc(e)),n=null,t=e;;){if(5===t.tag||26===t.tag){if(null===n){l=n=t;try{if(s=l.stateNode,r)"function"===typeof(i=s.style).setProperty?i.setProperty("display","none","important"):i.display="none";else{c=l.stateNode;var h=l.memoizedProps.style,p=void 0!==h&&null!==h&&h.hasOwnProperty("display")?h.display:null;c.style.display=null==p||"boolean"===typeof p?"":(""+p).trim()}}catch(f){uu(l,l.return,f)}}}else if(6===t.tag){if(null===n){l=t;try{l.stateNode.nodeValue=r?"":l.memoizedProps}catch(f){uu(l,l.return,f)}}}else if((22!==t.tag&&23!==t.tag||null===t.memoizedState||t===e)&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break e;for(;null===t.sibling;){if(null===t.return||t.return===e)break e;n===t&&(n=null),t=t.return}n===t&&(n=null),t.sibling.return=t.return,t=t.sibling}4&a&&(null!==(a=e.updateQueue)&&(null!==(n=a.retryQueue)&&(a.retryQueue=null,Rc(e,n))));break;case 19:Fc(t,e),Mc(e),4&a&&(null!==(a=e.updateQueue)&&(e.updateQueue=null,Rc(e,a)));case 30:case 21:}}function Mc(e){var t=e.flags;if(2&t){try{for(var n,a=e.return;null!==a;){if(fc(a)){n=a;break}a=a.return}if(null==n)throw Error(o(160));switch(n.tag){case 27:var r=n.stateNode;yc(e,mc(e),r);break;case 5:var s=n.stateNode;32&n.flags&&(kt(s,""),n.flags&=-33),yc(e,mc(e),s);break;case 3:case 4:var i=n.stateNode.containerInfo;gc(e,mc(e),i);break;default:throw Error(o(161))}}catch(c){uu(e,e.return,c)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function zc(e){if(1024&e.subtreeFlags)for(e=e.child;null!==e;){var t=e;zc(t),5===t.tag&&1024&t.flags&&t.stateNode.reset(),e=e.sibling}}function Lc(e,t){if(8772&t.subtreeFlags)for(t=t.child;null!==t;)Tc(e,t.alternate,t),t=t.sibling}function Pc(e){for(e=e.child;null!==e;){var t=e;switch(t.tag){case 0:case 11:case 14:case 15:ic(4,t,t.return),Pc(t);break;case 1:dc(t,t.return);var n=t.stateNode;"function"===typeof n.componentWillUnmount&&lc(t,t.return,n),Pc(t);break;case 27:wd(t.stateNode);case 26:case 5:dc(t,t.return),Pc(t);break;case 22:null===t.memoizedState&&Pc(t);break;default:Pc(t)}e=e.sibling}}function Bc(e,t,n){for(n=n&&0!==(8772&t.subtreeFlags),t=t.child;null!==t;){var a=t.alternate,r=e,s=t,o=s.flags;switch(s.tag){case 0:case 11:case 15:Bc(r,s,n),oc(4,s);break;case 1:if(Bc(r,s,n),"function"===typeof(r=(a=s).stateNode).componentDidMount)try{r.componentDidMount()}catch(l){uu(a,a.return,l)}if(null!==(r=(a=s).updateQueue)){var i=a.stateNode;try{var c=r.shared.hiddenCallbacks;if(null!==c)for(r.shared.hiddenCallbacks=null,r=0;r<c.length;r++)ds(c[r],i)}catch(l){uu(a,a.return,l)}}n&&64&o&&cc(s),uc(s,s.return);break;case 27:bc(s);case 26:case 5:Bc(r,s,n),n&&null===a&&4&o&&hc(s),uc(s,s.return);break;case 12:Bc(r,s,n);break;case 13:Bc(r,s,n),n&&4&o&&_c(r,s);break;case 22:null===s.memoizedState&&Bc(r,s,n),uc(s,s.return);break;case 30:break;default:Bc(r,s,n)}t=t.sibling}}function Wc(e,t){var n=null;null!==e&&null!==e.memoizedState&&null!==e.memoizedState.cachePool&&(n=e.memoizedState.cachePool.pool),e=null,null!==t.memoizedState&&null!==t.memoizedState.cachePool&&(e=t.memoizedState.cachePool.pool),e!==n&&(null!=e&&e.refCount++,null!=n&&Or(n))}function Vc(e,t){e=null,null!==t.alternate&&(e=t.alternate.memoizedState.cache),(t=t.memoizedState.cache)!==e&&(t.refCount++,null!=e&&Or(e))}function Uc(e,t,n,a){if(10256&t.subtreeFlags)for(t=t.child;null!==t;)Gc(e,t,n,a),t=t.sibling}function Gc(e,t,n,a){var r=t.flags;switch(t.tag){case 0:case 11:case 15:Uc(e,t,n,a),2048&r&&oc(9,t);break;case 1:case 13:default:Uc(e,t,n,a);break;case 3:Uc(e,t,n,a),2048&r&&(e=null,null!==t.alternate&&(e=t.alternate.memoizedState.cache),(t=t.memoizedState.cache)!==e&&(t.refCount++,null!=e&&Or(e)));break;case 12:if(2048&r){Uc(e,t,n,a),e=t.stateNode;try{var s=t.memoizedProps,o=s.id,i=s.onPostCommit;"function"===typeof i&&i(o,null===t.alternate?"mount":"update",e.passiveEffectDuration,-0)}catch(c){uu(t,t.return,c)}}else Uc(e,t,n,a);break;case 23:break;case 22:s=t.stateNode,o=t.alternate,null!==t.memoizedState?2&s._visibility?Uc(e,t,n,a):jc(e,t):2&s._visibility?Uc(e,t,n,a):(s._visibility|=2,Hc(e,t,n,a,0!==(10256&t.subtreeFlags))),2048&r&&Wc(o,t);break;case 24:Uc(e,t,n,a),2048&r&&Vc(t.alternate,t)}}function Hc(e,t,n,a,r){for(r=r&&0!==(10256&t.subtreeFlags),t=t.child;null!==t;){var s=e,o=t,i=n,c=a,l=o.flags;switch(o.tag){case 0:case 11:case 15:Hc(s,o,i,c,r),oc(8,o);break;case 23:break;case 22:var u=o.stateNode;null!==o.memoizedState?2&u._visibility?Hc(s,o,i,c,r):jc(s,o):(u._visibility|=2,Hc(s,o,i,c,r)),r&&2048&l&&Wc(o.alternate,o);break;case 24:Hc(s,o,i,c,r),r&&2048&l&&Vc(o.alternate,o);break;default:Hc(s,o,i,c,r)}t=t.sibling}}function jc(e,t){if(10256&t.subtreeFlags)for(t=t.child;null!==t;){var n=e,a=t,r=a.flags;switch(a.tag){case 22:jc(n,a),2048&r&&Wc(a.alternate,a);break;case 24:jc(n,a),2048&r&&Vc(a.alternate,a);break;default:jc(n,a)}t=t.sibling}}var qc=8192;function Yc(e){if(e.subtreeFlags&qc)for(e=e.child;null!==e;)Kc(e),e=e.sibling}function Kc(e){switch(e.tag){case 26:Yc(e),e.flags&qc&&null!==e.memoizedState&&function(e,t,n){if(null===Ud)throw Error(o(475));var a=Ud;if("stylesheet"===t.type&&("string"!==typeof n.media||!1!==matchMedia(n.media).matches)&&0===(4&t.state.loading)){if(null===t.instance){var r=Ad(n.href),s=e.querySelector(_d(r));if(s)return null!==(e=s._p)&&"object"===typeof e&&"function"===typeof e.then&&(a.count++,a=Hd.bind(a),e.then(a,a)),t.state.loading|=4,t.instance=s,void je(s);s=e.ownerDocument||e,n=Rd(n),(r=kd.get(r))&&zd(n,r),je(s=s.createElement("link"));var i=s;i._p=new Promise(function(e,t){i.onload=e,i.onerror=t}),ed(s,"link",n),t.instance=s}null===a.stylesheets&&(a.stylesheets=new Map),a.stylesheets.set(t,e),(e=t.state.preload)&&0===(3&t.state.loading)&&(a.count++,t=Hd.bind(a),e.addEventListener("load",t),e.addEventListener("error",t))}}(Dc,e.memoizedState,e.memoizedProps);break;case 5:default:Yc(e);break;case 3:case 4:var t=Dc;Dc=Td(e.stateNode.containerInfo),Yc(e),Dc=t;break;case 22:null===e.memoizedState&&(null!==(t=e.alternate)&&null!==t.memoizedState?(t=qc,qc=16777216,Yc(e),qc=t):Yc(e))}}function Xc(e){var t=e.alternate;if(null!==t&&null!==(e=t.child)){t.child=null;do{t=e.sibling,e.sibling=null,e=t}while(null!==e)}}function Zc(e){var t=e.deletions;if(0!==(16&e.flags)){if(null!==t)for(var n=0;n<t.length;n++){var a=t[n];Sc=a,Jc(a,e)}Xc(e)}if(10256&e.subtreeFlags)for(e=e.child;null!==e;)Qc(e),e=e.sibling}function Qc(e){switch(e.tag){case 0:case 11:case 15:Zc(e),2048&e.flags&&ic(9,e,e.return);break;case 3:case 12:default:Zc(e);break;case 22:var t=e.stateNode;null!==e.memoizedState&&2&t._visibility&&(null===e.return||13!==e.return.tag)?(t._visibility&=-3,$c(e)):Zc(e)}}function $c(e){var t=e.deletions;if(0!==(16&e.flags)){if(null!==t)for(var n=0;n<t.length;n++){var a=t[n];Sc=a,Jc(a,e)}Xc(e)}for(e=e.child;null!==e;){switch((t=e).tag){case 0:case 11:case 15:ic(8,t,t.return),$c(t);break;case 22:2&(n=t.stateNode)._visibility&&(n._visibility&=-3,$c(t));break;default:$c(t)}e=e.sibling}}function Jc(e,t){for(;null!==Sc;){var n=Sc;switch(n.tag){case 0:case 11:case 15:ic(8,n,t);break;case 23:case 22:if(null!==n.memoizedState&&null!==n.memoizedState.cachePool){var a=n.memoizedState.cachePool.pool;null!=a&&a.refCount++}break;case 24:Or(n.memoizedState.cache)}if(null!==(a=n.child))a.return=n,Sc=a;else e:for(n=e;null!==Sc;){var r=(a=Sc).sibling,s=a.return;if(Nc(a),a===n){Sc=null;break e}if(null!==r){r.return=s,Sc=r;break e}Sc=s}}}var el={getCacheForType:function(e){var t=Ir(Fr),n=t.data.get(e);return void 0===n&&(n=e(),t.data.set(e,n)),n}},tl="function"===typeof WeakMap?WeakMap:Map,nl=0,al=null,rl=null,sl=0,ol=0,il=null,cl=!1,ll=!1,ul=!1,dl=0,hl=0,pl=0,fl=0,ml=0,gl=0,yl=0,bl=null,vl=null,xl=!1,wl=0,kl=1/0,Sl=null,Tl=null,Nl=0,Il=null,Cl=null,El=0,Al=0,_l=null,Rl=null,Fl=0,Dl=null;function Ol(){if(0!==(2&nl)&&0!==sl)return sl&-sl;if(null!==O.T){return 0!==Lr?Lr:Au()}return _e()}function Ml(){0===gl&&(gl=0===(536870912&sl)||sr?ke():536870912);var e=ri.current;return null!==e&&(e.flags|=32),gl}function zl(e,t,n){(e!==al||2!==ol&&9!==ol)&&null===e.cancelPendingCommit||(Gl(e,0),Wl(e,sl,gl,!1)),Ne(e,n),0!==(2&nl)&&e===al||(e===al&&(0===(2&nl)&&(fl|=n),4===hl&&Wl(e,sl,gl,!1)),ku(e))}function Ll(e,t,n){if(0!==(6&nl))throw Error(o(327));for(var a=!n&&0===(124&t)&&0===(t&e.expiredLanes)||xe(e,t),r=a?function(e,t){var n=nl;nl|=2;var a=jl(),r=ql();al!==e||sl!==t?(Sl=null,kl=te()+500,Gl(e,t)):ll=xe(e,t);e:for(;;)try{if(0!==ol&&null!==rl){t=rl;var s=il;t:switch(ol){case 1:ol=0,il=null,Jl(e,t,s,1);break;case 2:case 9:if(Xr(s)){ol=0,il=null,$l(t);break}t=function(){2!==ol&&9!==ol||al!==e||(ol=7),ku(e)},s.then(t,t);break e;case 3:ol=7;break e;case 4:ol=5;break e;case 7:Xr(s)?(ol=0,il=null,$l(t)):(ol=0,il=null,Jl(e,t,s,7));break;case 5:var i=null;switch(rl.tag){case 26:i=rl.memoizedState;case 5:case 27:var c=rl;if(!i||Vd(i)){ol=0,il=null;var l=c.sibling;if(null!==l)rl=l;else{var u=c.return;null!==u?(rl=u,eu(u)):rl=null}break t}}ol=0,il=null,Jl(e,t,s,5);break;case 6:ol=0,il=null,Jl(e,t,s,6);break;case 8:Ul(),hl=6;break e;default:throw Error(o(462))}}Zl();break}catch(d){Hl(e,d)}return br=yr=null,O.H=a,O.A=r,nl=n,null!==rl?0:(al=null,sl=0,Ea(),hl)}(e,t):Kl(e,t,!0),s=a;;){if(0===r){ll&&!a&&Wl(e,t,0,!1);break}if(n=e.current.alternate,!s||Bl(n)){if(2===r){if(s=t,e.errorRecoveryDisabledLanes&s)var i=0;else i=0!==(i=-536870913&e.pendingLanes)?i:536870912&i?536870912:0;if(0!==i){t=i;e:{var c=e;r=bl;var l=c.current.memoizedState.isDehydrated;if(l&&(Gl(c,i).flags|=256),2!==(i=Kl(c,i,!1))){if(ul&&!l){c.errorRecoveryDisabledLanes|=s,fl|=s,r=4;break e}s=vl,vl=r,null!==s&&(null===vl?vl=s:vl.push.apply(vl,s))}r=i}if(s=!1,2!==r)continue}}if(1===r){Gl(e,0),Wl(e,t,0,!0);break}e:{switch(a=e,s=r){case 0:case 1:throw Error(o(345));case 4:if((4194048&t)!==t)break;case 6:Wl(a,t,gl,!cl);break e;case 2:vl=null;break;case 3:case 5:break;default:throw Error(o(329))}if((62914560&t)===t&&10<(r=wl+300-te())){if(Wl(a,t,gl,!cl),0!==ve(a,0,!0))break e;a.timeoutHandle=cd(Pl.bind(null,a,n,vl,Sl,xl,t,gl,fl,yl,cl,s,2,-0,0),r)}else Pl(a,n,vl,Sl,xl,t,gl,fl,yl,cl,s,0,-0,0)}break}r=Kl(e,t,!1),s=!1}ku(e)}function Pl(e,t,n,a,r,s,i,c,l,u,d,h,p,f){if(e.timeoutHandle=-1,(8192&(h=t.subtreeFlags)||16785408===(16785408&h))&&(Ud={stylesheets:null,count:0,unsuspend:Gd},Kc(t),null!==(h=function(){if(null===Ud)throw Error(o(475));var e=Ud;return e.stylesheets&&0===e.count&&qd(e,e.stylesheets),0<e.count?function(t){var n=setTimeout(function(){if(e.stylesheets&&qd(e,e.stylesheets),e.unsuspend){var t=e.unsuspend;e.unsuspend=null,t()}},6e4);return e.unsuspend=t,function(){e.unsuspend=null,clearTimeout(n)}}:null}())))return e.cancelPendingCommit=h(nu.bind(null,e,t,s,n,a,r,i,c,l,d,1,p,f)),void Wl(e,s,i,!u);nu(e,t,s,n,a,r,i,c,l)}function Bl(e){for(var t=e;;){var n=t.tag;if((0===n||11===n||15===n)&&16384&t.flags&&(null!==(n=t.updateQueue)&&null!==(n=n.stores)))for(var a=0;a<n.length;a++){var r=n[a],s=r.getSnapshot;r=r.value;try{if(!Xn(s(),r))return!1}catch(o){return!1}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}function Wl(e,t,n,a){t&=~ml,t&=~fl,e.suspendedLanes|=t,e.pingedLanes&=~t,a&&(e.warmLanes|=t),a=e.expirationTimes;for(var r=t;0<r;){var s=31-pe(r),o=1<<s;a[s]=-1,r&=~o}0!==n&&Ie(e,n,t)}function Vl(){return 0!==(6&nl)||(Su(0,!1),!1)}function Ul(){if(null!==rl){if(0===ol)var e=rl.return;else br=yr=null,Ls(e=rl),Xo=null,Zo=0,e=rl;for(;null!==e;)sc(e.alternate,e),e=e.return;rl=null}}function Gl(e,t){var n=e.timeoutHandle;-1!==n&&(e.timeoutHandle=-1,ld(n)),null!==(n=e.cancelPendingCommit)&&(e.cancelPendingCommit=null,n()),Ul(),al=e,rl=n=Pa(e.current,null),sl=t,ol=0,il=null,cl=!1,ll=xe(e,t),ul=!1,yl=gl=ml=fl=pl=hl=0,vl=bl=null,xl=!1,0!==(8&t)&&(t|=32&t);var a=e.entangledLanes;if(0!==a)for(e=e.entanglements,a&=t;0<a;){var r=31-pe(a),s=1<<r;t|=e[r],a&=~s}return dl=t,Ea(),n}function Hl(e,t){vs=null,O.H=jo,t===jr||t===Yr?(t=Jr(),ol=3):t===qr?(t=Jr(),ol=4):ol=t===Ii?8:null!==t&&"object"===typeof t&&"function"===typeof t.then?6:1,il=t,null===rl&&(hl=1,wi(e,Ta(t,e.current)))}function jl(){var e=O.H;return O.H=jo,null===e?jo:e}function ql(){var e=O.A;return O.A=el,e}function Yl(){hl=4,cl||(4194048&sl)!==sl&&null!==ri.current||(ll=!0),0===(134217727&pl)&&0===(134217727&fl)||null===al||Wl(al,sl,gl,!1)}function Kl(e,t,n){var a=nl;nl|=2;var r=jl(),s=ql();al===e&&sl===t||(Sl=null,Gl(e,t)),t=!1;var o=hl;e:for(;;)try{if(0!==ol&&null!==rl){var i=rl,c=il;switch(ol){case 8:Ul(),o=6;break e;case 3:case 2:case 9:case 6:null===ri.current&&(t=!0);var l=ol;if(ol=0,il=null,Jl(e,i,c,l),n&&ll){o=0;break e}break;default:l=ol,ol=0,il=null,Jl(e,i,c,l)}}Xl(),o=hl;break}catch(u){Hl(e,u)}return t&&e.shellSuspendCounter++,br=yr=null,nl=a,O.H=r,O.A=s,null===rl&&(al=null,sl=0,Ea()),o}function Xl(){for(;null!==rl;)Ql(rl)}function Zl(){for(;null!==rl&&!J();)Ql(rl)}function Ql(e){var t=Qi(e.alternate,e,dl);e.memoizedProps=e.pendingProps,null===t?eu(e):rl=t}function $l(e){var t=e,n=t.alternate;switch(t.tag){case 15:case 0:t=zi(n,t,t.pendingProps,t.type,void 0,sl);break;case 11:t=zi(n,t,t.pendingProps,t.type.render,t.ref,sl);break;case 5:Ls(t);default:sc(n,t),t=Qi(n,t=rl=Ba(t,dl),dl)}e.memoizedProps=e.pendingProps,null===t?eu(e):rl=t}function Jl(e,t,n,a){br=yr=null,Ls(t),Xo=null,Zo=0;var r=t.return;try{if(function(e,t,n,a,r){if(n.flags|=32768,null!==a&&"object"===typeof a&&"function"===typeof a.then){if(null!==(t=n.alternate)&&Sr(t,n,r,!0),null!==(n=ri.current)){switch(n.tag){case 13:return null===si?Yl():null===n.alternate&&0===hl&&(hl=3),n.flags&=-257,n.flags|=65536,n.lanes=r,a===Kr?n.flags|=16384:(null===(t=n.updateQueue)?n.updateQueue=new Set([a]):t.add(a),du(e,a,r)),!1;case 22:return n.flags|=65536,a===Kr?n.flags|=16384:(null===(t=n.updateQueue)?(t={transitions:null,markerInstances:null,retryQueue:new Set([a])},n.updateQueue=t):null===(n=t.retryQueue)?t.retryQueue=new Set([a]):n.add(a),du(e,a,r)),!1}throw Error(o(435,n.tag))}return du(e,a,r),Yl(),!1}if(sr)return null!==(t=ri.current)?(0===(65536&t.flags)&&(t.flags|=256),t.flags|=65536,t.lanes=r,a!==cr&&mr(Ta(e=Error(o(422),{cause:a}),n))):(a!==cr&&mr(Ta(t=Error(o(423),{cause:a}),n)),(e=e.current.alternate).flags|=65536,r&=-r,e.lanes|=r,a=Ta(a,n),is(e,r=Si(e.stateNode,a,r)),4!==hl&&(hl=2)),!1;var s=Error(o(520),{cause:a});if(s=Ta(s,n),null===bl?bl=[s]:bl.push(s),4!==hl&&(hl=2),null===t)return!0;a=Ta(a,n),n=t;do{switch(n.tag){case 3:return n.flags|=65536,e=r&-r,n.lanes|=e,is(n,e=Si(n.stateNode,a,e)),!1;case 1:if(t=n.type,s=n.stateNode,0===(128&n.flags)&&("function"===typeof t.getDerivedStateFromError||null!==s&&"function"===typeof s.componentDidCatch&&(null===Tl||!Tl.has(s))))return n.flags|=65536,r&=-r,n.lanes|=r,Ni(r=Ti(r),e,n,a),is(n,r),!1}n=n.return}while(null!==n);return!1}(e,r,t,n,sl))return hl=1,wi(e,Ta(n,e.current)),void(rl=null)}catch(s){if(null!==r)throw rl=r,s;return hl=1,wi(e,Ta(n,e.current)),void(rl=null)}32768&t.flags?(sr||1===a?e=!0:ll||0!==(536870912&sl)?e=!1:(cl=e=!0,(2===a||9===a||3===a||6===a)&&(null!==(a=ri.current)&&13===a.tag&&(a.flags|=16384))),tu(t,e)):eu(t)}function eu(e){var t=e;do{if(0!==(32768&t.flags))return void tu(t,cl);e=t.return;var n=ac(t.alternate,t,dl);if(null!==n)return void(rl=n);if(null!==(t=t.sibling))return void(rl=t);rl=t=e}while(null!==t);0===hl&&(hl=5)}function tu(e,t){do{var n=rc(e.alternate,e);if(null!==n)return n.flags&=32767,void(rl=n);if(null!==(n=e.return)&&(n.flags|=32768,n.subtreeFlags=0,n.deletions=null),!t&&null!==(e=e.sibling))return void(rl=e);rl=e=n}while(null!==e);hl=6,rl=null}function nu(e,t,n,a,r,s,i,c,l){e.cancelPendingCommit=null;do{iu()}while(0!==Nl);if(0!==(6&nl))throw Error(o(327));if(null!==t){if(t===e.current)throw Error(o(177));if(s=t.lanes|t.childLanes,function(e,t,n,a,r,s){var o=e.pendingLanes;e.pendingLanes=n,e.suspendedLanes=0,e.pingedLanes=0,e.warmLanes=0,e.expiredLanes&=n,e.entangledLanes&=n,e.errorRecoveryDisabledLanes&=n,e.shellSuspendCounter=0;var i=e.entanglements,c=e.expirationTimes,l=e.hiddenUpdates;for(n=o&~n;0<n;){var u=31-pe(n),d=1<<u;i[u]=0,c[u]=-1;var h=l[u];if(null!==h)for(l[u]=null,u=0;u<h.length;u++){var p=h[u];null!==p&&(p.lane&=-536870913)}n&=~d}0!==a&&Ie(e,a,0),0!==s&&0===r&&0!==e.tag&&(e.suspendedLanes|=s&~(o&~t))}(e,n,s|=Ca,i,c,l),e===al&&(rl=al=null,sl=0),Cl=t,Il=e,El=n,Al=s,_l=r,Rl=a,0!==(10256&t.subtreeFlags)||0!==(10256&t.flags)?(e.callbackNode=null,e.callbackPriority=0,Q(se,function(){return cu(),null})):(e.callbackNode=null,e.callbackPriority=0),a=0!==(13878&t.flags),0!==(13878&t.subtreeFlags)||a){a=O.T,O.T=null,r=M.p,M.p=2,i=nl,nl|=4;try{!function(e,t){if(e=e.containerInfo,td=nh,ta(e=ea(e))){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var a=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(a&&0!==a.rangeCount){n=a.anchorNode;var r=a.anchorOffset,s=a.focusNode;a=a.focusOffset;try{n.nodeType,s.nodeType}catch(g){n=null;break e}var i=0,c=-1,l=-1,u=0,d=0,h=e,p=null;t:for(;;){for(var f;h!==n||0!==r&&3!==h.nodeType||(c=i+r),h!==s||0!==a&&3!==h.nodeType||(l=i+a),3===h.nodeType&&(i+=h.nodeValue.length),null!==(f=h.firstChild);)p=h,h=f;for(;;){if(h===e)break t;if(p===n&&++u===r&&(c=i),p===s&&++d===a&&(l=i),null!==(f=h.nextSibling))break;p=(h=p).parentNode}h=f}n=-1===c||-1===l?null:{start:c,end:l}}else n=null}n=n||{start:0,end:0}}else n=null;for(nd={focusedElem:e,selectionRange:n},nh=!1,Sc=t;null!==Sc;)if(e=(t=Sc).child,0!==(1024&t.subtreeFlags)&&null!==e)e.return=t,Sc=e;else for(;null!==Sc;){switch(s=(t=Sc).alternate,e=t.flags,t.tag){case 0:case 11:case 15:case 5:case 26:case 27:case 6:case 4:case 17:break;case 1:if(0!==(1024&e)&&null!==s){e=void 0,n=t,r=s.memoizedProps,s=s.memoizedState,a=n.stateNode;try{var m=gi(n.type,r,(n.elementType,n.type));e=a.getSnapshotBeforeUpdate(m,s),a.__reactInternalSnapshotBeforeUpdate=e}catch(y){uu(n,n.return,y)}}break;case 3:if(0!==(1024&e))if(9===(n=(e=t.stateNode.containerInfo).nodeType))md(e);else if(1===n)switch(e.nodeName){case"HEAD":case"HTML":case"BODY":md(e);break;default:e.textContent=""}break;default:if(0!==(1024&e))throw Error(o(163))}if(null!==(e=t.sibling)){e.return=t.return,Sc=e;break}Sc=t.return}}(e,t)}finally{nl=i,M.p=r,O.T=a}}Nl=1,au(),ru(),su()}}function au(){if(1===Nl){Nl=0;var e=Il,t=Cl,n=0!==(13878&t.flags);if(0!==(13878&t.subtreeFlags)||n){n=O.T,O.T=null;var a=M.p;M.p=2;var r=nl;nl|=4;try{Oc(t,e);var s=nd,o=ea(e.containerInfo),i=s.focusedElem,c=s.selectionRange;if(o!==i&&i&&i.ownerDocument&&Jn(i.ownerDocument.documentElement,i)){if(null!==c&&ta(i)){var l=c.start,u=c.end;if(void 0===u&&(u=l),"selectionStart"in i)i.selectionStart=l,i.selectionEnd=Math.min(u,i.value.length);else{var d=i.ownerDocument||document,h=d&&d.defaultView||window;if(h.getSelection){var p=h.getSelection(),f=i.textContent.length,m=Math.min(c.start,f),g=void 0===c.end?m:Math.min(c.end,f);!p.extend&&m>g&&(o=g,g=m,m=o);var y=$n(i,m),b=$n(i,g);if(y&&b&&(1!==p.rangeCount||p.anchorNode!==y.node||p.anchorOffset!==y.offset||p.focusNode!==b.node||p.focusOffset!==b.offset)){var v=d.createRange();v.setStart(y.node,y.offset),p.removeAllRanges(),m>g?(p.addRange(v),p.extend(b.node,b.offset)):(v.setEnd(b.node,b.offset),p.addRange(v))}}}}for(d=[],p=i;p=p.parentNode;)1===p.nodeType&&d.push({element:p,left:p.scrollLeft,top:p.scrollTop});for("function"===typeof i.focus&&i.focus(),i=0;i<d.length;i++){var x=d[i];x.element.scrollLeft=x.left,x.element.scrollTop=x.top}}nh=!!td,nd=td=null}finally{nl=r,M.p=a,O.T=n}}e.current=t,Nl=2}}function ru(){if(2===Nl){Nl=0;var e=Il,t=Cl,n=0!==(8772&t.flags);if(0!==(8772&t.subtreeFlags)||n){n=O.T,O.T=null;var a=M.p;M.p=2;var r=nl;nl|=4;try{Tc(e,t.alternate,t)}finally{nl=r,M.p=a,O.T=n}}Nl=3}}function su(){if(4===Nl||3===Nl){Nl=0,ee();var e=Il,t=Cl,n=El,a=Rl;0!==(10256&t.subtreeFlags)||0!==(10256&t.flags)?Nl=5:(Nl=0,Cl=Il=null,ou(e,e.pendingLanes));var r=e.pendingLanes;if(0===r&&(Tl=null),Ae(n),t=t.stateNode,de&&"function"===typeof de.onCommitFiberRoot)try{de.onCommitFiberRoot(ue,t,void 0,128===(128&t.current.flags))}catch(c){}if(null!==a){t=O.T,r=M.p,M.p=2,O.T=null;try{for(var s=e.onRecoverableError,o=0;o<a.length;o++){var i=a[o];s(i.value,{componentStack:i.stack})}}finally{O.T=t,M.p=r}}0!==(3&El)&&iu(),ku(e),r=e.pendingLanes,0!==(4194090&n)&&0!==(42&r)?e===Dl?Fl++:(Fl=0,Dl=e):Fl=0,Su(0,!1)}}function ou(e,t){0===(e.pooledCacheLanes&=t)&&(null!=(t=e.pooledCache)&&(e.pooledCache=null,Or(t)))}function iu(e){return au(),ru(),su(),cu()}function cu(){if(5!==Nl)return!1;var e=Il,t=Al;Al=0;var n=Ae(El),a=O.T,r=M.p;try{M.p=32>n?32:n,O.T=null,n=_l,_l=null;var s=Il,i=El;if(Nl=0,Cl=Il=null,El=0,0!==(6&nl))throw Error(o(331));var c=nl;if(nl|=4,Qc(s.current),Gc(s,s.current,i,n),nl=c,Su(0,!1),de&&"function"===typeof de.onPostCommitFiberRoot)try{de.onPostCommitFiberRoot(ue,s)}catch(l){}return!0}finally{M.p=r,O.T=a,ou(e,t)}}function lu(e,t,n){t=Ta(n,t),null!==(e=ss(e,t=Si(e.stateNode,t,2),2))&&(Ne(e,2),ku(e))}function uu(e,t,n){if(3===e.tag)lu(e,e,n);else for(;null!==t;){if(3===t.tag){lu(t,e,n);break}if(1===t.tag){var a=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof a.componentDidCatch&&(null===Tl||!Tl.has(a))){e=Ta(n,e),null!==(a=ss(t,n=Ti(2),2))&&(Ni(n,a,t,e),Ne(a,2),ku(a));break}}t=t.return}}function du(e,t,n){var a=e.pingCache;if(null===a){a=e.pingCache=new tl;var r=new Set;a.set(t,r)}else void 0===(r=a.get(t))&&(r=new Set,a.set(t,r));r.has(n)||(ul=!0,r.add(n),e=hu.bind(null,e,t,n),t.then(e,e))}function hu(e,t,n){var a=e.pingCache;null!==a&&a.delete(t),e.pingedLanes|=e.suspendedLanes&n,e.warmLanes&=~n,al===e&&(sl&n)===n&&(4===hl||3===hl&&(62914560&sl)===sl&&300>te()-wl?0===(2&nl)&&Gl(e,0):ml|=n,yl===sl&&(yl=0)),ku(e)}function pu(e,t){0===t&&(t=Se()),null!==(e=Ra(e,t))&&(Ne(e,t),ku(e))}function fu(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),pu(e,n)}function mu(e,t){var n=0;switch(e.tag){case 13:var a=e.stateNode,r=e.memoizedState;null!==r&&(n=r.retryLane);break;case 19:a=e.stateNode;break;case 22:a=e.stateNode._retryCache;break;default:throw Error(o(314))}null!==a&&a.delete(t),pu(e,n)}var gu=null,yu=null,bu=!1,vu=!1,xu=!1,wu=0;function ku(e){e!==yu&&null===e.next&&(null===yu?gu=yu=e:yu=yu.next=e),vu=!0,bu||(bu=!0,dd(function(){0!==(6&nl)?Q(ae,Tu):Nu()}))}function Su(e,t){if(!xu&&vu){xu=!0;do{for(var n=!1,a=gu;null!==a;){if(!t)if(0!==e){var r=a.pendingLanes;if(0===r)var s=0;else{var o=a.suspendedLanes,i=a.pingedLanes;s=(1<<31-pe(42|e)+1)-1,s=201326741&(s&=r&~(o&~i))?201326741&s|1:s?2|s:0}0!==s&&(n=!0,Eu(a,s))}else s=sl,0===(3&(s=ve(a,a===al?s:0,null!==a.cancelPendingCommit||-1!==a.timeoutHandle)))||xe(a,s)||(n=!0,Eu(a,s));a=a.next}}while(n);xu=!1}}function Tu(){Nu()}function Nu(){vu=bu=!1;var e=0;0!==wu&&(function(){var e=window.event;if(e&&"popstate"===e.type)return e!==id&&(id=e,!0);return id=null,!1}()&&(e=wu),wu=0);for(var t=te(),n=null,a=gu;null!==a;){var r=a.next,s=Iu(a,t);0===s?(a.next=null,null===n?gu=r:n.next=r,null===r&&(yu=n)):(n=a,(0!==e||0!==(3&s))&&(vu=!0)),a=r}Su(e,!1)}function Iu(e,t){for(var n=e.suspendedLanes,a=e.pingedLanes,r=e.expirationTimes,s=-62914561&e.pendingLanes;0<s;){var o=31-pe(s),i=1<<o,c=r[o];-1===c?0!==(i&n)&&0===(i&a)||(r[o]=we(i,t)):c<=t&&(e.expiredLanes|=i),s&=~i}if(n=sl,n=ve(e,e===(t=al)?n:0,null!==e.cancelPendingCommit||-1!==e.timeoutHandle),a=e.callbackNode,0===n||e===t&&(2===ol||9===ol)||null!==e.cancelPendingCommit)return null!==a&&null!==a&&$(a),e.callbackNode=null,e.callbackPriority=0;if(0===(3&n)||xe(e,n)){if((t=n&-n)===e.callbackPriority)return t;switch(null!==a&&$(a),Ae(n)){case 2:case 8:n=re;break;case 32:default:n=se;break;case 268435456:n=ie}return a=Cu.bind(null,e),n=Q(n,a),e.callbackPriority=t,e.callbackNode=n,t}return null!==a&&null!==a&&$(a),e.callbackPriority=2,e.callbackNode=null,2}function Cu(e,t){if(0!==Nl&&5!==Nl)return e.callbackNode=null,e.callbackPriority=0,null;var n=e.callbackNode;if(iu()&&e.callbackNode!==n)return null;var a=sl;return 0===(a=ve(e,e===al?a:0,null!==e.cancelPendingCommit||-1!==e.timeoutHandle))?null:(Ll(e,a,t),Iu(e,te()),null!=e.callbackNode&&e.callbackNode===n?Cu.bind(null,e):null)}function Eu(e,t){if(iu())return null;Ll(e,t,!0)}function Au(){return 0===wu&&(wu=ke()),wu}function _u(e){return null==e||"symbol"===typeof e||"boolean"===typeof e?null:"function"===typeof e?e:At(""+e)}function Ru(e,t){var n=t.ownerDocument.createElement("input");return n.name=t.name,n.value=t.value,e.id&&n.setAttribute("form",e.id),t.parentNode.insertBefore(n,t),e=new FormData(e),n.parentNode.removeChild(n),e}for(var Fu=0;Fu<wa.length;Fu++){var Du=wa[Fu];ka(Du.toLowerCase(),"on"+(Du[0].toUpperCase()+Du.slice(1)))}ka(pa,"onAnimationEnd"),ka(fa,"onAnimationIteration"),ka(ma,"onAnimationStart"),ka("dblclick","onDoubleClick"),ka("focusin","onFocus"),ka("focusout","onBlur"),ka(ga,"onTransitionRun"),ka(ya,"onTransitionStart"),ka(ba,"onTransitionCancel"),ka(va,"onTransitionEnd"),Xe("onMouseEnter",["mouseout","mouseover"]),Xe("onMouseLeave",["mouseout","mouseover"]),Xe("onPointerEnter",["pointerout","pointerover"]),Xe("onPointerLeave",["pointerout","pointerover"]),Ke("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),Ke("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),Ke("onBeforeInput",["compositionend","keypress","textInput","paste"]),Ke("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),Ke("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),Ke("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Ou="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Mu=new Set("beforetoggle cancel close invalid load scroll scrollend toggle".split(" ").concat(Ou));function zu(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var a=e[n],r=a.event;a=a.listeners;e:{var s=void 0;if(t)for(var o=a.length-1;0<=o;o--){var i=a[o],c=i.instance,l=i.currentTarget;if(i=i.listener,c!==s&&r.isPropagationStopped())break e;s=i,r.currentTarget=l;try{s(r)}catch(u){yi(u)}r.currentTarget=null,s=c}else for(o=0;o<a.length;o++){if(c=(i=a[o]).instance,l=i.currentTarget,i=i.listener,c!==s&&r.isPropagationStopped())break e;s=i,r.currentTarget=l;try{s(r)}catch(u){yi(u)}r.currentTarget=null,s=c}}}}function Lu(e,t){var n=t[Me];void 0===n&&(n=t[Me]=new Set);var a=e+"__bubble";n.has(a)||(Vu(t,e,2,!1),n.add(a))}function Pu(e,t,n){var a=0;t&&(a|=4),Vu(n,e,a,t)}var Bu="_reactListening"+Math.random().toString(36).slice(2);function Wu(e){if(!e[Bu]){e[Bu]=!0,qe.forEach(function(t){"selectionchange"!==t&&(Mu.has(t)||Pu(t,!1,e),Pu(t,!0,e))});var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Bu]||(t[Bu]=!0,Pu("selectionchange",!1,t))}}function Vu(e,t,n,a){switch(lh(t)){case 2:var r=ah;break;case 8:r=rh;break;default:r=sh}n=r.bind(null,t,n,e),r=void 0,!Bt||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(r=!0),a?void 0!==r?e.addEventListener(t,n,{capture:!0,passive:r}):e.addEventListener(t,n,!0):void 0!==r?e.addEventListener(t,n,{passive:r}):e.addEventListener(t,n,!1)}function Uu(e,t,n,a,r){var s=a;if(0===(1&t)&&0===(2&t)&&null!==a)e:for(;;){if(null===a)return;var o=a.tag;if(3===o||4===o){var i=a.stateNode.containerInfo;if(i===r)break;if(4===o)for(o=a.return;null!==o;){var l=o.tag;if((3===l||4===l)&&o.stateNode.containerInfo===r)return;o=o.return}for(;null!==i;){if(null===(o=Ve(i)))return;if(5===(l=o.tag)||6===l||26===l||27===l){a=s=o;continue e}i=i.parentNode}}a=a.return}zt(function(){var a=s,r=Rt(n),o=[];e:{var i=xa.get(e);if(void 0!==i){var l=Jt,u=e;switch(e){case"keypress":if(0===jt(n))break e;case"keydown":case"keyup":l=mn;break;case"focusin":u="focus",l=sn;break;case"focusout":u="blur",l=sn;break;case"beforeblur":case"afterblur":l=sn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=an;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=rn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=yn;break;case pa:case fa:case ma:l=on;break;case va:l=bn;break;case"scroll":case"scrollend":l=tn;break;case"wheel":l=vn;break;case"copy":case"cut":case"paste":l=cn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=gn;break;case"toggle":case"beforetoggle":l=xn}var d=0!==(4&t),h=!d&&("scroll"===e||"scrollend"===e),p=d?null!==i?i+"Capture":null:i;d=[];for(var f,m=a;null!==m;){var g=m;if(f=g.stateNode,5!==(g=g.tag)&&26!==g&&27!==g||null===f||null===p||null!=(g=Lt(m,p))&&d.push(Gu(m,g,f)),h)break;m=m.return}0<d.length&&(i=new l(i,u,null,n,r),o.push({event:i,listeners:d}))}}if(0===(7&t)){if(l="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||n===_t||!(u=n.relatedTarget||n.fromElement)||!Ve(u)&&!u[Oe])&&(l||i)&&(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,l?(l=a,null!==(u=(u=n.relatedTarget||n.toElement)?Ve(u):null)&&(h=c(u),d=u.tag,u!==h||5!==d&&27!==d&&6!==d)&&(u=null)):(l=null,u=a),l!==u)){if(d=an,g="onMouseLeave",p="onMouseEnter",m="mouse","pointerout"!==e&&"pointerover"!==e||(d=gn,g="onPointerLeave",p="onPointerEnter",m="pointer"),h=null==l?i:Ge(l),f=null==u?i:Ge(u),(i=new d(g,m+"leave",l,n,r)).target=h,i.relatedTarget=f,g=null,Ve(r)===a&&((d=new d(p,m+"enter",u,n,r)).target=f,d.relatedTarget=h,g=d),h=g,l&&u)e:{for(p=u,m=0,f=d=l;f;f=ju(f))m++;for(f=0,g=p;g;g=ju(g))f++;for(;0<m-f;)d=ju(d),m--;for(;0<f-m;)p=ju(p),f--;for(;m--;){if(d===p||null!==p&&d===p.alternate)break e;d=ju(d),p=ju(p)}d=null}else d=null;null!==l&&qu(o,i,l,d,!1),null!==u&&null!==h&&qu(o,h,u,d,!0)}if("select"===(l=(i=a?Ge(a):window).nodeName&&i.nodeName.toLowerCase())||"input"===l&&"file"===i.type)var y=Pn;else if(Fn(i))if(Bn)y=Kn;else{y=qn;var b=jn}else!(l=i.nodeName)||"input"!==l.toLowerCase()||"checkbox"!==i.type&&"radio"!==i.type?a&&It(a.elementType)&&(y=Pn):y=Yn;switch(y&&(y=y(e,a))?Dn(o,y,n,r):(b&&b(e,i,a),"focusout"===e&&a&&"number"===i.type&&null!=a.memoizedProps.value&&bt(i,"number",i.value)),b=a?Ge(a):window,e){case"focusin":(Fn(b)||"true"===b.contentEditable)&&(aa=b,ra=a,sa=null);break;case"focusout":sa=ra=aa=null;break;case"mousedown":oa=!0;break;case"contextmenu":case"mouseup":case"dragend":oa=!1,ia(o,n,r);break;case"selectionchange":if(na)break;case"keydown":case"keyup":ia(o,n,r)}var v;if(kn)e:{switch(e){case"compositionstart":var x="onCompositionStart";break e;case"compositionend":x="onCompositionEnd";break e;case"compositionupdate":x="onCompositionUpdate";break e}x=void 0}else _n?En(e,n)&&(x="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(x="onCompositionStart");x&&(Nn&&"ko"!==n.locale&&(_n||"onCompositionStart"!==x?"onCompositionEnd"===x&&_n&&(v=Ht()):(Ut="value"in(Vt=r)?Vt.value:Vt.textContent,_n=!0)),0<(b=Hu(a,x)).length&&(x=new ln(x,e,null,n,r),o.push({event:x,listeners:b}),v?x.data=v:null!==(v=An(n))&&(x.data=v))),(v=Tn?function(e,t){switch(e){case"compositionend":return An(t);case"keypress":return 32!==t.which?null:(Cn=!0,In);case"textInput":return(e=t.data)===In&&Cn?null:e;default:return null}}(e,n):function(e,t){if(_n)return"compositionend"===e||!kn&&En(e,t)?(e=Ht(),Gt=Ut=Vt=null,_n=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Nn&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(x=Hu(a,"onBeforeInput")).length&&(b=new ln("onBeforeInput","beforeinput",null,n,r),o.push({event:b,listeners:x}),b.data=v)),function(e,t,n,a,r){if("submit"===t&&n&&n.stateNode===r){var s=_u((r[De]||null).action),o=a.submitter;o&&null!==(t=(t=o[De]||null)?_u(t.formAction):o.getAttribute("formAction"))&&(s=t,o=null);var i=new Jt("action","action",null,a,r);e.push({event:i,listeners:[{instance:null,listener:function(){if(a.defaultPrevented){if(0!==wu){var e=o?Ru(r,o):new FormData(r);Ro(n,{pending:!0,data:e,method:r.method,action:s},null,e)}}else"function"===typeof s&&(i.preventDefault(),e=o?Ru(r,o):new FormData(r),Ro(n,{pending:!0,data:e,method:r.method,action:s},s,e))},currentTarget:r}]})}}(o,e,a,n,r)}zu(o,t)})}function Gu(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Hu(e,t){for(var n=t+"Capture",a=[];null!==e;){var r=e,s=r.stateNode;if(5!==(r=r.tag)&&26!==r&&27!==r||null===s||(null!=(r=Lt(e,n))&&a.unshift(Gu(e,r,s)),null!=(r=Lt(e,t))&&a.push(Gu(e,r,s))),3===e.tag)return a;e=e.return}return[]}function ju(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag&&27!==e.tag);return e||null}function qu(e,t,n,a,r){for(var s=t._reactName,o=[];null!==n&&n!==a;){var i=n,c=i.alternate,l=i.stateNode;if(i=i.tag,null!==c&&c===a)break;5!==i&&26!==i&&27!==i||null===l||(c=l,r?null!=(l=Lt(n,s))&&o.unshift(Gu(n,l,c)):r||null!=(l=Lt(n,s))&&o.push(Gu(n,l,c))),n=n.return}0!==o.length&&e.push({event:t,listeners:o})}var Yu=/\r\n?/g,Ku=/\u0000|\uFFFD/g;function Xu(e){return("string"===typeof e?e:""+e).replace(Yu,"\n").replace(Ku,"")}function Zu(e,t){return t=Xu(t),Xu(e)===t}function Qu(){}function $u(e,t,n,a,r,s){switch(n){case"children":"string"===typeof a?"body"===t||"textarea"===t&&""===a||kt(e,a):("number"===typeof a||"bigint"===typeof a)&&"body"!==t&&kt(e,""+a);break;case"className":nt(e,"class",a);break;case"tabIndex":nt(e,"tabindex",a);break;case"dir":case"role":case"viewBox":case"width":case"height":nt(e,n,a);break;case"style":Nt(e,a,s);break;case"data":if("object"!==t){nt(e,"data",a);break}case"src":case"href":if(""===a&&("a"!==t||"href"!==n)){e.removeAttribute(n);break}if(null==a||"function"===typeof a||"symbol"===typeof a||"boolean"===typeof a){e.removeAttribute(n);break}a=At(""+a),e.setAttribute(n,a);break;case"action":case"formAction":if("function"===typeof a){e.setAttribute(n,"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')");break}if("function"===typeof s&&("formAction"===n?("input"!==t&&$u(e,t,"name",r.name,r,null),$u(e,t,"formEncType",r.formEncType,r,null),$u(e,t,"formMethod",r.formMethod,r,null),$u(e,t,"formTarget",r.formTarget,r,null)):($u(e,t,"encType",r.encType,r,null),$u(e,t,"method",r.method,r,null),$u(e,t,"target",r.target,r,null))),null==a||"symbol"===typeof a||"boolean"===typeof a){e.removeAttribute(n);break}a=At(""+a),e.setAttribute(n,a);break;case"onClick":null!=a&&(e.onclick=Qu);break;case"onScroll":null!=a&&Lu("scroll",e);break;case"onScrollEnd":null!=a&&Lu("scrollend",e);break;case"dangerouslySetInnerHTML":if(null!=a){if("object"!==typeof a||!("__html"in a))throw Error(o(61));if(null!=(n=a.__html)){if(null!=r.children)throw Error(o(60));e.innerHTML=n}}break;case"multiple":e.multiple=a&&"function"!==typeof a&&"symbol"!==typeof a;break;case"muted":e.muted=a&&"function"!==typeof a&&"symbol"!==typeof a;break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"defaultValue":case"defaultChecked":case"innerHTML":case"ref":case"autoFocus":break;case"xlinkHref":if(null==a||"function"===typeof a||"boolean"===typeof a||"symbol"===typeof a){e.removeAttribute("xlink:href");break}n=At(""+a),e.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",n);break;case"contentEditable":case"spellCheck":case"draggable":case"value":case"autoReverse":case"externalResourcesRequired":case"focusable":case"preserveAlpha":null!=a&&"function"!==typeof a&&"symbol"!==typeof a?e.setAttribute(n,""+a):e.removeAttribute(n);break;case"inert":case"allowFullScreen":case"async":case"autoPlay":case"controls":case"default":case"defer":case"disabled":case"disablePictureInPicture":case"disableRemotePlayback":case"formNoValidate":case"hidden":case"loop":case"noModule":case"noValidate":case"open":case"playsInline":case"readOnly":case"required":case"reversed":case"scoped":case"seamless":case"itemScope":a&&"function"!==typeof a&&"symbol"!==typeof a?e.setAttribute(n,""):e.removeAttribute(n);break;case"capture":case"download":!0===a?e.setAttribute(n,""):!1!==a&&null!=a&&"function"!==typeof a&&"symbol"!==typeof a?e.setAttribute(n,a):e.removeAttribute(n);break;case"cols":case"rows":case"size":case"span":null!=a&&"function"!==typeof a&&"symbol"!==typeof a&&!isNaN(a)&&1<=a?e.setAttribute(n,a):e.removeAttribute(n);break;case"rowSpan":case"start":null==a||"function"===typeof a||"symbol"===typeof a||isNaN(a)?e.removeAttribute(n):e.setAttribute(n,a);break;case"popover":Lu("beforetoggle",e),Lu("toggle",e),tt(e,"popover",a);break;case"xlinkActuate":at(e,"http://www.w3.org/1999/xlink","xlink:actuate",a);break;case"xlinkArcrole":at(e,"http://www.w3.org/1999/xlink","xlink:arcrole",a);break;case"xlinkRole":at(e,"http://www.w3.org/1999/xlink","xlink:role",a);break;case"xlinkShow":at(e,"http://www.w3.org/1999/xlink","xlink:show",a);break;case"xlinkTitle":at(e,"http://www.w3.org/1999/xlink","xlink:title",a);break;case"xlinkType":at(e,"http://www.w3.org/1999/xlink","xlink:type",a);break;case"xmlBase":at(e,"http://www.w3.org/XML/1998/namespace","xml:base",a);break;case"xmlLang":at(e,"http://www.w3.org/XML/1998/namespace","xml:lang",a);break;case"xmlSpace":at(e,"http://www.w3.org/XML/1998/namespace","xml:space",a);break;case"is":tt(e,"is",a);break;case"innerText":case"textContent":break;default:(!(2<n.length)||"o"!==n[0]&&"O"!==n[0]||"n"!==n[1]&&"N"!==n[1])&&tt(e,n=Ct.get(n)||n,a)}}function Ju(e,t,n,a,r,s){switch(n){case"style":Nt(e,a,s);break;case"dangerouslySetInnerHTML":if(null!=a){if("object"!==typeof a||!("__html"in a))throw Error(o(61));if(null!=(n=a.__html)){if(null!=r.children)throw Error(o(60));e.innerHTML=n}}break;case"children":"string"===typeof a?kt(e,a):("number"===typeof a||"bigint"===typeof a)&&kt(e,""+a);break;case"onScroll":null!=a&&Lu("scroll",e);break;case"onScrollEnd":null!=a&&Lu("scrollend",e);break;case"onClick":null!=a&&(e.onclick=Qu);break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"innerHTML":case"ref":case"innerText":case"textContent":break;default:Ye.hasOwnProperty(n)||("o"!==n[0]||"n"!==n[1]||(r=n.endsWith("Capture"),t=n.slice(2,r?n.length-7:void 0),"function"===typeof(s=null!=(s=e[De]||null)?s[n]:null)&&e.removeEventListener(t,s,r),"function"!==typeof a)?n in e?e[n]=a:!0===a?e.setAttribute(n,""):tt(e,n,a):("function"!==typeof s&&null!==s&&(n in e?e[n]=null:e.hasAttribute(n)&&e.removeAttribute(n)),e.addEventListener(t,a,r)))}}function ed(e,t,n){switch(t){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"img":Lu("error",e),Lu("load",e);var a,r=!1,s=!1;for(a in n)if(n.hasOwnProperty(a)){var i=n[a];if(null!=i)switch(a){case"src":r=!0;break;case"srcSet":s=!0;break;case"children":case"dangerouslySetInnerHTML":throw Error(o(137,t));default:$u(e,t,a,i,n,null)}}return s&&$u(e,t,"srcSet",n.srcSet,n,null),void(r&&$u(e,t,"src",n.src,n,null));case"input":Lu("invalid",e);var c=a=i=s=null,l=null,u=null;for(r in n)if(n.hasOwnProperty(r)){var d=n[r];if(null!=d)switch(r){case"name":s=d;break;case"type":i=d;break;case"checked":l=d;break;case"defaultChecked":u=d;break;case"value":a=d;break;case"defaultValue":c=d;break;case"children":case"dangerouslySetInnerHTML":if(null!=d)throw Error(o(137,t));break;default:$u(e,t,r,d,n,null)}}return yt(e,a,c,l,u,i,s,!1),void dt(e);case"select":for(s in Lu("invalid",e),r=i=a=null,n)if(n.hasOwnProperty(s)&&null!=(c=n[s]))switch(s){case"value":a=c;break;case"defaultValue":i=c;break;case"multiple":r=c;default:$u(e,t,s,c,n,null)}return t=a,n=i,e.multiple=!!r,void(null!=t?vt(e,!!r,t,!1):null!=n&&vt(e,!!r,n,!0));case"textarea":for(i in Lu("invalid",e),a=s=r=null,n)if(n.hasOwnProperty(i)&&null!=(c=n[i]))switch(i){case"value":r=c;break;case"defaultValue":s=c;break;case"children":a=c;break;case"dangerouslySetInnerHTML":if(null!=c)throw Error(o(91));break;default:$u(e,t,i,c,n,null)}return wt(e,r,s,a),void dt(e);case"option":for(l in n)if(n.hasOwnProperty(l)&&null!=(r=n[l]))if("selected"===l)e.selected=r&&"function"!==typeof r&&"symbol"!==typeof r;else $u(e,t,l,r,n,null);return;case"dialog":Lu("beforetoggle",e),Lu("toggle",e),Lu("cancel",e),Lu("close",e);break;case"iframe":case"object":Lu("load",e);break;case"video":case"audio":for(r=0;r<Ou.length;r++)Lu(Ou[r],e);break;case"image":Lu("error",e),Lu("load",e);break;case"details":Lu("toggle",e);break;case"embed":case"source":case"link":Lu("error",e),Lu("load",e);case"area":case"base":case"br":case"col":case"hr":case"keygen":case"meta":case"param":case"track":case"wbr":case"menuitem":for(u in n)if(n.hasOwnProperty(u)&&null!=(r=n[u]))switch(u){case"children":case"dangerouslySetInnerHTML":throw Error(o(137,t));default:$u(e,t,u,r,n,null)}return;default:if(It(t)){for(d in n)n.hasOwnProperty(d)&&(void 0!==(r=n[d])&&Ju(e,t,d,r,n,void 0));return}}for(c in n)n.hasOwnProperty(c)&&(null!=(r=n[c])&&$u(e,t,c,r,n,null))}var td=null,nd=null;function ad(e){return 9===e.nodeType?e:e.ownerDocument}function rd(e){switch(e){case"http://www.w3.org/2000/svg":return 1;case"http://www.w3.org/1998/Math/MathML":return 2;default:return 0}}function sd(e,t){if(0===e)switch(t){case"svg":return 1;case"math":return 2;default:return 0}return 1===e&&"foreignObject"===t?0:e}function od(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"bigint"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var id=null;var cd="function"===typeof setTimeout?setTimeout:void 0,ld="function"===typeof clearTimeout?clearTimeout:void 0,ud="function"===typeof Promise?Promise:void 0,dd="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof ud?function(e){return ud.resolve(null).then(e).catch(hd)}:cd;function hd(e){setTimeout(function(){throw e})}function pd(e){return"head"===e}function fd(e,t){var n=t,a=0,r=0;do{var s=n.nextSibling;if(e.removeChild(n),s&&8===s.nodeType)if("/$"===(n=s.data)){if(0<a&&8>a){n=a;var o=e.ownerDocument;if(1&n&&wd(o.documentElement),2&n&&wd(o.body),4&n)for(wd(n=o.head),o=n.firstChild;o;){var i=o.nextSibling,c=o.nodeName;o[Be]||"SCRIPT"===c||"STYLE"===c||"LINK"===c&&"stylesheet"===o.rel.toLowerCase()||n.removeChild(o),o=i}}if(0===r)return e.removeChild(s),void Ch(t);r--}else"$"===n||"$?"===n||"$!"===n?r++:a=n.charCodeAt(0)-48;else a=0;n=s}while(n);Ch(t)}function md(e){var t=e.firstChild;for(t&&10===t.nodeType&&(t=t.nextSibling);t;){var n=t;switch(t=t.nextSibling,n.nodeName){case"HTML":case"HEAD":case"BODY":md(n),We(n);continue;case"SCRIPT":case"STYLE":continue;case"LINK":if("stylesheet"===n.rel.toLowerCase())continue}e.removeChild(n)}}function gd(e){return"$!"===e.data||"$?"===e.data&&"complete"===e.ownerDocument.readyState}function yd(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t||"F!"===t||"F"===t)break;if("/$"===t)return null}}return e}var bd=null;function vd(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}function xd(e,t,n){switch(t=ad(n),e){case"html":if(!(e=t.documentElement))throw Error(o(452));return e;case"head":if(!(e=t.head))throw Error(o(453));return e;case"body":if(!(e=t.body))throw Error(o(454));return e;default:throw Error(o(451))}}function wd(e){for(var t=e.attributes;t.length;)e.removeAttributeNode(t[0]);We(e)}var kd=new Map,Sd=new Set;function Td(e){return"function"===typeof e.getRootNode?e.getRootNode():9===e.nodeType?e:e.ownerDocument}var Nd=M.d;M.d={f:function(){var e=Nd.f(),t=Vl();return e||t},r:function(e){var t=Ue(e);null!==t&&5===t.tag&&"form"===t.type?Do(t):Nd.r(e)},D:function(e){Nd.D(e),Cd("dns-prefetch",e,null)},C:function(e,t){Nd.C(e,t),Cd("preconnect",e,t)},L:function(e,t,n){Nd.L(e,t,n);var a=Id;if(a&&e&&t){var r='link[rel="preload"][as="'+mt(t)+'"]';"image"===t&&n&&n.imageSrcSet?(r+='[imagesrcset="'+mt(n.imageSrcSet)+'"]',"string"===typeof n.imageSizes&&(r+='[imagesizes="'+mt(n.imageSizes)+'"]')):r+='[href="'+mt(e)+'"]';var s=r;switch(t){case"style":s=Ad(e);break;case"script":s=Fd(e)}kd.has(s)||(e=h({rel:"preload",href:"image"===t&&n&&n.imageSrcSet?void 0:e,as:t},n),kd.set(s,e),null!==a.querySelector(r)||"style"===t&&a.querySelector(_d(s))||"script"===t&&a.querySelector(Dd(s))||(ed(t=a.createElement("link"),"link",e),je(t),a.head.appendChild(t)))}},m:function(e,t){Nd.m(e,t);var n=Id;if(n&&e){var a=t&&"string"===typeof t.as?t.as:"script",r='link[rel="modulepreload"][as="'+mt(a)+'"][href="'+mt(e)+'"]',s=r;switch(a){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":s=Fd(e)}if(!kd.has(s)&&(e=h({rel:"modulepreload",href:e},t),kd.set(s,e),null===n.querySelector(r))){switch(a){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":if(n.querySelector(Dd(s)))return}ed(a=n.createElement("link"),"link",e),je(a),n.head.appendChild(a)}}},X:function(e,t){Nd.X(e,t);var n=Id;if(n&&e){var a=He(n).hoistableScripts,r=Fd(e),s=a.get(r);s||((s=n.querySelector(Dd(r)))||(e=h({src:e,async:!0},t),(t=kd.get(r))&&Ld(e,t),je(s=n.createElement("script")),ed(s,"link",e),n.head.appendChild(s)),s={type:"script",instance:s,count:1,state:null},a.set(r,s))}},S:function(e,t,n){Nd.S(e,t,n);var a=Id;if(a&&e){var r=He(a).hoistableStyles,s=Ad(e);t=t||"default";var o=r.get(s);if(!o){var i={loading:0,preload:null};if(o=a.querySelector(_d(s)))i.loading=5;else{e=h({rel:"stylesheet",href:e,"data-precedence":t},n),(n=kd.get(s))&&zd(e,n);var c=o=a.createElement("link");je(c),ed(c,"link",e),c._p=new Promise(function(e,t){c.onload=e,c.onerror=t}),c.addEventListener("load",function(){i.loading|=1}),c.addEventListener("error",function(){i.loading|=2}),i.loading|=4,Md(o,t,a)}o={type:"stylesheet",instance:o,count:1,state:i},r.set(s,o)}}},M:function(e,t){Nd.M(e,t);var n=Id;if(n&&e){var a=He(n).hoistableScripts,r=Fd(e),s=a.get(r);s||((s=n.querySelector(Dd(r)))||(e=h({src:e,async:!0,type:"module"},t),(t=kd.get(r))&&Ld(e,t),je(s=n.createElement("script")),ed(s,"link",e),n.head.appendChild(s)),s={type:"script",instance:s,count:1,state:null},a.set(r,s))}}};var Id="undefined"===typeof document?null:document;function Cd(e,t,n){var a=Id;if(a&&"string"===typeof t&&t){var r=mt(t);r='link[rel="'+e+'"][href="'+r+'"]',"string"===typeof n&&(r+='[crossorigin="'+n+'"]'),Sd.has(r)||(Sd.add(r),e={rel:e,crossOrigin:n,href:t},null===a.querySelector(r)&&(ed(t=a.createElement("link"),"link",e),je(t),a.head.appendChild(t)))}}function Ed(e,t,n,a){var r,s,i,c,l=(l=H.current)?Td(l):null;if(!l)throw Error(o(446));switch(e){case"meta":case"title":return null;case"style":return"string"===typeof n.precedence&&"string"===typeof n.href?(t=Ad(n.href),(a=(n=He(l).hoistableStyles).get(t))||(a={type:"style",instance:null,count:0,state:null},n.set(t,a)),a):{type:"void",instance:null,count:0,state:null};case"link":if("stylesheet"===n.rel&&"string"===typeof n.href&&"string"===typeof n.precedence){e=Ad(n.href);var u=He(l).hoistableStyles,d=u.get(e);if(d||(l=l.ownerDocument||l,d={type:"stylesheet",instance:null,count:0,state:{loading:0,preload:null}},u.set(e,d),(u=l.querySelector(_d(e)))&&!u._p&&(d.instance=u,d.state.loading=5),kd.has(e)||(n={rel:"preload",as:"style",href:n.href,crossOrigin:n.crossOrigin,integrity:n.integrity,media:n.media,hrefLang:n.hrefLang,referrerPolicy:n.referrerPolicy},kd.set(e,n),u||(r=l,s=e,i=n,c=d.state,r.querySelector('link[rel="preload"][as="style"]['+s+"]")?c.loading=1:(s=r.createElement("link"),c.preload=s,s.addEventListener("load",function(){return c.loading|=1}),s.addEventListener("error",function(){return c.loading|=2}),ed(s,"link",i),je(s),r.head.appendChild(s))))),t&&null===a)throw Error(o(528,""));return d}if(t&&null!==a)throw Error(o(529,""));return null;case"script":return t=n.async,"string"===typeof(n=n.src)&&t&&"function"!==typeof t&&"symbol"!==typeof t?(t=Fd(n),(a=(n=He(l).hoistableScripts).get(t))||(a={type:"script",instance:null,count:0,state:null},n.set(t,a)),a):{type:"void",instance:null,count:0,state:null};default:throw Error(o(444,e))}}function Ad(e){return'href="'+mt(e)+'"'}function _d(e){return'link[rel="stylesheet"]['+e+"]"}function Rd(e){return h({},e,{"data-precedence":e.precedence,precedence:null})}function Fd(e){return'[src="'+mt(e)+'"]'}function Dd(e){return"script[async]"+e}function Od(e,t,n){if(t.count++,null===t.instance)switch(t.type){case"style":var a=e.querySelector('style[data-href~="'+mt(n.href)+'"]');if(a)return t.instance=a,je(a),a;var r=h({},n,{"data-href":n.href,"data-precedence":n.precedence,href:null,precedence:null});return je(a=(e.ownerDocument||e).createElement("style")),ed(a,"style",r),Md(a,n.precedence,e),t.instance=a;case"stylesheet":r=Ad(n.href);var s=e.querySelector(_d(r));if(s)return t.state.loading|=4,t.instance=s,je(s),s;a=Rd(n),(r=kd.get(r))&&zd(a,r),je(s=(e.ownerDocument||e).createElement("link"));var i=s;return i._p=new Promise(function(e,t){i.onload=e,i.onerror=t}),ed(s,"link",a),t.state.loading|=4,Md(s,n.precedence,e),t.instance=s;case"script":return s=Fd(n.src),(r=e.querySelector(Dd(s)))?(t.instance=r,je(r),r):(a=n,(r=kd.get(s))&&Ld(a=h({},n),r),je(r=(e=e.ownerDocument||e).createElement("script")),ed(r,"link",a),e.head.appendChild(r),t.instance=r);case"void":return null;default:throw Error(o(443,t.type))}else"stylesheet"===t.type&&0===(4&t.state.loading)&&(a=t.instance,t.state.loading|=4,Md(a,n.precedence,e));return t.instance}function Md(e,t,n){for(var a=n.querySelectorAll('link[rel="stylesheet"][data-precedence],style[data-precedence]'),r=a.length?a[a.length-1]:null,s=r,o=0;o<a.length;o++){var i=a[o];if(i.dataset.precedence===t)s=i;else if(s!==r)break}s?s.parentNode.insertBefore(e,s.nextSibling):(t=9===n.nodeType?n.head:n).insertBefore(e,t.firstChild)}function zd(e,t){null==e.crossOrigin&&(e.crossOrigin=t.crossOrigin),null==e.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),null==e.title&&(e.title=t.title)}function Ld(e,t){null==e.crossOrigin&&(e.crossOrigin=t.crossOrigin),null==e.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),null==e.integrity&&(e.integrity=t.integrity)}var Pd=null;function Bd(e,t,n){if(null===Pd){var a=new Map,r=Pd=new Map;r.set(n,a)}else(a=(r=Pd).get(n))||(a=new Map,r.set(n,a));if(a.has(e))return a;for(a.set(e,null),n=n.getElementsByTagName(e),r=0;r<n.length;r++){var s=n[r];if(!(s[Be]||s[Fe]||"link"===e&&"stylesheet"===s.getAttribute("rel"))&&"http://www.w3.org/2000/svg"!==s.namespaceURI){var o=s.getAttribute(t)||"";o=e+o;var i=a.get(o);i?i.push(s):a.set(o,[s])}}return a}function Wd(e,t,n){(e=e.ownerDocument||e).head.insertBefore(n,"title"===t?e.querySelector("head > title"):null)}function Vd(e){return"stylesheet"!==e.type||0!==(3&e.state.loading)}var Ud=null;function Gd(){}function Hd(){if(this.count--,0===this.count)if(this.stylesheets)qd(this,this.stylesheets);else if(this.unsuspend){var e=this.unsuspend;this.unsuspend=null,e()}}var jd=null;function qd(e,t){e.stylesheets=null,null!==e.unsuspend&&(e.count++,jd=new Map,t.forEach(Yd,e),jd=null,Hd.call(e))}function Yd(e,t){if(!(4&t.state.loading)){var n=jd.get(e);if(n)var a=n.get(null);else{n=new Map,jd.set(e,n);for(var r=e.querySelectorAll("link[data-precedence],style[data-precedence]"),s=0;s<r.length;s++){var o=r[s];"LINK"!==o.nodeName&&"not all"===o.getAttribute("media")||(n.set(o.dataset.precedence,o),a=o)}a&&n.set(null,a)}o=(r=t.instance).getAttribute("data-precedence"),(s=n.get(o)||a)===a&&n.set(null,r),n.set(o,r),this.count++,a=Hd.bind(this),r.addEventListener("load",a),r.addEventListener("error",a),s?s.parentNode.insertBefore(r,s.nextSibling):(e=9===e.nodeType?e.head:e).insertBefore(r,e.firstChild),t.state.loading|=4}}var Kd={$$typeof:w,Provider:null,Consumer:null,_currentValue:z,_currentValue2:z,_threadCount:0};function Xd(e,t,n,a,r,s,o,i){this.tag=1,this.containerInfo=e,this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=Te(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Te(0),this.hiddenUpdates=Te(null),this.identifierPrefix=a,this.onUncaughtError=r,this.onCaughtError=s,this.onRecoverableError=o,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=i,this.incompleteTransitions=new Map}function Zd(e,t,n,a,r,s,o,i,c,l,u,d){return e=new Xd(e,t,n,o,i,c,l,d),t=1,!0===s&&(t|=24),s=za(3,null,null,t),e.current=s,s.stateNode=e,(t=Dr()).refCount++,e.pooledCache=t,t.refCount++,s.memoizedState={element:a,isDehydrated:n,cache:t},ns(s),e}function Qd(e){return e?e=Oa:Oa}function $d(e,t,n,a,r,s){r=Qd(r),null===a.context?a.context=r:a.pendingContext=r,(a=rs(t)).payload={element:n},null!==(s=void 0===s?null:s)&&(a.callback=s),null!==(n=ss(e,a,t))&&(zl(n,0,t),os(n,e,t))}function Jd(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function eh(e,t){Jd(e,t),(e=e.alternate)&&Jd(e,t)}function th(e){if(13===e.tag){var t=Ra(e,67108864);null!==t&&zl(t,0,67108864),eh(e,67108864)}}var nh=!0;function ah(e,t,n,a){var r=O.T;O.T=null;var s=M.p;try{M.p=2,sh(e,t,n,a)}finally{M.p=s,O.T=r}}function rh(e,t,n,a){var r=O.T;O.T=null;var s=M.p;try{M.p=8,sh(e,t,n,a)}finally{M.p=s,O.T=r}}function sh(e,t,n,a){if(nh){var r=oh(a);if(null===r)Uu(e,t,a,ih,n),bh(e,a);else if(function(e,t,n,a,r){switch(t){case"focusin":return dh=vh(dh,e,t,n,a,r),!0;case"dragenter":return hh=vh(hh,e,t,n,a,r),!0;case"mouseover":return ph=vh(ph,e,t,n,a,r),!0;case"pointerover":var s=r.pointerId;return fh.set(s,vh(fh.get(s)||null,e,t,n,a,r)),!0;case"gotpointercapture":return s=r.pointerId,mh.set(s,vh(mh.get(s)||null,e,t,n,a,r)),!0}return!1}(r,e,t,n,a))a.stopPropagation();else if(bh(e,a),4&t&&-1<yh.indexOf(e)){for(;null!==r;){var s=Ue(r);if(null!==s)switch(s.tag){case 3:if((s=s.stateNode).current.memoizedState.isDehydrated){var o=be(s.pendingLanes);if(0!==o){var i=s;for(i.pendingLanes|=2,i.entangledLanes|=2;o;){var c=1<<31-pe(o);i.entanglements[1]|=c,o&=~c}ku(s),0===(6&nl)&&(kl=te()+500,Su(0,!1))}}break;case 13:null!==(i=Ra(s,2))&&zl(i,0,2),Vl(),eh(s,2)}if(null===(s=oh(a))&&Uu(e,t,a,ih,n),s===r)break;r=s}null!==r&&a.stopPropagation()}else Uu(e,t,a,null,n)}}function oh(e){return ch(e=Rt(e))}var ih=null;function ch(e){if(ih=null,null!==(e=Ve(e))){var t=c(e);if(null===t)e=null;else{var n=t.tag;if(13===n){if(null!==(e=l(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null)}}return ih=e,null}function lh(e){switch(e){case"beforetoggle":case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"toggle":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 2;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 8;case"message":switch(ne()){case ae:return 2;case re:return 8;case se:case oe:return 32;case ie:return 268435456;default:return 32}default:return 32}}var uh=!1,dh=null,hh=null,ph=null,fh=new Map,mh=new Map,gh=[],yh="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset".split(" ");function bh(e,t){switch(e){case"focusin":case"focusout":dh=null;break;case"dragenter":case"dragleave":hh=null;break;case"mouseover":case"mouseout":ph=null;break;case"pointerover":case"pointerout":fh.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":mh.delete(t.pointerId)}}function vh(e,t,n,a,r,s){return null===e||e.nativeEvent!==s?(e={blockedOn:t,domEventName:n,eventSystemFlags:a,nativeEvent:s,targetContainers:[r]},null!==t&&(null!==(t=Ue(t))&&th(t)),e):(e.eventSystemFlags|=a,t=e.targetContainers,null!==r&&-1===t.indexOf(r)&&t.push(r),e)}function xh(e){var t=Ve(e.target);if(null!==t){var n=c(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=l(n)))return e.blockedOn=t,void function(e,t){var n=M.p;try{return M.p=e,t()}finally{M.p=n}}(e.priority,function(){if(13===n.tag){var e=Ol();e=Ee(e);var t=Ra(n,e);null!==t&&zl(t,0,e),eh(n,e)}})}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function wh(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=oh(e.nativeEvent);if(null!==n)return null!==(t=Ue(n))&&th(t),e.blockedOn=n,!1;var a=new(n=e.nativeEvent).constructor(n.type,n);_t=a,n.target.dispatchEvent(a),_t=null,t.shift()}return!0}function kh(e,t,n){wh(e)&&n.delete(t)}function Sh(){uh=!1,null!==dh&&wh(dh)&&(dh=null),null!==hh&&wh(hh)&&(hh=null),null!==ph&&wh(ph)&&(ph=null),fh.forEach(kh),mh.forEach(kh)}function Th(e,t){e.blockedOn===t&&(e.blockedOn=null,uh||(uh=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Sh)))}var Nh=null;function Ih(e){Nh!==e&&(Nh=e,a.unstable_scheduleCallback(a.unstable_NormalPriority,function(){Nh===e&&(Nh=null);for(var t=0;t<e.length;t+=3){var n=e[t],a=e[t+1],r=e[t+2];if("function"!==typeof a){if(null===ch(a||n))continue;break}var s=Ue(n);null!==s&&(e.splice(t,3),t-=3,Ro(s,{pending:!0,data:r,method:n.method,action:a},a,r))}}))}function Ch(e){function t(t){return Th(t,e)}null!==dh&&Th(dh,e),null!==hh&&Th(hh,e),null!==ph&&Th(ph,e),fh.forEach(t),mh.forEach(t);for(var n=0;n<gh.length;n++){var a=gh[n];a.blockedOn===e&&(a.blockedOn=null)}for(;0<gh.length&&null===(n=gh[0]).blockedOn;)xh(n),null===n.blockedOn&&gh.shift();if(null!=(n=(e.ownerDocument||e).$$reactFormReplay))for(a=0;a<n.length;a+=3){var r=n[a],s=n[a+1],o=r[De]||null;if("function"===typeof s)o||Ih(n);else if(o){var i=null;if(s&&s.hasAttribute("formAction")){if(r=s,o=s[De]||null)i=o.formAction;else if(null!==ch(r))continue}else i=o.action;"function"===typeof i?n[a+1]=i:(n.splice(a,3),a-=3),Ih(n)}}}function Eh(e){this._internalRoot=e}function Ah(e){this._internalRoot=e}Ah.prototype.render=Eh.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(o(409));$d(t.current,Ol(),e,t,null,null)},Ah.prototype.unmount=Eh.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;$d(e.current,2,null,e,null,null),Vl(),t[Oe]=null}},Ah.prototype.unstable_scheduleHydration=function(e){if(e){var t=_e();e={blockedOn:null,target:e,priority:t};for(var n=0;n<gh.length&&0!==t&&t<gh[n].priority;n++);gh.splice(n,0,e),0===n&&xh(e)}};var _h=r.version;if("19.1.0"!==_h)throw Error(o(527,_h,"19.1.0"));M.findDOMNode=function(e){var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(o(188));throw e=Object.keys(e).join(","),Error(o(268,e))}return e=function(e){var t=e.alternate;if(!t){if(null===(t=c(e)))throw Error(o(188));return t!==e?null:e}for(var n=e,a=t;;){var r=n.return;if(null===r)break;var s=r.alternate;if(null===s){if(null!==(a=r.return)){n=a;continue}break}if(r.child===s.child){for(s=r.child;s;){if(s===n)return u(r),e;if(s===a)return u(r),t;s=s.sibling}throw Error(o(188))}if(n.return!==a.return)n=r,a=s;else{for(var i=!1,l=r.child;l;){if(l===n){i=!0,n=r,a=s;break}if(l===a){i=!0,a=r,n=s;break}l=l.sibling}if(!i){for(l=s.child;l;){if(l===n){i=!0,n=s,a=r;break}if(l===a){i=!0,a=s,n=r;break}l=l.sibling}if(!i)throw Error(o(189))}}if(n.alternate!==a)throw Error(o(190))}if(3!==n.tag)throw Error(o(188));return n.stateNode.current===n?e:t}(t),e=null===(e=null!==e?d(e):null)?null:e.stateNode};var Rh={bundleType:0,version:"19.1.0",rendererPackageName:"react-dom",currentDispatcherRef:O,reconcilerVersion:"19.1.0"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var Fh=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Fh.isDisabled&&Fh.supportsFiber)try{ue=Fh.inject(Rh),de=Fh}catch(Oh){}}t.createRoot=function(e,t){if(!i(e))throw Error(o(299));var n=!1,a="",r=bi,s=vi,c=xi;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(a=t.identifierPrefix),void 0!==t.onUncaughtError&&(r=t.onUncaughtError),void 0!==t.onCaughtError&&(s=t.onCaughtError),void 0!==t.onRecoverableError&&(c=t.onRecoverableError),void 0!==t.unstable_transitionCallbacks&&t.unstable_transitionCallbacks),t=Zd(e,1,!1,null,0,n,a,r,s,c,0,null),e[Oe]=t.current,Wu(e),new Eh(t)},t.hydrateRoot=function(e,t,n){if(!i(e))throw Error(o(299));var a=!1,r="",s=bi,c=vi,l=xi,u=null;return null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(a=!0),void 0!==n.identifierPrefix&&(r=n.identifierPrefix),void 0!==n.onUncaughtError&&(s=n.onUncaughtError),void 0!==n.onCaughtError&&(c=n.onCaughtError),void 0!==n.onRecoverableError&&(l=n.onRecoverableError),void 0!==n.unstable_transitionCallbacks&&n.unstable_transitionCallbacks,void 0!==n.formState&&(u=n.formState)),(t=Zd(e,1,!0,t,0,a,r,s,c,l,0,u)).context=Qd(null),n=t.current,(r=rs(a=Ee(a=Ol()))).callback=null,ss(n,r,a),n=a,t.current.lanes=n,Ne(t,n),ku(t),e[Oe]=t.current,Wu(e),new Ah(t)},t.version="19.1.0"},7066:function(e,t,n){var a;!function(e,r){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function i(e,t){var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.xor128=i}(0,e=n.nmd(e),n.amdD)},7131:(e,t,n)=>{"use strict";n.d(t,{D:()=>r});var a=n(8977);class r{static join(e){return new r(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map(e=>a.isTypedArray(e)?e.buffer:e)).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const a=e[n];n!==e.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=t+a.byteLength;this.shards.push({buffer:a,start:t,end:r}),t=r}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error("Could not find start shard for byte ".concat(e));const a=new ArrayBuffer(t-e),r=new Uint8Array(a);let s=0;for(let o=n;o<this.shards.length;o++){const n=this.shards[o],a=e+s-n.start,i=s,c=Math.min(t,n.end)-n.start,l=new Uint8Array(n.buffer,a,c-a);if(r.set(l,i),s+=l.length,t<n.end)break}return a}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,a=e.length;for(;n<=a;){const r=Math.floor((a-n)/2)+n,s=t(e[r]);if(0===s)return r;s<0?a=r:n=r+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}},7167:(e,t,n)=>{"use strict";n.d(t,{r:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i={x:(0,s.YT)(e,"x","cumsum")},c={axis:t,exclusive:n,reverse:o};return a.T2.runKernel(r.nY8,i,c)}})},7237:(e,t,n)=>{"use strict";n.d(t,{$:()=>c});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(5583);const c=(0,n(7892).op)({batchNorm_:function(e,t,n,c,l,u){null==u&&(u=.001);const d=(0,s.YT)(e,"x","batchNorm"),h=(0,s.YT)(t,"mean","batchNorm"),p=(0,s.YT)(n,"variance","batchNorm");let f,m;null!=l&&(f=(0,s.YT)(l,"scale","batchNorm")),null!=c&&(m=(0,s.YT)(c,"offset","batchNorm")),o.vA(h.rank===p.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),o.vA(null==m||h.rank===m.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),o.vA(null==f||h.rank===f.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const g={x:function(e){let t;return t=0===e.rank||1===e.rank?(0,i.t)(e,[1,1,1,e.size]):2===e.rank?(0,i.t)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,i.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(d),scale:f,offset:m,mean:h,variance:p},y={varianceEpsilon:u},b=a.T2.runKernel(r.i5R,g,y);return(0,i.t)(b,d.shape)}})},7242:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var a=n(2164),r=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({add_:function(e,t){let n=(0,o.YT)(e,"a","add"),i=(0,o.YT)(t,"b","add");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.OMN,c)}})},7307:(e,t,n)=>{"use strict";n.d(t,{g:()=>f});var a=n(6149),r=n(4429),s=n(1047),o=n(803),i=n(7892),c=n(9477),l=n(5583),u=n(7419),d=n(1997),h=n(463),p=n(1405);const f=(0,i.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let i;if(t<=2){const a=(0,l.t)(e,[n,t]);i=(0,p.K)(a)}else{const f=[n,2*(t-1)],m=(0,l.t)((0,c.x)(e),[n,t]),g=(0,l.t)((0,s.n)(e),[n,t]),y=(0,u.B)((0,h.d)(m,[0,1],[n,t-2]),1),b=(0,o.l)((0,u.B)((0,h.d)(g,[0,1],[n,t-2]),1),(0,d.d)(-1)),v=(0,r.x)([m,y],1),x=(0,r.x)([g,b],1),w=(0,l.t)((0,a.f)(v,x),[f[0],f[1]]);i=(0,p.K)(w)}if(i=(0,c.x)(i),3===e.rank&&0!==e.shape[0]){const t=i,n=e.shape[0];i=(0,l.t)(i,[n,i.shape[0]/n,i.shape[1]]),t.dispose()}return i}})},7353:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(N){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=a;var r={},s={};function o(e,t){var n,a,o;return t?(o=0<=(e>>>=0)&&e<256)&&(a=s[e])?a:(n=c(e,(0|e)<0?-1:0,!0),o&&(s[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(a=r[e])?a:(n=c(e,e<0?-1:0,!1),o&&(r[e]=n),n)}function i(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=p)return k}else{if(e<=-f)return S;if(e+1>=f)return w}return e<0?i(-e,t).neg():c(e%h|0,e/h|0,t)}function c(e,t,a){return new n(e,t,a)}n.fromInt=o,n.fromNumber=i,n.fromBits=c;var l=Math.pow;function u(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return u(e.substring(1),t,n).neg();for(var r=i(l(n,8)),s=g,o=0;o<e.length;o+=8){var c=Math.min(8,e.length-o),d=parseInt(e.substring(o,o+c),n);if(c<8){var h=i(l(n,c));s=s.mul(h).add(i(d))}else s=(s=s.mul(r)).add(i(d))}return s.unsigned=t,s}function d(e,t){return"number"===typeof e?i(e,t):"string"===typeof e?u(e,t):c(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=u,n.fromValue=d;var h=4294967296,p=h*h,f=p/2,m=o(1<<24),g=o(0);n.ZERO=g;var y=o(0,!0);n.UZERO=y;var b=o(1);n.ONE=b;var v=o(1,!0);n.UONE=v;var x=o(-1);n.NEG_ONE=x;var w=c(-1,2147483647,!1);n.MAX_VALUE=w;var k=c(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var S=c(0,-2147483648,!1);n.MIN_VALUE=S;var T=n.prototype;T.toInt=function(){return this.unsigned?this.low>>>0:this.low},T.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},T.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=i(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=i(l(e,6),this.unsigned),s=this,o="";;){var c=s.div(r),u=(s.sub(c.mul(r)).toInt()>>>0).toString(e);if((s=c).isZero())return u+o;for(;u.length<6;)u="0"+u;o=""+u+o}},T.getHighBits=function(){return this.high},T.getHighBitsUnsigned=function(){return this.high>>>0},T.getLowBits=function(){return this.low},T.getLowBitsUnsigned=function(){return this.low>>>0},T.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},T.isZero=function(){return 0===this.high&&0===this.low},T.eqz=T.isZero,T.isNegative=function(){return!this.unsigned&&this.high<0},T.isPositive=function(){return this.unsigned||this.high>=0},T.isOdd=function(){return 1===(1&this.low)},T.isEven=function(){return 0===(1&this.low)},T.equals=function(e){return a(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},T.eq=T.equals,T.notEquals=function(e){return!this.eq(e)},T.neq=T.notEquals,T.ne=T.notEquals,T.lessThan=function(e){return this.comp(e)<0},T.lt=T.lessThan,T.lessThanOrEqual=function(e){return this.comp(e)<=0},T.lte=T.lessThanOrEqual,T.le=T.lessThanOrEqual,T.greaterThan=function(e){return this.comp(e)>0},T.gt=T.greaterThan,T.greaterThanOrEqual=function(e){return this.comp(e)>=0},T.gte=T.greaterThanOrEqual,T.ge=T.greaterThanOrEqual,T.compare=function(e){if(a(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},T.comp=T.compare,T.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(b)},T.neg=T.negate,T.add=function(e){a(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,o=e.high>>>16,i=65535&e.high,l=e.low>>>16,u=0,h=0,p=0,f=0;return p+=(f+=s+(65535&e.low))>>>16,h+=(p+=r+l)>>>16,u+=(h+=n+i)>>>16,u+=t+o,c((p&=65535)<<16|(f&=65535),(u&=65535)<<16|(h&=65535),this.unsigned)},T.subtract=function(e){return a(e)||(e=d(e)),this.add(e.neg())},T.sub=T.subtract,T.multiply=function(e){if(this.isZero())return g;if(a(e)||(e=d(e)),t)return c(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,s=this.low>>>16,o=65535&this.low,l=e.high>>>16,u=65535&e.high,h=e.low>>>16,p=65535&e.low,f=0,y=0,b=0,v=0;return b+=(v+=o*p)>>>16,y+=(b+=s*p)>>>16,b&=65535,y+=(b+=o*h)>>>16,f+=(y+=r*p)>>>16,y&=65535,f+=(y+=s*h)>>>16,y&=65535,f+=(y+=o*u)>>>16,f+=n*p+r*h+s*u+o*l,c((b&=65535)<<16|(v&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},T.mul=T.multiply,T.divide=function(e){if(a(e)||(e=d(e)),e.isZero())throw Error("division by zero");var n,r,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?c((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return v;s=y}else{if(this.eq(S))return e.eq(b)||e.eq(x)?S:e.eq(S)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:x:(r=this.sub(e.mul(n)),s=n.add(r.div(e)));if(e.eq(S))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),u=o<=48?1:l(2,o-48),h=i(n),p=h.mul(e);p.isNegative()||p.gt(r);)p=(h=i(n-=u,this.unsigned)).mul(e);h.isZero()&&(h=b),s=s.add(h),r=r.sub(p)}return s},T.div=T.divide,T.modulo=function(e){return a(e)||(e=d(e)),t?c((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},T.mod=T.modulo,T.rem=T.modulo,T.not=function(){return c(~this.low,~this.high,this.unsigned)},T.and=function(e){return a(e)||(e=d(e)),c(this.low&e.low,this.high&e.high,this.unsigned)},T.or=function(e){return a(e)||(e=d(e)),c(this.low|e.low,this.high|e.high,this.unsigned)},T.xor=function(e){return a(e)||(e=d(e)),c(this.low^e.low,this.high^e.high,this.unsigned)},T.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):c(0,this.low<<e-32,this.unsigned)},T.shl=T.shiftLeft,T.shiftRight=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):c(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},T.shr=T.shiftRight,T.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?c(this.low>>>e|t<<32-e,t>>>e,this.unsigned):c(32===e?t:t>>>e-32,0,this.unsigned)},T.shru=T.shiftRightUnsigned,T.shr_u=T.shiftRightUnsigned,T.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},T.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},T.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},T.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},T.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,a){return a?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},7359:function(e,t,n){var a;!function(e,r){function s(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var a=.02519603282416938*(e+=t.charCodeAt(n));a-=e=a>>>0,e=(a*=e)>>>0,e+=4294967296*(a-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function i(e,t){var n=new s(e),a=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,a&&("object"==typeof a&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.alea=i}(0,e=n.nmd(e),n.amdD)},7382:(e,t,n)=>{"use strict";n.d(t,{c:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(7794);const i=(0,n(7892).op)({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=(0,s.YT)(e,"x","sum");"bool"===i.dtype&&(i=(0,o.w)(i,"int32"));const c={x:i},l={axis:t,keepDims:n};return a.T2.runKernel(r.WuN,c,l)}})},7399:(e,t,n)=>{"use strict";n.d(t,{x:()=>i});var a=n(2164),r=n(9554),s=n(7892),o=n(5583);const i=(0,s.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,i){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],l=arguments.length>6?arguments[6]:void 0,u=e;3===e.rank&&(u=(0,o.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=(0,o.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={x:u,dy:d},p={strides:s,pad:i,dimRoundingMode:l,dilations:c,filterShape:n};return a.T2.runKernel(r.X$8,h,p)}})},7419:(e,t,n)=>{"use strict";n.d(t,{B:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({reverse_:function(e,t){const n={x:(0,s.YT)(e,"x","reverse")},o={dims:t};return a.T2.runKernel(r.D7i,n,o)}})},7457:(e,t,n)=>{"use strict";n.d(t,{L:()=>c});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805);const c=(0,n(7892).op)({equal_:function(e,t){let n=(0,o.YT)(e,"a","equal","string_or_numeric"),c=(0,o.YT)(t,"b","equal","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.BRl,l)}})},7538:(e,t,n)=>{"use strict";n.d(t,{$Q:()=>y,Dh:()=>f,E6:()=>s,G0:()=>m,G8:()=>l,YQ:()=>r,l5:()=>o,p$:()=>c,qk:()=>g,s_:()=>b,uf:()=>i});var a=n(1426);function r(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5?arguments[5]:void 0;return i(e,[...t,e[3]],n,s,a,null,null,y(r))}function s(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[c,l]=u(t);let d;if("channelsLast"===o)d=[c,l,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));d=[c,l,e[1],e[1]]}return i(e,d,n,a,r,s,!1,o)}function o(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[i,l,u]=d(t);let h,p;if("NDHWC"===o)p="channelsLast",h=[i,l,u,e[4],e[4]];else{if("NCDHW"!==o)throw new Error("Unknown dataFormat ".concat(o));p="channelsFirst",h=[i,l,u,e[1],e[1]]}return c(e,h,n,a,r,!1,p,s)}function i(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[c,d,f,m]=[-1,-1,-1,-1];if("channelsLast"===i)[c,d,f,m]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));[c,m,d,f]=e}const[g,y,,b]=t,[v,x]=u(n),[w,k]=u(a),S=h(g,w),T=h(y,k),{padInfo:N,outHeight:I,outWidth:C}=function(e,t,n,a,r,s,o,i,c){let u,d,h;if("number"===typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,a,r){null==a&&(a=l(e,t,n));const s=e[0],o=e[1],i=p((s-t+2*a)/n+1,r),c=p((o-t+2*a)/n+1,r);return[i,c]}([t,n],s,a,e,i);d=r[0],h=r[1]}else if("same"===e){d=Math.ceil(t/a),h=Math.ceil(n/r);const e=Math.max(0,(d-1)*a+s-t),i=Math.max(0,(h-1)*r+o-n),c=Math.floor(e/2),l=e-c,p=Math.floor(i/2);u={top:c,bottom:l,left:p,right:i-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/a),h=Math.ceil((n-o+1)/r);else{if("object"!==typeof e)throw Error("Unknown padding parameter: ".concat(e));{const l="channelsLast"===c?e[1][0]:e[2][0],f="channelsLast"===c?e[1][1]:e[2][1],m="channelsLast"===c?e[2][0]:e[3][0],g="channelsLast"===c?e[2][1]:e[3][1];u={top:l,bottom:f,left:m,right:g,type:0===l&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},d=p((t-s+l+f)/a+1,i),h=p((n-o+m+g)/r+1,i)}}return{padInfo:u,outHeight:d,outWidth:h}}(r,d,f,v,x,S,T,s,i),E=o?b*m:b;let A;return"channelsFirst"===i?A=[c,E,I,C]:"channelsLast"===i&&(A=[c,I,C,E]),{batchSize:c,dataFormat:i,inHeight:d,inWidth:f,inChannels:m,outHeight:I,outWidth:C,outChannels:E,padInfo:N,strideHeight:v,strideWidth:x,filterHeight:g,filterWidth:y,effectiveFilterHeight:S,effectiveFilterWidth:T,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function c(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",i=arguments.length>7?arguments[7]:void 0,[c,u,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[c,u,f,m,g]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));[c,g,u,f,m]=e}const[y,b,v,,x]=t,[w,k,S]=d(n),[T,N,I]=d(a),C=h(y,T),E=h(b,N),A=h(v,I),{padInfo:_,outDepth:R,outHeight:F,outWidth:D}=function(e,t,n,a,r,s,o,i,c,u,d){let h,f,m,g;"valid"===e&&(e=0);if("number"===typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const y=function(e,t,n,a,r,s){null==r&&(r=l(e,t[0],a[0]));const o=[0,0,0,n];for(let i=0;i<3;i++)e[i]+2*r>=t[i]&&(o[i]=p((e[i]-t[i]+2*r)/a[i]+1,s));return o}([t,n,a,1],[i,c,u],1,[r,s,o],e,d);f=y[0],m=y[1],g=y[2]}else{if("same"!==e)throw Error("Unknown padding parameter: ".concat(e));{f=Math.ceil(t/r),m=Math.ceil(n/s),g=Math.ceil(a/o);const e=(f-1)*r+i-t,l=(m-1)*s+c-n,d=(g-1)*o+u-a,p=Math.floor(e/2),y=e-p,b=Math.floor(l/2),v=l-b,x=Math.floor(d/2);h={top:b,bottom:v,left:x,right:d-x,front:p,back:y,type:"SAME"}}}return{padInfo:h,outDepth:f,outHeight:m,outWidth:g}}(r,u,f,m,w,k,S,C,E,A,i),O=s?x*g:x;let M;return"channelsFirst"===o?M=[c,O,R,F,D]:"channelsLast"===o&&(M=[c,R,F,D,O]),{batchSize:c,dataFormat:o,inDepth:u,inHeight:f,inWidth:m,inChannels:g,outDepth:R,outHeight:F,outWidth:D,outChannels:O,padInfo:_,strideDepth:w,strideHeight:k,strideWidth:S,filterDepth:y,filterHeight:b,filterWidth:v,effectiveFilterDepth:C,effectiveFilterHeight:E,effectiveFilterWidth:A,dilationDepth:T,dilationHeight:N,dilationWidth:I,inShape:e,outShape:M,filterShape:t}}function l(e,t,n){const a=h(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+a)/2)}function u(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function d(e){return"number"===typeof e?[e,e,e]:e}function h(e,t){return t<=1?e:e+(e-1)*(t-1)}function p(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode ".concat(t))}}function f(e){const[t,n,a]=u(e);return 1===t&&1===n&&1===a}function m(e,t){return f(e)||f(t)}function g(e){return u(e).every(e=>e>0)}function y(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat ".concat(e))}function b(e,t,n){if(null!=n){if("string"===typeof t)throw Error("Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,"."));if("number"===typeof t)a.vA(a.E6(t),()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,"."));else{if("object"!==typeof t)throw Error("Error in ".concat(e,": Unknown padding parameter: ").concat(t));t.forEach(t=>{t.forEach(t=>{a.vA(a.E6(t),()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,"."))})})}}}},7587:(e,t,n)=>{"use strict";n.d(t,{n:()=>i});var a=n(2164),r=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({pow_:function(e,t){let n=(0,o.YT)(e,"base","pow"),i=(0,o.YT)(t,"exp","pow");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.pyJ,c)}})},7738:(e,t,n)=>{"use strict";n.d(t,{E:()=>s});var a=n(2164),r=n(4148);const s=(0,n(7892).op)({square_:function(e){const t=(0,r.YT)(e,"x","square");return a.T2.runKernel("Square",{x:t},{})}})},7751:(e,t,n)=>{"use strict";n.d(t,{d:()=>h});var a=n(4148),r=n(1426),s=n(8650),o=n(2557),i=n(7538),c=n(6044),l=n(7892),u=n(5583),d=n(3585);const h=(0,l.op)({pool_:function(e,t,n,l,h,p,f){null==h&&(h=[1,1]),null==p&&(p=1),0===l&&(l="valid");const m=(0,a.YT)(e,"x","maxPool");let g=m,y=!1;3===m.rank&&(y=!0,g=(0,u.t)(m,[1,m.shape[0],m.shape[1],m.shape[2]])),r.vA(i.G0(p,h),()=>"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(p," and dilations '").concat(h,"'"));const b=i.E6(g.shape,t,p,h,l),v=[b.dilationHeight,b.dilationWidth];let x;x="same"===l?function(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)),a=n.map(e=>e-1),r=a.map(e=>Math.floor(e/2)),s=a.map((e,t)=>e-r[t]);return a.map((e,t)=>[r[t],s[t]])}([b.filterHeight,b.filterWidth],v):[[0,0],[0,0]];const w=1===v[0]&&1===v[1],[k,S]=function(e,t,n){const a=n.map(e=>e[0]),r=n.map(e=>e[1]),s=e.concat(a,r),o=t.map((e,t)=>(e-s[t]%e)%e),i=r.map((e,t)=>e+o[t]),c=t.map((e,t)=>[a[t],i[t]]),l=t.map((e,t)=>[0,o[t]]);return[c,l]}([b.inHeight,b.inWidth],v,x),T=w?l:"valid",N=w?g:(0,d.e)(g,v,k),I=("avg"===n?()=>(0,s.$)(N,t,p,T,f):()=>(0,c.j)(N,t,p,T,f))(),C=w?I:(0,o.G)(I,v,S);return y?(0,u.t)(C,[C.shape[1],C.shape[2],C.shape[3]]):C}})},7794:(e,t,n)=>{"use strict";n.d(t,{w:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({cast_:function(e,t){const n=(0,s.YT)(e,"x","cast");if(!o.xn(t))throw new Error("Failed to cast to unknown dtype ".concat(t));if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const i={x:n},c={dtype:t};return a.T2.runKernel(r.KXH,i,c)}})},7803:(e,t,n)=>{"use strict";n.d(t,{r:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({atan_:function(e){const t={x:(0,s.YT)(e,"x","atan")};return a.T2.runKernel(r.TyE,t)}})},7892:(e,t,n)=>{"use strict";n.d(t,{B:()=>s,op:()=>o});var a=n(2164),r=n(1426);const s="__op";function o(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(t.length," keys."));let n=t[0];const o=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const i=function(){a.T2.startScope(n);try{const e=o(...arguments);return(0,r.yL)(e)&&console.error("Cannot return a Promise inside of tidy."),a.T2.endScope(e),e}catch(e){throw a.T2.endScope(null),e}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},7905:(e,t,n)=>{"use strict";n.d(t,{Do:()=>m,XB:()=>f,f2:()=>g,zE:()=>y});var a=n(8805),r=n(3645),s=n(8076),o=n(803),i=n(9855),c=n(5251),l=n(9721),u=n(5583),d=n(4213),h=n(319),p=n(7382);function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,o.l)(e,(0,h.P)(t));throw new Error("Cannot compute gradient for fused activation ".concat(n,"."))}function m(e,t){let n=t;const r=a.getReductionAxes(e.shape,t.shape);return r.length>0&&(n=(0,p.c)(n,r)),(0,u.t)(n,e.shape)}function g(e,t,n,a){if("linear"===t)return e;if("relu"===t)return(0,c.V)(e);if("elu"===t)return(0,r.P)(e);if("relu6"===t)return(0,l.j)(e);if("prelu"===t)return(0,i.N)(e,n);if("leakyrelu"===t)return(0,s.H)(e,a);if("sigmoid"===t)return(0,d.r)(e);throw new Error("Unknown fused activation ".concat(t,"."))}const y=(e,t)=>!(e>0)||"linear"===t},7920:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(8805);const i=(0,n(7892).op)({logicalOr_:function(e,t){const n=(0,s.YT)(e,"a","logicalOr","bool"),i=(0,s.YT)(t,"b","logicalOr","bool");(0,o.assertAndGetBroadcastShape)(n.shape,i.shape);const c={a:n,b:i};return a.T2.runKernel(r.LXA,c)}})},7926:(e,t,n)=>{"use strict";let a;function r(){if(null==a){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}a=e}return a}function s(e,t){const n=function(){const e=r();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const a=t();return n.set(e,a),n.get(e)}}n.d(t,{L:()=>r,m:()=>s})},7950:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(6672)},7951:(e,t,n)=>{"use strict";n.d(t,{j:()=>i});var a=n(2164),r=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({sub_:function(e,t){let n=(0,o.YT)(e,"a","sub"),i=(0,o.YT)(t,"b","sub");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.PbM,c)}})},8032:(e,t,n)=>{"use strict";n.d(t,{O:()=>s});var a=n(4148),r=n(9914);function s(e,t,n){const s=(0,a.MZ)(e,n);return(0,r.Q)(e,t,s,n)}},8046:(e,t,n)=>{"use strict";n.d(t,{AS:()=>g,DZ:()=>m,Gc:()=>x,Hi:()=>h,Hs:()=>I,IS:()=>l,ME:()=>f,Ok:()=>C,Sm:()=>i,W4:()=>T,aC:()=>y,fL:()=>u,gJ:()=>N,gY:()=>c,go:()=>S,jh:()=>v,jz:()=>w,kB:()=>b,m1:()=>p,rE:()=>k,rm:()=>d});var a=n(2164),r=n(5399),s=n(9494),o=n(8804);function i(){(0,r._K)().set("PROD",!0)}function c(){(0,r._K)().set("DEBUG",!0)}function l(){(0,r._K)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function u(e){(0,r._K)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function d(){a.T2.disposeVariables()}function h(){return a.T2}function p(){return a.T2.memory()}function f(e){return a.T2.profile(e)}function m(e,t){return a.T2.tidy(e,t)}function g(e){(0,o.getTensorsInContainer)(e).forEach(e=>e.dispose())}function y(e){return a.T2.keep(e)}function b(e){return a.T2.time(e)}function v(e){return a.T2.setBackend(e)}function x(){return a.T2.ready()}function w(){return a.T2.backendName}function k(e){a.T2.removeBackend(e)}function S(e){return a.T2.findBackend(e)}function T(e){return a.T2.findBackendFactory(e)}function N(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return a.T2.registerBackend(e,t,n)}function I(){return a.T2.backend}function C(e,t){(0,r._K)().setPlatform(e,t)}(0,s.B4)(u)},8075:(e,t,n)=>{"use strict";var a,r,s,o,i;n.d(t,{Nw:()=>h,Oj:()=>d,Tu:()=>l,ch:()=>u,rg:()=>a}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(o||(o={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(i||(i={}));const c={float32:o,int32:r,bool:s,complex64:i};function l(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error("Can not upcast ".concat(e," with ").concat(t))}return c[e][t]}function u(e){return l(e,"int32")}function d(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function h(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}},8076:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:(0,s.YT)(e,"x","leakyRelu")},o={alpha:t};return a.T2.runKernel(r.X0$,n,o)}})},8108:()=>{},8143:(e,t,n)=>{"use strict";n.d(t,{L:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({sinh_:function(e){const t={x:(0,s.YT)(e,"x","sinh")};return a.T2.runKernel(r.J3C,t)}})},8147:(e,t,n)=>{"use strict";n.d(t,{r:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({atanh_:function(e){const t={x:(0,s.YT)(e,"x","atanh")};return a.T2.runKernel(r.zP9,t)}})},8320:(e,t,n)=>{"use strict";n.d(t,{M:()=>c});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805);const c=(0,n(7892).op)({less_:function(e,t){let n=(0,o.YT)(e,"a","less","string_or_numeric"),c=(0,o.YT)(t,"b","less","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.mIA,l)}})},8482:(e,t,n)=>{"use strict";n.d(t,{X:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,s.YT)(e,"x","argMin")},o={axis:t};return a.T2.runKernel(r.p_m,n,o)}})},8587:(e,t,n)=>{"use strict";n.d(t,{R:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({floor_:function(e){const t={x:(0,s.YT)(e,"x","floor","float32")};return a.T2.runKernel(r.ZgB,t)}})},8590:()=>{},8650:(e,t,n)=>{"use strict";n.d(t,{$:()=>d});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7794),c=n(7538),l=n(7892),u=n(5583);const d=(0,l.op)({avgPool_:function(e,t,n,l,d){const h=(0,s.YT)(e,"x","avgPool","float32");o.vA(c.G0(n,1),()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'"));let p=h,f=!1;3===h.rank&&(f=!0,p=(0,u.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),o.vA(4===p.rank,()=>"Error in avgPool: x must be rank 4 but got rank ".concat(p.rank,".")),c.s_("avgPool",l,d);const m={x:p},g={filterSize:t,strides:n,pad:l,dimRoundingMode:d};let y=a.T2.runKernel(r.ho8,m,g);return y=(0,i.w)(y,h.dtype),f?(0,u.t)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},8804:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertTypesMatch:()=>i,getTensorsInContainer:()=>l,isTensorInList:()=>c,makeTypesMatch:()=>o});var a=n(9494),r=n(8075),s=n(1426);function o(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,r.Tu)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function i(e,t){(0,s.vA)(e.dtype===t.dtype,()=>"The dtypes of the first(".concat(e.dtype,") and")+" second(".concat(t.dtype,") input must match"))}function c(e,t){return t.some(t=>t.id===e.id)}function l(e){const t=[];return u(e,t,new Set),t}function u(e,t,n){if(null==e)return;if(e instanceof a.qY)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!==typeof r)return;var r;const s=e;for(const a in s){const e=s[a];n.has(e)||(n.add(e),u(e,t,n))}}},8805:(e,t,n)=>{"use strict";function a(e,t){const n=e.length,a=[];for(let r=0;r<n;r++){const s=n-1-r,o=e[s]||1;(t[t.length-1-r]||1)>1&&1===o&&a.unshift(s)}return a}function r(e,t){const n=[];for(let a=0;a<t.length;a++){const r=e[e.length-a-1],s=t.length-a-1,o=t[s];(null==r||1===r&&o>1)&&n.unshift(s)}return n}function s(e,t){const n=Math.max(e.length,t.length),a=new Array(n);for(let r=0;r<n;r++){let s=e[e.length-r-1];null==s&&(s=1);let o=t[t.length-r-1];if(null==o&&(o=1),1===s)a[n-r-1]=o;else if(1===o)a[n-r-1]=s;else{if(s!==o){const n="Operands could not be broadcast together with shapes "+"".concat(e," and ").concat(t,".");throw Error(n)}a[n-r-1]=s}}return a}n.r(t),n.d(t,{assertAndGetBroadcastShape:()=>s,getBroadcastDims:()=>a,getReductionAxes:()=>r})},8810:(e,t,n)=>{"use strict";n.d(t,{Y:()=>c});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7794);const c=(0,n(7892).op)({erf_:function(e){let t=(0,s.YT)(e,"x","erf");o.vA("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=(0,i.w)(t,"float32"));const n={x:t};return a.T2.runKernel(r._s9,n)}})},8826:(e,t,n)=>{"use strict";n.d(t,{p:()=>r});var a=n(2155);const r=(0,n(7892).op)({euclideanNorm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,a.x)(e,"euclidean",t,n)}})},8853:(e,t,n)=>{"use strict";e.exports=n(5896)},8977:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>s.r1,arraysEqualWithNull:()=>s.e_,assert:()=>s.vA,assertNonNegativeIntegerDimensions:()=>s.SA,assertNonNull:()=>s.HO,assertShapesMatch:()=>s.O3,bytesFromStringArray:()=>s.SL,bytesPerElement:()=>s.jv,checkConversionForErrors:()=>s.nd,clamp:()=>s.qE,computeStrides:()=>s.Ur,convertBackendValuesAndArrayBuffer:()=>s.o2,createScalarValue:()=>x,createShuffledIndices:()=>s.P8,decodeString:()=>N,distSquared:()=>s.oO,encodeString:()=>T,fetch:()=>S,fingerPrint64:()=>v,flatten:()=>C,getArrayFromDType:()=>s.Ab,getTypedArrayFromDType:()=>s.ce,hasEncodingLoss:()=>s.BE,hexToLong:()=>c,indexToLoc:()=>s._k,inferDtype:()=>s.X$,inferFromImplicitShape:()=>s.XT,isBoolean:()=>s.Lm,isFunction:()=>s.Tn,isInt:()=>s.E6,isNumber:()=>s.Et,isPromise:()=>s.yL,isScalarShape:()=>s.Sf,isString:()=>s.Kg,isTypedArray:()=>I,isValidDtype:()=>s.xn,locToIndex:()=>s.sX,makeOnesTypedArray:()=>s.FZ,makeZerosNestedTypedArray:()=>s.c7,makeZerosTypedArray:()=>s.Ty,nearestDivisor:()=>s.lK,nearestLargerEven:()=>s.eV,now:()=>k,parseAxisParam:()=>s.Y6,randUniform:()=>s.so,repeatedTry:()=>s._q,rightPad:()=>s.av,shuffle:()=>s.k4,shuffleCombo:()=>s.a0,sizeFromShape:()=>s.Ze,sizeToSquarishShape:()=>s.gS,squeezeShape:()=>s.gx,sum:()=>s.cz,swap:()=>s.wg,tanh:()=>s.ym,toNestedArray:()=>s.yw,toTypedArray:()=>w});var a=n(5399),r=n(5767),s=n(1426),o=n(7353);const i=n.n(o)()||o;function c(e){return i.fromString(e,!0,16)}const l=c("c3a5c85c97cb3127"),u=c("b492b66fbe98f273"),d=c("9ae16a3b2f90404f");function h(e){return e.xor(e.shru(47))}function p(e,t,n){const a=e.slice(t,t+n);return i.fromBytes(Array.from(a),!0,!0)}function f(e,t){return p(e,t,8)}function m(e,t){return p(e,t,4)}function g(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function y(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:c("9ddfea08eb382d69"),a=e.xor(t).mul(n);a=a.xor(a.shru(47));let r=t.xor(a).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function b(e,t,n,a){return function(e,t,n,a,r,s){r=r.add(e),s=g(s.add(r).add(a),21);const o=r;return r=(r=r.add(t)).add(n),s=s.add(g(r,44)),[r.add(a),s.add(o)]}(f(e,t),f(e,t+8),f(e,t+16),f(e,t+24),n,a)}function v(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=i.fromNumber(81,!0);if(t<=32)return t<=16?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){const n=d.add(2*t),a=f(e,0).add(d),r=f(e,t-8);return y(g(r,37).mul(n).add(a),g(a,25).add(r).mul(n),n)}if(t>=4){const n=d.add(2*t);return y(m(e,0).shl(3).add(t),m(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),a=t+(e[t-1]<<2);return h(d.mul(n).xor(l.mul(a))).mul(d)}return d}(e,t):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=d.add(2*t),a=f(e,0).mul(u),r=f(e,8),s=f(e,t-8).mul(n),o=f(e,t-16).mul(d);return y(g(a.add(r),43).add(g(s,30)).add(o),a.add(g(r.add(d),18)).add(s),n)}(e,t);if(t<=64)return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=d.add(2*t),a=f(e,0).mul(d),r=f(e,8),s=f(e,t-8).mul(n),o=f(e,t-16).mul(d),i=g(a.add(r),43).add(g(s,30)).add(o),c=y(i,a.add(g(r.add(d),18)).add(s),n),l=f(e,16).mul(n),u=f(e,24),h=i.add(f(e,t-32)).mul(n),p=c.add(f(e,t-24)).mul(n);return y(g(l.add(u),43).add(g(h,30)).add(p),l.add(g(u.add(a),18)).add(h),n)}(e,t);let a=n,r=n.mul(u).add(113),s=h(r.mul(d).add(113)).mul(d),o=[i.UZERO,i.UZERO],c=[i.UZERO,i.UZERO];a=a.mul(d).add(f(e,0));let p=0;const v=64*(t-1>>6),x=v+(t-1&63)-63;do{a=g(a.add(r).add(o[0]).add(f(e,p+8)),37).mul(u),r=g(r.add(o[1]).add(f(e,p+48)),42).mul(u),a=a.xor(c[1]),r=r.add(o[0]).add(f(e,p+40)),s=g(s.add(c[0]),33).mul(u),o=b(e,p,o[1].mul(u),a.add(c[0])),c=b(e,p+32,s.add(c[1]),r.add(f(e,p+16))),[s,a]=[a,s],p+=64}while(p!==v);const w=u.add(s.and(255).shl(1));return p=x,c[0]=c[0].add(t-1&63),o[0]=o[0].add(c[0]),c[0]=c[0].add(o[0]),a=g(a.add(r).add(o[0]).add(f(e,p+8)),37).mul(w),r=g(r.add(o[1]).add(f(e,p+48)),42).mul(w),a=a.xor(c[1].mul(9)),r=r.add(o[0].mul(9).add(f(e,p+40))),s=g(s.add(c[0]),33).mul(w),o=b(e,p,o[1].mul(w),a.add(c[0])),c=b(e,p+32,s.add(c[1]),r.add(f(e,p+16))),[s,a]=[a,s],y(y(o[0],c[0],w).add(h(r).mul(l)).add(s),y(o[1],c[1],w).add(a),w)}function x(e,t){return"string"===t?T(e):w([e],t)}function w(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=C(e)),(0,a._K)().getBool("DEBUG")&&s.nd(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type ".concat(t))}function k(){return(0,a._K)().platform.now()}function S(e,t){return(0,a._K)().platform.fetch(e,t)}function T(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",(0,a._K)().platform.encode(e,t)}function N(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",(0,a._K)().platform.decode(e,t)}function I(e){return null!=(0,a._K)().platform.isTypedArray?(0,a._K)().platform.isTypedArray(e):(0,r.Y)(e)}function C(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||s.yL(e)||null==e||I(e)&&n)t.push(e);else if(Array.isArray(e)||I(e))for(let a=0;a<e.length;++a)C(e[a],t,n);else{let a=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(a=Math.max(a,Number(t)));for(let r=0;r<=a;r++)C(e[r],t,n)}return t}},9016:function(e,t,n){var a;!function(e,r){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function i(e,t){var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.xorwow=i}(0,e=n.nmd(e),n.amdD)},9027:(e,t,n)=>{"use strict";n.d(t,{M:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({isFinite_:function(e){const t={x:(0,s.YT)(e,"x","isFinite")};return a.T2.runKernel(r.gIW,t)}})},9235:(e,t,n)=>{"use strict";n.d(t,{Em:()=>l,SM:()=>i,WC:()=>c,WH:()=>r,aF:()=>s,fK:()=>d,gx:()=>u,lb:()=>o});var a=n(1426);function r(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function s(e,t,n){const a=e.length+t.length,r=[];let s=0,o=0;for(let i=0;i<a;i++)-1===n.indexOf(i)?r.push(e[s++]):r.push(t[o++]);return r}function o(e,t){const n=[],a=e.length;for(let r=0;r<a;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map(t=>e[t])]}function i(e,t){return s(e,t.map(e=>1),t)}function c(e,t,n){a.vA(r(t,n),()=>"".concat(e," supports only inner-most axes for now. ")+"Got axes ".concat(t," and rank-").concat(n," input."))}function l(e,t){if(r(e,t))return null;const n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach(e=>n.push(e)),n}function u(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function d(e,t){const n=[];for(let a=t-e;a<t;++a)n.push(a);return n}},9249:(e,t,n)=>{"use strict";n.d(t,{BTT:()=>h.B,tnl:()=>r.t,HQu:()=>s.H,FqL:()=>o.F,WQq:()=>i.W,QiD:()=>p,Q7R:()=>f.Q,bzn:()=>m.b,FLi:()=>g.F,XRg:()=>y.X,qRo:()=>b.q,yHs:()=>v.y,rYl:()=>x.r,FPz:()=>w.F,rfv:()=>k.r,$jT:()=>S.$,sub:()=>C,lZX:()=>O,$v7:()=>z.$,BFc:()=>L,kSi:()=>P,T5N:()=>B,GTe:()=>M.G,HbZ:()=>W,vjT:()=>V,ftb:()=>na,ROE:()=>U,hOW:()=>G.h,ra8:()=>H.r,wgE:()=>T.w,mkO:()=>j.m,zQh:()=>q.z,o8B:()=>Y.o,faB:()=>K.f,xWs:()=>E.x,I1m:()=>X,RPU:()=>Z,O5O:()=>Q,P1l:()=>$,kA9:()=>J.k,Xtf:()=>ee.X,wX9:()=>te.w,IPL:()=>ne,jIJ:()=>re,gnS:()=>se.g,yIG:()=>oe.y,_jP:()=>ha,Lp0:()=>ie.L,rCv:()=>ce.r,aOp:()=>le,Rj8:()=>ue.R,Gl3:()=>de.G,smy:()=>he,X7t:()=>pe.X,y4m:()=>fe.y,ek5:()=>me.e,Omf:()=>ge.O,EZY:()=>ua,_3C:()=>ye,Pqc:()=>be.P,FJY:()=>da,QP2:()=>ve,LCg:()=>xe.L,Y12:()=>we.Y,p4S:()=>ke.p,oNF:()=>Se.o,UG6:()=>Te.U,IYd:()=>Ne.I,y5U:()=>Ce,hVP:()=>wn.h,GSj:()=>Ee.G,RIf:()=>Ae.R,wh_:()=>_e.w,cZk:()=>a,kgh:()=>Re.k,SY9:()=>la,rhj:()=>Fe.r,DQN:()=>De.D,KGM:()=>kn.K,ngS:()=>Oe.n,Slp:()=>gr,U4u:()=>pa,ggX:()=>Sn.g,MIs:()=>Me.M,EN4:()=>ze.E,yrW:()=>Le.y,H8d:()=>Pe.H,M7h:()=>Be.M,InN:()=>We.I,mPL:()=>yr,mT8:()=>Ve,Kgs:()=>Ue.K,Rm2:()=>Ge.R,Kko:()=>He.K,nqI:()=>je.n,HPB:()=>qe.H,VZ:()=>Ye.V,n76:()=>Ke.n,NSZ:()=>Xe.N,ztW:()=>Ze.z,rxB:()=>Qe.r,YYh:()=>br,yzS:()=>et,NoW:()=>A.N,T9B:()=>tt.T,jgi:()=>nt.j,NYV:()=>at,RO:()=>rt,PhQ:()=>st.P,i2o:()=>ot.i,OYQ:()=>lt,jkA:()=>ut.j,BpO:()=>dt.B,FFZ:()=>ht.F,ziu:()=>pt.z,Clk:()=>yt,CRk:()=>oa,lKK:()=>_.l,YDF:()=>bt,OjQ:()=>vt,HZy:()=>xt.H,xbf:()=>ra.x,Ec:()=>wt.E,Mw0:()=>kt.M,SaS:()=>it.S,P61:()=>St.P,op:()=>h.op,X4o:()=>Tt,eVF:()=>Nt.e,BZs:()=>It,grY:()=>Ct,XHu:()=>Et,WLX:()=>At,dzn:()=>_t.d,n7C:()=>Rt.n,NsG:()=>Ft.N,yyV:()=>Dt.y,_eU:()=>Ot._,whe:()=>Mt,iyU:()=>zt,Q0_:()=>Lt,_9M:()=>Pt,pR9:()=>Gt,FE$:()=>Ht,m0H:()=>jt,YeY:()=>qt,HYA:()=>Yt,y17:()=>Kt,xav:()=>Xt.x,VOZ:()=>Zt.V,VVh:()=>Qt.V,j__:()=>$t.j,tQQ:()=>I.t,BEg:()=>Jt.B,QD2:()=>en,LMr:()=>tn,I2l:()=>nn,JYU:()=>an,z8$:()=>Tn.z,LIG:()=>rn.L,Z$r:()=>sn.Z,d_2:()=>on.d,NFr:()=>ia,sZg:()=>Je,WfX:()=>cn.W,wdz:()=>ln.w,F12:()=>un,ry7:()=>R.r,_SZ:()=>dn._,vPA:()=>mr,F8e:()=>hn.F,L0l:()=>pn.L,dik:()=>F.d,Q$M:()=>fn,zAd:()=>mn,wck:()=>gn,R0O:()=>yn,Vs9:()=>bn.V,lw0:()=>vn.l,eDJ:()=>xn.e,lMo:()=>vr,Zhr:()=>ca,lOn:()=>fr,lDo:()=>Nn.l,RZD:()=>In.R,EwI:()=>mt.E,Pbu:()=>Cn.P,r2V:()=>En.r,t$z:()=>An.t,PMw:()=>_n.P,Ym9:()=>Rn.Y,YjP:()=>xr,jbE:()=>gt.j,czq:()=>Fn.c,Mlm:()=>Dn.M,ymU:()=>D.y,OEK:()=>On.O,tGX:()=>zn,KtR:()=>Ln,$_$:()=>Pn.$,g9W:()=>Bn,Lpo:()=>Wn,yxw:()=>Vn,NNh:()=>Gn,Vsq:()=>Ie.V,rfw:()=>Hn.r,mgz:()=>aa.m,efE:()=>jn,AmM:()=>qn.A,zAU:()=>Yn.z,K$i:()=>Kn.K,rni:()=>Xn,bvq:()=>Zn,_M9:()=>Qn._,YJN:()=>Jn,Ul9:()=>ea.U,POl:()=>ta.P});var a={};n.r(a),n.d(a,{conv2d:()=>va,depthwiseConv2d:()=>ka,matMul:()=>Sa});var r=n(3753),s=n(4759),o=n(983),i=n(7242),c=n(2164),l=n(9554),u=n(4148),d=n(1426),h=n(7892);const p=(0,h.op)({addN_:function(e){d.vA(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),d.vA(e.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+"".concat(e.length));const t=e.map((e,t)=>(0,u.YT)(e,"tensors".concat(t),"addN")),n=t[0];t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!d.r1(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const a=t;return c.T2.runKernel(l.EkD,a)}});var f=n(1802),m=n(1819),g=n(3068),y=n(8482),b=n(3010),v=n(6464),x=n(7803),w=n(6349),k=n(8147),S=n(8650),T=n(7794),N=n(7538),I=n(5583);const C=(0,h.op)({avgPool3d_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=(0,u.YT)(e,"x","avgPool3d","float32");let i=o,h=!1;4===o.rank&&(h=!0,i=(0,I.t)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d.vA(5===i.rank,()=>"Error in avgPool3d: x must be rank 5 but got rank ".concat(i.rank,".")),d.vA("NDHWC"===s,()=>"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s)),d.vA("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>"Error in avgPool3d: Stride must be > 0, but got '".concat(n,"'")),(0,N.s_)("avgPool3d",a,r);const p={x:i},f={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s};let m=c.T2.runKernel(l.cS,p,f);return m=(0,T.w)(m,i.dtype),h?(0,I.t)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});var E=n(4429),A=n(5162),_=n(803),R=n(4213),F=n(463),D=n(6532);const O=(0,h.op)({basicLSTMCell_:function(e,t,n,a,r,s){const o=(0,u.YT)(e,"forgetBias","basicLSTMCell"),c=(0,u.YT)(t,"lstmKernel","basicLSTMCell"),l=(0,u.YT)(n,"lstmBias","basicLSTMCell"),d=(0,u.YT)(a,"data","basicLSTMCell"),h=(0,u.YT)(r,"c","basicLSTMCell"),p=(0,u.YT)(s,"h","basicLSTMCell"),f=(0,E.x)([d,p],1),m=(0,A.N)(f,c),g=(0,i.W)(m,l),y=g.shape[0],b=g.shape[1]/4,v=[y,b],x=(0,F.d)(g,[0,0],v),w=(0,F.d)(g,[0,b],v),k=(0,F.d)(g,[0,2*b],v),S=(0,F.d)(g,[0,3*b],v),T=(0,i.W)((0,_.l)((0,R.r)(x),(0,D.y)(w)),(0,_.l)(h,(0,R.r)((0,i.W)(o,k))));return[T,(0,_.l)((0,D.y)(T),(0,R.r)(S))]}});var M=n(2557),z=n(7237);const L=(0,h.op)({batchNorm2d_:function(e,t,n,a,r,s){const o=(0,u.YT)(e,"x","batchNorm"),i=(0,u.YT)(t,"mean","batchNorm"),c=(0,u.YT)(n,"variance","batchNorm");let l,h;return null!=r&&(l=(0,u.YT)(r,"scale","batchNorm")),null!=a&&(h=(0,u.YT)(a,"offset","batchNorm")),d.vA(2===o.rank,()=>"Error in batchNorm2D: x must be rank 2 but got rank "+"".concat(o.rank,".")),d.vA(2===i.rank||1===i.rank,()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+"got rank ".concat(i.rank,".")),d.vA(2===c.rank||1===c.rank,()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+"but got rank ".concat(c.rank,".")),null!=l&&d.vA(2===l.rank||1===l.rank,()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+"but got rank ".concat(l.rank,".")),null!=h&&d.vA(2===h.rank||1===h.rank,()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+"but got rank ".concat(h.rank,".")),(0,z.$)(o,i,c,h,l,s)}});const P=(0,h.op)({batchNorm3d_:function(e,t,n,a,r,s){const o=(0,u.YT)(e,"x","batchNorm"),i=(0,u.YT)(t,"mean","batchNorm"),c=(0,u.YT)(n,"variance","batchNorm");let l,h;return null!=r&&(l=(0,u.YT)(r,"scale","batchNorm")),null!=a&&(h=(0,u.YT)(a,"offset","batchNorm")),d.vA(3===o.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+"".concat(o.rank,".")),d.vA(3===i.rank||1===i.rank,()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+"got rank ".concat(i.rank,".")),d.vA(3===c.rank||1===c.rank,()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+"but got rank ".concat(c.rank,".")),null!=l&&d.vA(3===l.rank||1===l.rank,()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+"but got rank ".concat(l.rank,".")),null!=h&&d.vA(3===h.rank||1===h.rank,()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+"but got rank ".concat(h.rank,".")),(0,z.$)(o,i,c,h,l,s)}});const B=(0,h.op)({batchNorm4d_:function(e,t,n,a,r,s){const o=(0,u.YT)(e,"x","batchNorm"),i=(0,u.YT)(t,"mean","batchNorm"),c=(0,u.YT)(n,"variance","batchNorm");let l,h;return null!=r&&(l=(0,u.YT)(r,"scale","batchNorm")),null!=a&&(h=(0,u.YT)(a,"offset","batchNorm")),d.vA(4===o.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+"".concat(o.rank,".")),d.vA(4===i.rank||1===i.rank,()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+"got rank ".concat(i.rank,".")),d.vA(4===c.rank||1===c.rank,()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+"but got rank ".concat(c.rank,".")),null!=l&&d.vA(4===l.rank||1===l.rank,()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+"but got rank ".concat(l.rank,".")),null!=h&&d.vA(4===h.rank||1===h.rank,()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+"but got rank ".concat(h.rank,".")),(0,z.$)(o,i,c,h,l,s)}});const W=(0,h.op)({bincount_:function(e,t,n){const a=(0,u.YT)(e,"x","bincount"),r=(0,u.YT)(t,"weights","bincount");d.vA("int32"===a.dtype,()=>"Error in bincount: input "+"dtype must be int32, but got ".concat(a.dtype)),d.vA(n>=0,()=>"size must be non-negative, but got ".concat(n,".")),d.vA(r.size===a.size||0===r.size,()=>"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(a.shape,", weights shape: ")+"".concat(r.shape,"."));const s={x:a,weights:r},o={size:n};return c.T2.runKernel(l.N4F,s,o)}});const V=(0,h.op)({bitwiseAnd_:function(e,t){const n=(0,u.YT)(e,"x","bitwiseAnd"),a=(0,u.YT)(t,"y","bitwiseAnd");if(!(0,d.r1)(n.shape,a.shape))throw new Error("BitwiseAnd: Tensors must have the same shape. x: ".concat(n.shape,", y: ").concat(a.shape));if("int32"!==n.dtype||"int32"!==a.dtype)throw new Error("BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ".concat(n.dtype," and type of y: ").concat(a.dtype));const r={a:n,b:a};return c.T2.runKernel(l.HNs,r)}});const U=(0,h.op)({broadcastArgs_:function(e,t){const n=(0,u.YT)(e,"s0","broadcastArgs","int32"),a=(0,u.YT)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error("broadcastArgs(): first input must be a vector (rank=1). "+"Has rank ".concat(n.rank));if(1!==a.rank)throw new Error("broadcastArgs(): second input must be a vector (rank=1). "+"Has rank ".concat(a.rank));const r={s0:n,s1:a};return c.T2.runKernel(l.vj7,r)}});var G=n(4920),H=n(259),j=n(5396),q=n(3829),Y=n(9820),K=n(6149);const X=(0,h.op)({concat1d_:function(e){return(0,E.x)(e,0)}});const Z=(0,h.op)({concat2d_:function(e,t){return(0,E.x)(e,t)}});const Q=(0,h.op)({concat3d_:function(e,t){return(0,E.x)(e,t)}});const $=(0,h.op)({concat4d_:function(e,t){return(0,E.x)(e,t)}});var J=n(9870),ee=n(4969),te=n(1137);const ne=(0,h.op)({conv3d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const o=(0,u.YT)(e,"x","conv3d"),i=(0,u.YT)(t,"filter","conv3d");let h=o,p=!1;4===o.rank&&(p=!0,h=(0,I.t)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d.vA(5===h.rank,()=>"Error in conv3d: input must be rank 5, but got rank ".concat(h.rank,".")),d.vA(5===i.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+"".concat(i.rank,".")),d.vA(h.shape[4]===i.shape[3],()=>"Error in conv3d: depth of input (".concat(h.shape[4],") must match ")+"input depth for filter ".concat(i.shape[3],".")),d.vA((0,N.G0)(n,s),()=>"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(s,"'")),d.vA("NDHWC"===r,()=>"Error in conv3d: got dataFormat of ".concat(r," but only NDHWC is currently supported.")),d.vA((0,N.qk)(s),()=>"Error in conv3D: Dilated rates should be larger than 0."),d.vA((0,N.qk)(n),()=>"Error in conv3D: Strides should be larger than 0.");const f={x:h,filter:i},m={strides:n,pad:a,dataFormat:r,dilations:s},g=c.T2.runKernel(l.A1h,f,m);return p?(0,I.t)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}});var ae=n(6410);const re=(0,h.op)({conv3dTranspose_:function(e,t,n,a,r){const s=(0,u.YT)(e,"x","conv3dTranspose"),o=(0,u.YT)(t,"filter","conv3dTranspose");return(0,ae.c)(n,s,o,a,r)}});var se=n(5894),oe=n(1164),ie=n(3739),ce=n(7167);const le=(0,h.op)({denseBincount_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=(0,u.YT)(e,"x","denseBincount"),s=(0,u.YT)(t,"weights","denseBincount");d.vA("int32"===r.dtype,()=>"Error in denseBincount: input "+"dtype must be int32, but got ".concat(r.dtype)),d.vA(r.rank<=2,()=>"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(r.rank,".")),d.vA(n>=0,()=>"size must be non-negative, but got ".concat(n,".")),d.vA(s.size===r.size||0===s.size,()=>"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(r.shape,", weights shape: ")+"".concat(s.shape,"."));const o={x:r,weights:s},i={size:n,binaryOutput:a};return c.T2.runKernel(l.wNW,o,i)}});var ue=n(1719),de=n(9899);const he=(0,h.op)({diag_:function(e){const t={x:(0,u.YT)(e,"x","diag")};return c.T2.runKernel(l.ORI,t)}});var pe=n(3789),fe=n(4974),me=n(44),ge=n(6434);const ye=(0,h.op)({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];const r=n.map((e,t)=>(0,u.YT)(e,"tensors".concat(t),"einsum")),s={equation:e};return c.T2.runKernel(l.Qgm,r,s)}});var be=n(3645);const ve=(0,h.op)({ensureShape_:function(e,t){const n=(0,u.YT)(e,"x","ensureShape","string_or_numeric");if(!(0,d.e_)(n.shape,t))throw new Error("EnsureShape: Shape of tensor ".concat(n.shape," is not compatible with expected shape ").concat(t));return e}});var xe=n(7457),we=n(8810),ke=n(8826),Se=n(5462),Te=n(4023),Ne=n(2520),Ie=n(3017);const Ce=(0,h.op)({eye_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";null==t&&(t=e);const r=(0,H.r)([e,t],a),s=e<=t?e:t;for(let i=0;i<s;++i)r.set(1,i,i);const o=(0,I.t)(r.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return(0,Ie.V)((0,Te.U)(o,0),[n[0],1,1]);if(2===n.length)return(0,Ie.V)((0,Te.U)((0,Te.U)(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,Ie.V)((0,Te.U)((0,Te.U)((0,Te.U)(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(n.length,"D."))}});var Ee=n(4660),Ae=n(8587),_e=n(3612),Re=n(6178),Fe=n(2759),De=n(9996),Oe=n(1047),Me=n(9027),ze=n(6005),Le=n(3467),Pe=n(8076),Be=n(8320),We=n(827);function Ve(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const a={start:e,stop:t,num:n};return c.T2.runKernel(l.mnI,{},a)}var Ue=n(6584),Ge=n(5911),He=n(1386),je=n(4824),qe=n(1194),Ye=n(2175),Ke=n(5692),Xe=n(5344),Ze=n(7920),Qe=n(3708);const $e=2147483648;const Je=(0,h.op)({searchSorted_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"left";const a=(0,u.YT)(e,"sortedSequence","searchSorted"),r=(0,u.YT)(t,"values","searchSorted"),s=a.shape[a.shape.length-1],o=r.shape[r.shape.length-1],i=(0,I.t)(a,[-1,s]),h=(0,I.t)(r,[-1,o]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==h.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,d.Ze)(h.shape)>=$e)throw new Error("values tensor size must less than ".concat($e));if(i.shape[1]>=$e)throw new Error("trailing dim_size must less than ".concat($e," for int32 output type, was ").concat(i.shape[1]));const p={sortedSequence:i,values:h},f={side:n};return c.T2.runKernel(l.uWl,p,f)}});function et(e,t){return Je(e,t,"left")}var tt=n(891),nt=n(6044);const at=(0,h.op)({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=(0,u.YT)(e,"x","maxPool3d");let i=o,h=!1;4===o.rank&&(h=!0,i=(0,I.t)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d.vA(5===i.rank,()=>"Error in maxPool3d: x must be rank 5 but got rank ".concat(i.rank,".")),d.vA("NDHWC"===s,()=>"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s)),(0,N.s_)("maxPool3d",a,r);const p={x:i},f={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s},m=c.T2.runKernel(l.ySp,p,f);return h?(0,I.t)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});const rt=(0,h.op)({maxPoolWithArgmax_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const s={x:(0,u.YT)(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:a,includeBatchInIndex:r},i=c.T2.runKernel(l.TL8,s,o);return{result:i[0],indexes:i[1]}}});var st=n(2131),ot=n(3015),it=n(4616),ct=n(9494);function lt(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError("".concat(n," is not a valid third argument to meshgrid"));if(void 0===e)return[];let a=(0,u.YT)(e,"x","meshgrid",e instanceof ct.qY?e.dtype:"float32");if(void 0===t)return[a];let r=(0,u.YT)(t,"y","meshgrid",t instanceof ct.qY?t.dtype:"float32");const s=(0,d.Ze)(a.shape),o=(0,d.Ze)(r.shape);return"xy"===n?(a=(0,I.t)(a,[1,-1]),r=(0,I.t)(r,[-1,1]),[(0,A.N)((0,it.S)([o,1],a.dtype),a),(0,A.N)(r,(0,it.S)([1,s],r.dtype))]):(a=(0,I.t)(a,[-1,1]),r=(0,I.t)(r,[1,-1]),[(0,A.N)(a,(0,it.S)([1,o],a.dtype)),(0,A.N)((0,it.S)([s,1],r.dtype),r)])}var ut=n(1465),dt=n(6561),ht=n(4252),pt=n(3617),ft=n(9235),mt=n(7738),gt=n(7951);const yt=(0,h.op)({moments_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];e=(0,u.YT)(e,"x","moments");const a=(0,d.Y6)(t,e.shape),r=(0,ot.i)(e,a,n);let s=r.shape;n||(s=(0,ft.SM)(r.shape,a));const o=(0,mt.E)((0,gt.j)((0,T.w)(e,"float32"),(0,I.t)(r,s)));return{mean:r,variance:(0,ot.i)(o,a,n)}}});const bt=(0,h.op)({multiRNNCell_:function(e,t,n,a){const r=(0,u.YT)(t,"data","multiRNNCell"),s=(0,u.j1)(n,"c","multiRNNCell"),o=(0,u.j1)(a,"h","multiRNNCell");let i=r;const c=[];for(let u=0;u<e.length;u++){const t=e[u](i,s[u],o[u]);c.push(t[0]),c.push(t[1]),i=t[1]}const l=[],d=[];for(let u=0;u<c.length;u+=2)l.push(c[u]),d.push(c[u+1]);return[l,d]}});const vt=(0,h.op)({multinomial_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=(0,u.YT)(e,"logits","multinomial"),s=r.size,o=r.rank;if(s<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+"".concat(s,"."));if(o>2)throw new Error("Rank of probabilities must be 1 or 2, but is ".concat(o));n=n||Math.random();const i={logits:1===o?(0,I.t)(r,[1,-1]):r},d={numSamples:t,seed:n,normalized:a},h=c.T2.runKernel(l.WT3,i,d);return 1===o?(0,I.t)(h,[h.size]):h}});var xt=n(1011),wt=n(135),kt=n(6865),St=n(4100);const Tt=(0,h.op)({outerProduct_:function(e,t){const n=(0,u.YT)(e,"v1","outerProduct"),a=(0,u.YT)(t,"v2","outerProduct");d.vA(1===n.rank&&1===a.rank,()=>"Error in outerProduct: inputs must be rank 1, but got ranks "+"".concat(n.rank," and ").concat(a.rank,"."));const r=(0,I.t)(n,[-1,1]),s=(0,I.t)(a,[1,-1]);return(0,A.N)(r,s)}});var Nt=n(5048);const It=(0,h.op)({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),(0,Nt.e)(e,[t],n)}});const Ct=(0,h.op)({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),(0,Nt.e)(e,t,n)}});const Et=(0,h.op)({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),(0,Nt.e)(e,t,n)}});const At=(0,h.op)({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),(0,Nt.e)(e,t,n)}});var _t=n(7751),Rt=n(7587),Ft=n(9855),Dt=n(6574),Ot=n(9556);const Mt=(0,h.op)({raggedGather_:function(e,t,n,a){const r={paramsNestedSplits:e.map((e,t)=>(0,u.YT)(e,"tensors".concat(t),"raggedGather","int32")),paramsDenseValues:(0,u.YT)(t,"paramsDenseValues","raggedGather"),indices:(0,u.YT)(n,"indices","raggedGather","int32")},s={outputRaggedRank:a},o=c.T2.runKernel(l.oJ2,r,s);return{outputNestedSplits:o.slice(0,o.length-1),outputDenseValues:o[o.length-1]}}});const zt=(0,h.op)({raggedRange_:function(e,t,n){const a=(0,u.YT)(e,"starts","raggedRange"),r={starts:a,limits:(0,u.YT)(t,"limits","raggedRange",a.dtype),deltas:(0,u.YT)(n,"deltas","raggedRange",a.dtype)},s=c.T2.runKernel(l.CQC,r);return{rtNestedSplits:s[0],rtDenseValues:s[1]}}});const Lt=(0,h.op)({raggedTensorToTensor_:function(e,t,n,a,r){const s=(0,u.YT)(e,"shape","raggedTensorToTensor","int32"),o=(0,u.YT)(t,"values","raggedTensorToTensor"),i={shape:s,values:o,defaultValue:(0,u.YT)(n,"defaultValue","raggedTensorToTensor",o.dtype),rowPartitionTensors:a.map((e,t)=>(0,u.YT)(e,"tensors".concat(t),"raggedTensorToTensor","int32"))},d={rowPartitionTypes:r};return c.T2.runKernel(l.mH5,i,d)}});const Pt=(0,h.op)({rand_:function(e,t,n){(0,d.SA)(e);const a=(0,d.Ze)(e);let r=null;if(null==n||"float32"===n)r=new Float32Array(a);else if("int32"===n)r=new Int32Array(a);else{if("bool"!==n)throw new Error("Unknown data type ".concat(n));r=new Uint8Array(a)}for(let s=0;s<a;s++)r[s]=t();return c.T2.makeTensor(r,e,n)}});var Bt=n(4334);class Wt{constructor(e,t,n,a,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=r||Math.random();this.random=Bt.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,r,s;do{a=2*this.random()-1,r=2*this.random()-1,s=a*a+r*r}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*a*o,t=this.mean+this.stdDev*r*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Vt{constructor(e,t,n,a){this.alpha=e,this.beta=1/t,this.dtype=n;const r=a||Math.random();this.randu=Bt.alea(r.toString()),this.randn=new Wt(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,a,r,s;for(;;){do{a=this.randn.nextValue(),s=1+this.c*a}while(s<=0);if(s*=s*s,e=a*a,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),r=this.randu(),r<t||Math.log(r)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Ut{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(e," - ").concat(t," <= 1 and dtype is not float"));this.random=Bt.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Gt=(0,h.op)({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;if((0,d.SA)(e),null==n&&(n=1),null==a&&(a="float32"),"float32"!==a&&"int32"!==a)throw new Error("Unsupported data type ".concat(a));const s=new Vt(t,n,a,r),o=(0,H.r)(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const Ht=(0,h.op)({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if((0,d.SA)(e),null!=a&&"bool"===a)throw new Error("Unsupported data type ".concat(a));const s=new Wt(t,n,a,!1,r),o=(0,H.r)(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const jt=(0,h.op)({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error("Unsupported data type ".concat(t));return Ht(e,0,1,t,n)}});const qt=(0,h.op)({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;(0,d.SA)(e);const s=(0,H.r)(e,a),o=new Ut(t,n,null,r);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});const Yt=(0,h.op)({randomUniformInt_:function(e,t,n,a){return qt(e,t,n,"int32",a)}});function Kt(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:a};return c.T2.runKernel(l.Q6t,{},r)}var Xt=n(9477),Zt=n(6309),Qt=n(5251),$t=n(9721),Jt=n(7419);const en=(0,h.op)({reverse1d_:function(e){const t=(0,u.YT)(e,"x","reverse");return d.vA(1===t.rank,()=>"Error in reverse1D: x must be rank 1 but got rank ".concat(t.rank,".")),(0,Jt.B)(t,0)}});const tn=(0,h.op)({reverse2d_:function(e,t){const n=(0,u.YT)(e,"x","reverse");return d.vA(2===n.rank,()=>"Error in reverse2D: x must be rank 2 but got rank ".concat(n.rank,".")),(0,Jt.B)(n,t)}});const nn=(0,h.op)({reverse3d_:function(e,t){const n=(0,u.YT)(e,"x","reverse");return d.vA(3===n.rank,()=>"Error in reverse3D: x must be rank 3 but got rank ".concat(n.rank,".")),(0,Jt.B)(n,t)}});const an=(0,h.op)({reverse4d_:function(e,t){const n=(0,u.YT)(e,"x","reverse");return d.vA(4===n.rank,()=>"Error in reverse4D: x must be rank 4 but got rank ".concat(n.rank,".")),(0,Jt.B)(n,t)}});var rn=n(6509),sn=n(6777),on=n(1997),cn=n(2022),ln=n(3117);const un=async function(e,t){const n=(0,u.YT)(e,"x","setdiff1d"),a=(0,u.YT)(t,"y","setdiff1d");d.vA(n.dtype===a.dtype,()=>"x and y should have the same dtype, but got x (".concat(n.dtype,") and y (").concat(a.dtype,").")),d.vA(1===n.rank,()=>"x should be 1D tensor, but got x (".concat(n.shape,").")),d.vA(1===a.rank,()=>"y should be 1D tensor, but got y (".concat(a.shape,")."));const r=await n.data(),s=await a.data(),o=new Set(s);let i=0;for(let u=0;u<r.length;u++)o.has(r[u])||i++;const c=new ct.yl([i],n.dtype),l=new ct.yl([i],"int32");for(let u=0,d=0;u<r.length;u++)o.has(r[u])||(c.values[d]=r[u],l.values[d]=u,d++);return[c.toTensor(),l.toTensor()]};var dn=n(5740),hn=n(9519),pn=n(8143);const fn=(0,h.op)({slice1d_:function(e,t,n){const a=(0,u.YT)(e,"x","slice1d");return d.vA(1===a.rank,()=>"slice1d expects a rank-1 tensor, but got a rank-".concat(a.rank," tensor")),(0,F.d)(a,[t],[n])}});const mn=(0,h.op)({slice2d_:function(e,t,n){const a=(0,u.YT)(e,"x","slice2d");return d.vA(2===a.rank,()=>"slice2d expects a rank-2 tensor, but got a rank-".concat(a.rank," tensor")),(0,F.d)(a,t,n)}});const gn=(0,h.op)({slice3d_:function(e,t,n){const a=(0,u.YT)(e,"x","slice3d");return d.vA(3===a.rank,()=>"slice3d expects a rank-3 tensor, but got a rank-".concat(a.rank," tensor")),(0,F.d)(a,t,n)}});const yn=(0,h.op)({slice4d_:function(e,t,n){const a=(0,u.YT)(e,"x","slice4d");return d.vA(4===a.rank,()=>"slice4d expects a rank-4 tensor, but got a rank-".concat(a.rank," tensor")),(0,F.d)(a,t,n)}});var bn=n(6719),vn=n(9973),xn=n(3585),wn=n(3062),kn=n(1405),Sn=n(7307),Tn=n(9486),Nn=n(5181),In=n(191),Cn=n(208),En=n(613),An=n(901),_n=n(319),Rn=n(1231),Fn=n(7382),Dn=n(4894),On=n(8032),Mn=n(9914);function zn(e,t){(0,d.HO)(e);const n=(0,u.MZ)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,Mn.Q)(e,null,n,t)}function Ln(e,t,n){if((0,d.HO)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const a=(0,u.MZ)(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,Mn.Q)(e,t,a,n)}var Pn=n(5395);function Bn(e,t,n){if((0,d.HO)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const a=(0,u.MZ)(e,n);if(4!==a.length&&1!==a.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,Mn.Q)(e,t,a,n)}function Wn(e,t,n){if((0,d.HO)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const a=(0,u.MZ)(e,n);if(5!==a.length&&1!==a.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,Mn.Q)(e,t,a,n)}function Vn(e,t,n){if((0,d.HO)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const a=(0,u.MZ)(e,n);if(6!==a.length&&1!==a.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||a,(0,Mn.Q)(e,t,a,n)}var Un=n(4083);const Gn=(0,h.op)({tensorScatterUpdate_:function(e,t,n){const a=(0,u.YT)(e,"tensor","tensorScatterupdate"),r=(0,u.YT)(t,"indices","tensorScatterupdate","int32"),s=(0,u.YT)(n,"updates","tensorScatterupdate");if(Un.validateInput(s,r,a.shape),a.dtype!==s.dtype)throw new Error("tensor and updates must have the same dtype, instead they are ".concat(a.dtype," and ").concat(s.dtype,"."));const o={tensor:a,indices:r,updates:s};return c.T2.runKernel(l.X4r,o,{})}});var Hn=n(2765);const jn=(0,h.op)({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if((0,d.SA)(e),null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const s=new Wt(t,n,a,!0,r),o=(0,H.r)(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});var qn=n(9694),Yn=n(5149),Kn=n(3984);function Xn(e,t){return Je(e,t,"right")}function Zn(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return c.T2.makeVariable(e,t,n,a)}var Qn=n(3986),$n=n(9286);const Jn=async function(e){const t=(0,u.YT)(e,"condition","whereAsync","bool"),n=await t.data(),a=(0,$n.Y)(t.shape,n);return e!==t&&t.dispose(),a};var ea=n(4218),ta=n(3290);const na=async function(e,t,n){const a=(0,u.YT)(e,"tensor","boolMask"),r=(0,u.YT)(t,"mask","boolMask","bool"),s=null==n?0:n,o=r.rank,i=a.shape;d.vA(o>0,()=>"mask cannot be scalar"),d.O3(i.slice(s,s+o),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let u=s;u<s+o;u++)c*=i[u];const l=i.slice(0,s).concat([c],i.slice(s+o)),h=(0,I.t)(a,l),p=(0,I.t)(r,[-1]),f=await Jn(p),m=(0,En.r)(f,[1]),g=(0,Re.k)(h,m,s);return e!==a&&a.dispose(),t!==r&&r.dispose(),m.dispose(),h.dispose(),p.dispose(),f.dispose(),g};var aa=n(2154),ra=n(2155),sa=n(8804);const oa=(0,h.op)({movingAverage_:function(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const s=(0,u.YT)(e,"v","movingAverage"),o=(0,u.YT)(t,"x","movingAverage"),c=(0,u.YT)(n,"decay","movingAverage");(0,sa.assertTypesMatch)(s,o),d.vA(d.r1(s.shape,o.shape),()=>"Shape mismatch in v and x");const l=(0,on.d)(1),h=(0,gt.j)(l,c);let p=(0,_.l)((0,gt.j)(o,s),h);if(r){d.vA(null!=a,()=>"When using zeroDebias: true, step is required.");const e=(0,u.YT)(a,"step","movingAverage");p=(0,fe.y)(p,(0,gt.j)(l,(0,Rt.n)(c,e)))}return(0,i.W)(s,p)}});const ia=(0,h.op)({scatterND_:function(e,t,n){(0,d.SA)(n);const a=(0,u.YT)(e,"indices","scatterND","int32"),r=(0,u.YT)(t,"updates","scatterND");Un.validateInput(r,a,n);const s={indices:a,updates:r},o={shape:n};return c.T2.runKernel(l.pJc,s,o)}});const ca=(0,h.op)({sparseToDense_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;(0,d.SA)(n);const r=(0,u.YT)(e,"sparseIndices","sparseToDense","int32"),s=(0,u.YT)(t,"sparseValues","sparseToDense","string_or_numeric"),o=(0,u.YT)(a,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,a){if("int32"!==e.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type,"+" but the dtype was ".concat(e.dtype,"."));if(e.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix,"+" but got shape ".concat(e.shape,"."));const r=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error("outputShape has incorrect number of elements:,"+" ".concat(n.length,", should be: ").concat(s,"."));const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==r))throw new Error("sparseValues has incorrect shape "+"".concat(t.shape,", should be [] or [").concat(r,"]"));if(t.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,s,n,o);const i={sparseIndices:r,sparseValues:s,defaultValue:o},h={outputShape:n};return c.T2.runKernel(l.jgd,i,h)}});const la=(0,h.op)({gatherND_:function(e,t){const n=(0,u.YT)(t,"indices","gatherND","int32"),a={params:(0,u.YT)(e,"x","gatherND","string_or_numeric"),indices:n};return c.T2.runKernel(l.O4G,a)}});const ua=(0,h.op)({dropout_:function(e,t,n,a){const r=(0,u.YT)(e,"x","dropout");if(d.vA("float32"===r.dtype,()=>"x has to be a floating point tensor since it's going to be "+"scaled, but got a ".concat(r.dtype," tensor instead.")),d.vA(t>=0&&t<1,()=>"rate must be a float in the range [0, 1), but got ".concat(t,".")),0===t)return e instanceof ct.qY?r.clone():r;const s=function(e,t){if(null==t)return e.shape.slice();if(d.r1(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}(r,n),o=1-t,c=(0,fe.y)((0,Ae.R)((0,i.W)(qt(s,0,1,"float32",a),o)),o);return(0,_.l)(r,c)}});function da(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function ha(e,t,n){const a=1-e%2,r=new Float32Array(e);for(let s=0;s<e;++s){const o=2*Math.PI*s/(e+a-1);r[s]=t-n*Math.cos(o)}return zn(r,"float32")}const pa=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const a=(0,u.YT)(e,"predictions","inTopK"),r=(0,u.YT)(t,"targets","inTopK");(0,d.vA)(a.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, "+"but got ".concat(a.rank)),(0,d.vA)(a.rank-1===r.rank,()=>"predictions rank should be 1 larger than targets rank, but got predictions rank "+"".concat(a.rank," and targets rank ").concat(r.rank)),(0,d.O3)(a.shape.slice(0,a.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=a.shape[a.shape.length-1];(0,d.vA)(n>0&&n<=s,()=>"'k' passed to inTopK() must be > 0 && <= the predictions last "+"dimension (".concat(s,"), but got ").concat(n));const o=await a.data(),i=await r.data(),[c,l]=[o.length/s,s],h=(0,d.ce)("bool",c);for(let u=0;u<c;u++){const e=u*l,t=o.subarray(e,e+l),a=[];for(let n=0;n<t.length;n++)a.push({value:t[n],index:n});a.sort((e,t)=>t.value-e.value),h[u]=0;for(let r=0;r<n;r++)if(a[r].index===i[u]){h[u]=1;break}}return e!==a&&a.dispose(),t!==r&&r.dispose(),(0,On.O)(h,r.shape,"bool")};var fa=n(1839),ma=n(8805),ga=n(6927),ya=n(1565),ba=n(7905);const va=(0,h.op)({fusedConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:h,bias:p,activation:f="linear",preluActivationWeights:m,leakyreluAlpha:g}=e;if(f=f||"linear",!1===(0,ba.zE)(c.T2.state.gradientDepth,f)){d.vA("NHWC"===s,()=>"Error in fused conv2d: got dataFormat of ".concat(s," but ")+"only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.");let e=(0,ee.X)(t,n,a,r,s,o,h);return null!=p&&(e=(0,i.W)(e,p)),(0,ba.f2)(e,f,m,g)}const y=(0,u.YT)(t,"x","conv2d","float32"),b=(0,u.YT)(n,"filter","conv2d","float32");let v=y,x=!1;3===y.rank&&(x=!0,v=(0,I.t)(y,[1,y.shape[0],y.shape[1],y.shape[2]])),d.vA(4===v.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(v.rank,".")),d.vA(4===b.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(b.rank,".")),N.s_("fused conv2d",r,h);const w="NHWC"===s?v.shape[3]:v.shape[1];d.vA(b.shape[2]===w,()=>"Error in conv2d: depth of input (".concat(w,") must match ")+"input depth for filter ".concat(b.shape[2],".")),d.vA(N.G0(a,o),()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(a," and dilations '").concat(o,"'"));const k=N.uf(v.shape,b.shape,a,o,r,h);let S,T;if(null!=p&&(S=(0,u.YT)(p,"bias","fused conv2d"),[S]=(0,sa.makeTypesMatch)(S,y),"NHWC"===s?ma.assertAndGetBroadcastShape(k.outShape,S.shape):(d.vA(S.shape.length<=1,()=>"Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of "+"rank-".concat(S.shape.length,".")),d.vA(0===S.shape.length||S.shape[0]===k.outChannels||1===S.shape[0],()=>"Error in fused conv2d: bias shape (".concat(S.shape,") is not ")+"compatible with the number of output channels "+"(".concat(k.outChannels,")")))),null!=m){const e=m.shape;if(d.vA(e.length<=1||3===e.length,()=>"Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of "+"rank-".concat(e.length,".")),1===e.length)d.vA(1===e[0]||e[0]===k.outChannels,()=>"Error in fused conv2d: PReLU activation weights "+"(".concat(e,") is not compatible with the number of output ")+"channels (".concat(k.outChannels,")."));else if(3===e.length)try{ma.assertAndGetBroadcastShape(e,k.outShape)}catch(_){const t="Error in fused conv2d: PReLU activation weights (".concat(e,") ")+"is not compatible with the output shape of the conv2d "+"(".concat(k.outShape,").");throw Error(t)}T=(0,u.YT)(m,"prelu weights","fused conv2d")}const C=(e,t)=>{d.vA("NHWC"===s,()=>"Error in gradient of fused conv2D: got dataFormat of ".concat(s," but only NHWC is currently supported."));const[n,i,c,l]=t,u=(0,ba.XB)(e,c,f);d.vA(N.Dh(o),()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(o,"'"));const h=[(0,ya.v)(i.shape,u,n,a,r),(0,ga.H)(i,u,n.shape,a,r)];if(null!=l){const e=(0,ba.Do)(l,u);h.push(e)}return h},E={x:v,filter:b,bias:S,preluActivationWeights:T},A={strides:a,pad:r,dataFormat:s,dilations:o,dimRoundingMode:h,activation:f,leakyreluAlpha:g};if(null==p){const e=(0,fa._X)((e,t,n)=>{let a=c.T2.runKernel(l.aAr,E,A);return n([t,e,a]),x&&(a=(0,I.t)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:C}});return e(v,b)}{const e=(0,fa._X)((e,t,n,a)=>{let r=c.T2.runKernel(l.aAr,E,A);return a([t,e,r,n]),x&&(r=(0,I.t)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:C}});return e(v,b,S)}}});var xa=n(7399),wa=n(261);const ka=(0,h.op)({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:h,bias:p,activation:f="linear",preluActivationWeights:m,leakyreluAlpha:g}=e;if(!1===(0,ba.zE)(c.T2.state.gradientDepth,f)){let e=(0,de.G)(t,n,a,r,s,o,h);return null!=p&&(e=(0,i.W)(e,p)),(0,ba.f2)(e,f,m,g)}const y=(0,u.YT)(t,"x","depthwiseConv2d","float32"),b=(0,u.YT)(n,"filter","depthwiseConv2d","float32");let v=y,x=!1;3===y.rank&&(x=!0,v=(0,I.t)(y,[1,y.shape[0],y.shape[1],y.shape[2]])),d.vA(4===v.rank,()=>"Error in fused depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(v.rank,".")),d.vA(4===b.rank,()=>"Error in fused depthwiseConv2d: filter must be rank 4, "+"but got rank ".concat(b.rank,".")),d.vA(v.shape[3]===b.shape[2],()=>"Error in fused depthwiseConv2d: number of input channels "+"(".concat(v.shape[3],") must match the inChannels dimension in ")+"filter ".concat(b.shape[2],".")),null==o&&(o=[1,1]),d.vA(N.G0(a,o),()=>"Error in fused depthwiseConv2d: Either strides or dilations must "+"be 1. Got strides ".concat(a," and dilations '").concat(o,"'")),N.s_("fused depthwiseConv2d",r,h);const w=N.uf(v.shape,b.shape,a,o,r,h,!0);let k,S;null!=p&&(k=(0,u.YT)(p,"bias","fused conv2d"),[k]=(0,sa.makeTypesMatch)(k,y),ma.assertAndGetBroadcastShape(w.outShape,k.shape)),null!=m&&(S=(0,u.YT)(m,"prelu weights","fused depthwiseConv2d"));const T=(e,t)=>{d.vA(N.Dh(o),()=>"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(o,"'"));const[n,s,i,c]=t,l=(0,ba.XB)(e,i,f),u=(0,wa.l)(s.shape,l,n,a,r,o,h),p=(0,xa.x)(s,l,n.shape,a,r,o,h);if(null!=c){return[u,p,(0,ba.Do)(k,l)]}return[u,p]},C={x:v,filter:b,bias:k,preluActivationWeights:S},E={strides:a,pad:r,dataFormat:s,dilations:o,dimRoundingMode:h,activation:f,leakyreluAlpha:g};if(null==p){const e=(0,fa._X)((e,t,n)=>{let a=c.T2.runKernel(l.T7M,C,E);return n([t,e,a]),x&&(a=(0,I.t)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:T}});return e(v,b)}{const e=(0,fa._X)((e,t,n,a)=>{let r=c.T2.runKernel(l.T7M,C,E);return a([t,e,r,n]),x&&(r=(0,I.t)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:T}});return e(v,b,k)}}});const Sa=(0,h.op)({fusedMatMul_:function(e){let{a:t,b:n,transposeA:a=!1,transposeB:r=!1,bias:s,activation:o="linear",preluActivationWeights:h,leakyreluAlpha:p=.2}=e;if(!1===(0,ba.zE)(c.T2.state.gradientDepth,o)){let e=(0,A.N)(t,n,a,r);return null!=s&&(e=(0,i.W)(e,s)),(0,ba.f2)(e,o,h,p)}let f=(0,u.YT)(t,"a","fused matMul"),m=(0,u.YT)(n,"b","fused matMul");[f,m]=(0,sa.makeTypesMatch)(f,m);const g=a?f.shape[f.rank-2]:f.shape[f.rank-1],y=r?m.shape[m.rank-1]:m.shape[m.rank-2],b=a?f.shape[f.rank-1]:f.shape[f.rank-2],v=r?m.shape[m.rank-2]:m.shape[m.rank-1],x=f.shape.slice(0,-2),w=m.shape.slice(0,-2),k=d.Ze(x),S=d.Ze(w);d.vA(g===y,()=>"Error in fused matMul: inner shapes (".concat(g,") and (")+"".concat(y,") of Tensors with shapes ").concat(f.shape," and ")+"".concat(m.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match."));const T=ma.assertAndGetBroadcastShape(f.shape.slice(0,-2),m.shape.slice(0,-2)).concat([b,v]),N=a?(0,I.t)(f,[k,g,b]):(0,I.t)(f,[k,b,g]),C=r?(0,I.t)(m,[S,v,y]):(0,I.t)(m,[S,y,v]);let E,_;null!=s&&(E=(0,u.YT)(s,"bias","fused matMul"),[E]=(0,sa.makeTypesMatch)(E,f),ma.assertAndGetBroadcastShape(T,E.shape)),null!=h&&(_=(0,u.YT)(h,"prelu weights","fused matMul"));const R=(e,t)=>{const[n,i,c,l]=t,u=(0,ba.XB)((0,I.t)(e,c.shape),c,o);let d,h;if(a||r?!a&&r?(d=(0,A.N)(u,i,!1,!1),h=(0,A.N)(u,n,!0,!1)):a&&!r?(d=(0,A.N)(i,u,!1,!0),h=(0,A.N)(n,u,!1,!1)):(d=(0,A.N)(i,u,!0,!0),h=(0,A.N)(u,n,!0,!0)):(d=(0,A.N)(u,i,!1,!0),h=(0,A.N)(n,u,!0,!1)),null!=s){return[d,h,(0,ba.Do)(l,u)]}return[d,h]},F={a:N,b:C,bias:E,preluActivationWeights:_},D={transposeA:a,transposeB:r,activation:o,leakyreluAlpha:p};if(null==s){const e=(0,fa._X)((e,t,n)=>{const a=c.T2.runKernel(l.Dr,F,D);return n([e,t,a]),{value:(0,I.t)(a,T),gradFunc:R}});return e(N,C)}{const e=(0,fa._X)((e,t,n,a)=>{const r=c.T2.runKernel(l.Dr,F,D);return a([e,t,r,n]),{value:(0,I.t)(r,T),gradFunc:R}});return e(N,C,E)}}});const Ta=(0,h.op)({hammingWindow_:function(e){return ha(e,.54,.46)}});const Na=(0,h.op)({hannWindow_:function(e){return ha(e,.5,.5)}});const Ia=(0,h.op)({frame_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=0;const o=[];for(;s+t<=e.size;)o.push((0,F.d)(e,s,t)),s+=n;if(a)for(;s<e.size;){const a=s+t-e.size,i=(0,E.x)([(0,F.d)(e,s,t-a),(0,Ee.G)([a],r)]);o.push(i),s+=n}return 0===o.length?Ln([],[0,t]):(0,I.t)((0,E.x)(o),[o.length,t])}});const Ca=(0,h.op)({stft_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Na;null==a&&(a=da(t));const s=Ia(e,t,n),o=(0,_.l)(s,r(t));return(0,Tn.z)(o,a)}});const Ea=(0,h.op)({cropAndResize_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=(0,u.YT)(e,"image","cropAndResize"),i=(0,u.YT)(t,"boxes","cropAndResize","float32"),h=(0,u.YT)(n,"boxInd","cropAndResize","int32"),p=i.shape[0];d.vA(4===o.rank,()=>"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(o.rank,".")),d.vA(2===i.rank&&4===i.shape[1],()=>"Error in cropAndResize: boxes must be have size [".concat(p,",4] ")+"but had shape ".concat(i.shape,".")),d.vA(1===h.rank&&h.shape[0]===p,()=>"Error in cropAndResize: boxInd must be have size [".concat(p,"] ")+"but had shape ".concat(i.shape,".")),d.vA(2===a.length,()=>"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(a.length,".")),d.vA(a[0]>=1&&a[1]>=1,()=>"cropSize must be atleast [1,1], but was ".concat(a)),d.vA("bilinear"===r||"nearest"===r,()=>"method must be bilinear or nearest, but was ".concat(r));const f={image:o,boxes:i,boxInd:h},m={method:r,extrapolationValue:s,cropSize:a};return c.T2.runKernel(l.MRQ,f,m)}});const Aa=(0,h.op)({flipLeftRight_:function(e){const t=(0,u.YT)(e,"image","flipLeftRight","float32");d.vA(4===t.rank,()=>"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(t.rank,"."));const n={image:t};return c.T2.runKernel(l.BxF,n,{})}});const _a=(0,h.op)({grayscaleToRGB_:function(e){const t=(0,u.YT)(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];d.vA(t.rank>=2,()=>"Error in grayscaleToRGB: images must be at least rank 2, "+"but got rank ".concat(t.rank,".")),d.vA(1===a,()=>"Error in grayscaleToRGB: last dimension of a grayscale image "+"should be size 1, but got size ".concat(a,"."));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,(0,Ie.V)(t,r)}});const Ra=(0,h.op)({rgbToGrayscale_:function(e){const t=(0,u.YT)(e,"image","RGBToGrayscale"),n=t.rank-1,a=t.shape[n];d.vA(t.rank>=2,()=>"Error in RGBToGrayscale: images must be at least rank 2, "+"but got rank ".concat(t.rank,".")),d.vA(3===a,()=>"Error in RGBToGrayscale: last dimension of an RGB image "+"should be size 3, but got size ".concat(a,"."));const r=t.dtype,s=(0,T.w)(t,"float32"),o=zn([.2989,.587,.114]);let i;switch(t.rank){case 2:i=ye("ij,j->i",s,o);break;case 3:i=ye("ijk,k->ij",s,o);break;case 4:i=ye("ijkl,l->ijk",s,o);break;case 5:i=ye("ijklm,m->ijkl",s,o);break;case 6:i=ye("ijklmn,n->ijklm",s,o);break;default:throw new Error("Not a valid tensor rank.")}return i=(0,Te.U)(i,-1),(0,T.w)(i,r)}});const Fa=(0,h.op)({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=(0,u.YT)(e,"image","rotateWithOffset","float32");d.vA(4===r.rank,()=>"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(r.rank,"."));const s={image:r},o={radians:t,fillValue:n,center:a};return c.T2.runKernel(l.BK4,s,o)}});function Da(e,t,n,a,r,s){null==a&&(a=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=e.shape[0];return n=Math.min(n,o),d.vA(0<=a&&a<=1,()=>"iouThreshold must be in [0, 1], but was '".concat(a,"'")),d.vA(2===e.rank,()=>"boxes must be a 2D tensor, but was of rank '".concat(e.rank,"'")),d.vA(4===e.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was ".concat(e.shape[1])),d.vA(1===t.rank,()=>"scores must be a 1D tensor"),d.vA(t.shape[0]===o,()=>"scores has incompatible shape with boxes. Expected ".concat(o,", ")+"but was ".concat(t.shape[0])),d.vA(0<=s&&s<=1,()=>"softNmsSigma must be in [0, 1], but was '".concat(s,"'")),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s}}const Oa=(0,h.op)({nonMaxSuppression_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=(0,u.YT)(e,"boxes","nonMaxSuppression","float32"),o=(0,u.YT)(t,"scores","nonMaxSuppression","float32"),i=Da(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const d={maxOutputSize:n,iouThreshold:a,scoreThreshold:r};return c.T2.runKernel(l.SDM,{boxes:s,scores:o},d)}});var Ma=n(6692);const za=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=(0,u.YT)(e,"boxes","nonMaxSuppressionAsync"),o=(0,u.YT)(t,"scores","nonMaxSuppressionAsync"),i=Da(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const c=await Promise.all([s.data(),o.data()]),l=c[0],d=c[1],{selectedIndices:h}=(0,Ma.c7)(l,d,n,a,r);return s!==e&&s.dispose(),o!==t&&o.dispose(),zn(h,"int32")};const La=(0,h.op)({nonMaxSuppressionWithScore_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=(0,u.YT)(e,"boxes","nonMaxSuppression"),i=(0,u.YT)(t,"scores","nonMaxSuppression"),d=Da(o,i,n,a,r,s);n=d.maxOutputSize,a=d.iouThreshold,r=d.scoreThreshold,s=d.softNmsSigma;const h={boxes:o,scores:i},p={maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s},f=c.T2.runKernel(l.e0f,h,p);return{selectedIndices:f[0],selectedScores:f[1]}}});const Pa=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=(0,u.YT)(e,"boxes","nonMaxSuppressionAsync"),i=(0,u.YT)(t,"scores","nonMaxSuppressionAsync"),c=Da(o,i,n,a,r,s);n=c.maxOutputSize,a=c.iouThreshold,r=c.scoreThreshold,s=c.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),d=l[0],h=l[1],{selectedIndices:p,selectedScores:f}=(0,Ma.ut)(d,h,n,a,r,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:zn(p,"int32"),selectedScores:zn(f)}};const Ba=(0,h.op)({nonMaxSuppressionPadded_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=(0,u.YT)(e,"boxes","nonMaxSuppression"),i=(0,u.YT)(t,"scores","nonMaxSuppression"),d=Da(o,i,n,a,r,null),h={boxes:o,scores:i},p={maxOutputSize:d.maxOutputSize,iouThreshold:d.iouThreshold,scoreThreshold:d.scoreThreshold,padToMaxOutputSize:s},f=c.T2.runKernel(l.Zl4,h,p);return{selectedIndices:f[0],validOutputs:f[1]}}});const Wa=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=(0,u.YT)(e,"boxes","nonMaxSuppressionAsync"),i=(0,u.YT)(t,"scores","nonMaxSuppressionAsync"),c=Da(o,i,n,a,r,null),l=c.maxOutputSize,d=c.iouThreshold,h=c.scoreThreshold,[p,f]=await Promise.all([o.data(),i.data()]),{selectedIndices:m,validOutputs:g}=(0,Ma.ZS)(p,f,l,d,h,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:zn(m,"int32"),validOutputs:(0,on.d)(g,"int32")}};var Va=n(2214),Ua=n(2823);const Ga=(0,h.op)({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=(0,u.YT)(e,"image","threshold"),s=r.shape[0]*r.shape[1];let o,c,l,h,p=(0,_.l)(zn([a]),255);if(d.vA(3===r.rank,()=>"Error in threshold: image must be rank 3,"+"but got rank ".concat(r.rank,".")),d.vA(3===r.shape[2]||1===r.shape[2],()=>"Error in threshold: image color channel must be equal to 3 or 1"+"but got ".concat(r.shape[2],".")),d.vA("int32"===r.dtype||"float32"===r.dtype,()=>"Error in dtype: image dtype must be int32 or float32,"+"but got dtype ".concat(r.dtype,".")),d.vA("otsu"===t||"binary"===t,()=>"Method must be binary or otsu, but was ".concat(t)),3===r.shape[2]){[o,c,l]=(0,Nn.l)(r,[1,1,1],-1);const e=(0,_.l)(o,.2989),t=(0,_.l)(c,.587),n=(0,_.l)(l,.114);h=(0,i.W)((0,i.W)(e,t),n)}else h=e;if("otsu"===t){p=function(e,t){let n,a,r,s,o,c,l=zn([-1]),u=zn([0]),d=zn([0]);for(let h=0;h<e.size-1;h++){n=(0,F.d)(e,0,h+1),a=(0,F.d)(e,h+1),o=(0,fe.y)((0,Fn.c)(n),t),c=(0,fe.y)((0,Fn.c)(a),t);const p=(0,Fn.c)((0,_.l)(n,Kt(0,n.size)));r=(0,fe.y)(p,(0,Fn.c)(n));const f=(0,Ee.G)(a.shape,n.size),m=(0,i.W)(Kt(0,a.size),f),g=(0,_.l)(a,m);s=(0,fe.y)((0,Fn.c)(g),(0,Fn.c)(a));const y=(0,gt.j)(r,s),b=(0,gt.j)(r,s),v=(0,_.l)(o,c);d=(0,_.l)((0,_.l)(v,y),b);const x=(0,Fe.r)(d,u);u=(0,Qn._)(x,d,u),l=(0,Qn._)(x,zn([h]),l)}return l}(W((0,T.w)((0,rn.L)(h),"int32"),(0,On.O)([]),256),s)}const f=n?(0,We.I)(h,p):(0,Fe.r)(h,p);return(0,T.w)((0,_.l)(f,255),"int32")}});const Ha=(0,h.op)({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5?arguments[5]:void 0;const o=(0,u.YT)(e,"image","transform","float32"),i=(0,u.YT)(t,"transforms","transform","float32");d.vA(4===o.rank,()=>"Error in transform: image must be rank 4,"+"but got rank ".concat(o.rank,".")),d.vA(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),d.vA(null==s||2===s.length,()=>"Error in transform: outputShape must be [height, width] or null, "+"but got ".concat(s,"."));const h={image:o,transforms:i},p={interpolation:n,fillMode:a,fillValue:r,outputShape:s};return c.T2.runKernel(l.dLy,h,p)}});const ja=(0,h.op)({bandPart_:function(e,t,n){const a=(0,u.YT)(e,"a","bandPart");(0,d.vA)(a.rank>=2,()=>"bandPart(): Rank must be at least 2, got ".concat(a.rank,"."));const r=a.shape,[s,o]=a.shape.slice(-2);let i,c;"number"===typeof t?((0,d.vA)(t%1===0,()=>"bandPart(): numLower must be an integer, got ".concat(t,".")),(0,d.vA)(t<=s,()=>"bandPart(): numLower (".concat(t,")")+" must not be greater than the number of rows (".concat(s,").")),i=(0,u.YT)(t<0?s:t,"numLower","bandPart")):((0,d.vA)("int32"===t.dtype,()=>"bandPart(): numLower's dtype must be an int32."),i=(0,Qn._)((0,Be.M)(t,0),s,(0,dt.B)(t,s))),"number"===typeof n?((0,d.vA)(n%1===0,()=>"bandPart(): numUpper must be an integer, got ".concat(n,".")),(0,d.vA)(n<=o,()=>"bandPart(): numUpper (".concat(n,")")+" must not be greater than the number of columns (".concat(o,").")),c=(0,u.YT)(n<0?o:n,"numUpper","bandPart")):((0,d.vA)("int32"===n.dtype,()=>"bandPart(): numUpper's dtype must be an int32."),c=(0,Qn._)((0,Be.M)(n,0),o,(0,dt.B)(n,o)));const l=(0,I.t)(Kt(0,s,1,"int32"),[-1,1]),h=Kt(0,o,1,"int32"),p=(0,gt.j)(l,h),f=(0,Ke.n)((0,We.I)(p,i),(0,De.D)(p,(0,xt.H)(c))),m=(0,ea.U)([s,o],a.dtype);return(0,I.t)((0,An.t)((0,Kn.K)((0,I.t)(a,[-1,s,o])).map(e=>(0,Qn._)(f,e,m))),r)}});const qa=(0,h.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,d.vA)(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,d.vA)(e[t].shape[0]===n,()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(e[t].shape[0]," vs. ").concat(n,")"))}else t=!0,e=(0,Nn.l)(e,e.shape[0],0).map(e=>(0,En.r)(e,[0]));(0,d.vA)(e.length<=e[0].shape[0],()=>"Gram-Schmidt: Number of vectors (".concat(e.length,") exceeds ")+"number of dimensions (".concat(e[0].shape[0],")."));const n=[],a=e;for(let r=0;r<e.length;++r)n.push(c.T2.tidy(()=>{let e=a[r];if(r>0)for(let t=0;t<r;++t){const a=(0,_.l)((0,Fn.c)((0,_.l)(n[t],e)),n[t]);e=(0,gt.j)(e,a)}return(0,fe.y)(e,(0,ra.x)(e,"euclidean"))}));return t?(0,An.t)(n,0):n}});var Ya=n(8046);function Ka(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return c.T2.tidy(()=>{(0,d.vA)(2===e.shape.length,()=>"qr2d() requires a 2D Tensor, but got a ".concat(e.shape.length,"D Tensor."));const n=e.shape[0],a=e.shape[1];let r=Ce(n),s=(0,Y.o)(e);const o=Ln([[1]],[1,1]);let i=(0,Y.o)(o);const l=n>=a?a:n;for(let e=0;e<l;++e){const t=s,l=i,u=r;[i,s,r]=c.T2.tidy(()=>{const t=(0,F.d)(s,[e,e],[n-e,1]),c=(0,ra.x)(t),l=(0,F.d)(s,[e,e],[1,1]),u=(0,Qn._)((0,Fe.r)(l,0),Ln([[-1]]),Ln([[1]])),d=(0,gt.j)(l,(0,_.l)(u,c)),h=(0,fe.y)(t,d);i=1===h.shape[0]?(0,Y.o)(o):(0,E.x)([o,(0,F.d)(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=(0,xt.H)((0,fe.y)((0,A.N)(u,d),c)),f=(0,F.d)(s,[e,0],[n-e,a]),m=(0,_.l)(p,i),g=(0,aa.m)(i);if(0===e)s=(0,gt.j)(f,(0,A.N)(m,(0,A.N)(g,f)));else{const t=(0,gt.j)(f,(0,A.N)(m,(0,A.N)(g,f)));s=(0,E.x)([(0,F.d)(s,[0,0],[e,a]),t],0)}const y=(0,aa.m)(m),b=(0,F.d)(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=(0,gt.j)(b,(0,A.N)((0,A.N)(b,i),y));else{const t=(0,gt.j)(b,(0,A.N)((0,A.N)(b,i),y));r=(0,E.x)([(0,F.d)(r,[0,0],[n,e]),t],1)}return[i,s,r]}),(0,Ya.AS)([t,l,u])}return!t&&n>a&&(r=(0,F.d)(r,[0,0],[n,a]),s=(0,F.d)(s,[0,0],[a,a])),[r,s]})}const Xa=(0,h.op)({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if((0,d.vA)(e.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank ".concat(e.rank)),2===e.rank)return Ka(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),a=(0,Kn.K)((0,I.t)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],s=[];a.forEach(e=>{const[n,a]=Ka(e,t);r.push(n),s.push(a)});return[(0,I.t)((0,An.t)(r,0),e.shape),(0,I.t)((0,An.t)(s,0),e.shape)]}}});var Za=n(1667);const Qa=(0,h.op)({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Za.i.SUM_BY_NONZERO_WEIGHTS;const a=(0,u.YT)(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=(0,u.YT)(t,"weights","computeWeightedLoss"));const s=null==r?a:(0,_.l)(a,r);if(n===Za.i.NONE)return s;if(n===Za.i.SUM)return(0,Fn.c)(s);if(n===Za.i.MEAN){if(null==r)return(0,ot.i)(s);{const e=a.size/r.size,t=(0,fe.y)((0,Fn.c)(s),(0,Fn.c)(r));return e>1?(0,fe.y)(t,(0,on.d)(e)):t}}if(n===Za.i.SUM_BY_NONZERO_WEIGHTS){if(null==r)return(0,fe.y)((0,Fn.c)(s),(0,on.d)(a.size));{const e=(0,_.l)(r,(0,it.S)(a.shape)),t=(0,T.w)((0,Fn.c)((0,wt.E)(e,(0,on.d)(0))),"float32");return(0,fe.y)((0,Fn.c)(s),t)}}throw Error("Unknown reduction: ".concat(n))}});const $a=(0,h.op)({absoluteDifference_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Za.i.SUM_BY_NONZERO_WEIGHTS;const s=(0,u.YT)(e,"labels","absoluteDifference"),o=(0,u.YT)(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=(0,u.YT)(n,"weights","absoluteDifference")),(0,d.O3)(s.shape,o.shape,"Error in absoluteDifference: ");const c=(0,r.t)((0,gt.j)(s,o));return Qa(c,i,a)}});const Ja=(0,h.op)({cosineDistance_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Za.i.SUM_BY_NONZERO_WEIGHTS;const s=(0,u.YT)(e,"labels","cosineDistance"),o=(0,u.YT)(t,"predictions","cosineDistance");let i=null;null!=a&&(i=(0,u.YT)(a,"weights","cosineDistance")),(0,d.O3)(s.shape,o.shape,"Error in cosineDistance: ");const c=(0,on.d)(1),l=(0,gt.j)(c,(0,Fn.c)((0,_.l)(s,o),n,!0));return Qa(l,i,r)}});const er=(0,h.op)({hingeLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Za.i.SUM_BY_NONZERO_WEIGHTS,r=(0,u.YT)(e,"labels","hingeLoss");const s=(0,u.YT)(t,"predictions","hingeLoss");let o=null;null!=n&&(o=(0,u.YT)(n,"weights","hingeLoss")),(0,d.O3)(r.shape,s.shape,"Error in hingeLoss: ");const i=(0,on.d)(1);r=(0,gt.j)((0,_.l)((0,on.d)(2),r),i);const c=(0,Qt.V)((0,gt.j)(i,(0,_.l)(r,s)));return Qa(c,o,a)}});const tr=(0,h.op)({huberLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Za.i.SUM_BY_NONZERO_WEIGHTS;const o=(0,u.YT)(e,"labels","huberLoss"),c=(0,u.YT)(t,"predictions","huberLoss");let l=null;null!=n&&(l=(0,u.YT)(n,"weights","huberLoss")),(0,d.O3)(o.shape,c.shape,"Error in huberLoss: ");const h=(0,on.d)(a),p=(0,r.t)((0,gt.j)(c,o)),f=(0,dt.B)(p,h),m=(0,gt.j)(p,f),g=(0,i.W)((0,_.l)((0,on.d)(.5),(0,mt.E)(f)),(0,_.l)(h,m));return Qa(g,l,s)}});const nr=(0,h.op)({logLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Za.i.SUM_BY_NONZERO_WEIGHTS;const s=(0,u.YT)(e,"labels","logLoss"),o=(0,u.YT)(t,"predictions","logLoss");let c=null;null!=n&&(c=(0,u.YT)(n,"weights","logLoss")),(0,d.O3)(s.shape,o.shape,"Error in logLoss: ");const l=(0,on.d)(1),h=(0,on.d)(a),p=(0,xt.H)((0,_.l)(s,(0,Ge.R)((0,i.W)(o,h)))),f=(0,_.l)((0,gt.j)(l,s),(0,Ge.R)((0,i.W)((0,gt.j)(l,o),h))),m=(0,gt.j)(p,f);return Qa(m,c,r)}});const ar=(0,h.op)({meanSquaredError_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Za.i.SUM_BY_NONZERO_WEIGHTS;const r=(0,u.YT)(e,"labels","meanSquaredError"),s=(0,u.YT)(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=(0,u.YT)(n,"weights","meanSquaredError")),(0,d.O3)(r.shape,s.shape,"Error in meanSquaredError: ");const i=(0,Cn.P)(r,s);return Qa(i,o,a)}});const rr=(0,h.op)({sigmoidCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Za.i.SUM_BY_NONZERO_WEIGHTS,o=(0,u.YT)(e,"multiClassLabels","sigmoidCrossEntropy");const c=(0,u.YT)(t,"logits","sigmoidCrossEntropy");let l=null;if(null!=n&&(l=(0,u.YT)(n,"weights","sigmoidCrossEntropy")),(0,d.O3)(o.shape,c.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=(0,on.d)(a),t=(0,on.d)(1),n=(0,on.d)(.5);o=(0,i.W)((0,_.l)(o,(0,gt.j)(t,e)),(0,_.l)(n,e))}const h=function(e,t){const n=(0,u.YT)(e,"labels","sigmoidCrossEntropyWithLogits"),a=(0,u.YT)(t,"logits","sigmoidCrossEntropyWithLogits");(0,d.O3)(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=(0,Qt.V)(a),o=(0,_.l)(a,n),c=(0,He.K)((0,Se.o)((0,xt.H)((0,r.t)(a))));return(0,i.W)((0,gt.j)(s,o),c)}(o,c);return Qa(h,l,s)}});const sr=(0,h.op)({softmaxCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Za.i.SUM_BY_NONZERO_WEIGHTS,s=(0,u.YT)(e,"onehotLabels","softmaxCrossEntropy");const o=(0,u.YT)(t,"logits","softmaxCrossEntropy");let c=null;if(null!=n&&(c=(0,u.YT)(n,"weights","softmaxCrossEntropy")),(0,d.O3)(s.shape,o.shape,"Error in softmaxCrossEntropy: "),a>0){const e=(0,on.d)(a),t=(0,on.d)(1),n=(0,on.d)(s.shape[1]);s=(0,i.W)((0,_.l)(s,(0,gt.j)(t,e)),(0,fe.y)(e,n))}const l=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet "+"supported. Labels / logits was rank ".concat(t.rank," ")+"and dim was ".concat(n));const a=(0,fa._X)((e,t,a)=>{const r=(0,Ye.V)(t,[n],!0),s=(0,gt.j)((0,T.w)(t,"float32"),r);a([e,s]);const o=(0,xt.H)((0,_.l)(s,e));return{value:(0,Fn.c)(o,[n]),gradFunc:(e,t)=>{const[a,r]=t,s=(0,ft.SM)(e.shape,[n]);return[(0,_.l)((0,I.t)(e,s),(0,gt.j)((0,T.w)(a,"float32"),(0,Se.o)(r))),(0,_.l)((0,I.t)(e,s),(0,gt.j)((0,Se.o)(r),(0,T.w)(a,"float32")))]}}});return a(e,t)}(s,o);return Qa(l,c,r)}});const or=(0,h.op)({sparseFillEmptyRows_:function(e,t,n,a){const r=(0,u.YT)(e,"indices","sparseFillEmptyRows","int32"),s=(0,u.YT)(t,"values","sparseFillEmptyRows"),o=(0,u.YT)(n,"denseShape","sparseFillEmptyRows","int32"),i=(0,u.YT)(a,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==r.rank)throw new Error("Indices should be Tensor2D but received shape\n        ".concat(r.shape));if(1!==s.rank)throw new Error("Values should be Tensor1D but received shape ".concat(s.shape));if(1!==o.rank)throw new Error("Dense shape should be Tensor1D but received shape ".concat(o.shape));if(0!==i.rank)throw new Error("Default value should be a scalar but received shape ".concat(i.shape));const d={indices:r,values:s,denseShape:o,defaultValue:i},h=c.T2.runKernel(l.C8s,d);return{outputIndices:h[0],outputValues:h[1],emptyRowIndicator:h[2],reverseIndexMap:h[3]}}});const ir=(0,h.op)({sparseReshape_:function(e,t,n){const a=(0,u.YT)(e,"inputIndices","sparseReshape","int32"),r=(0,u.YT)(t,"inputShape","sparseReshape","int32"),s=(0,u.YT)(n,"newShape","sparseReshape","int32");if(2!==a.rank)throw new Error("Input indices should be Tensor2D but received shape\n        ".concat(a.shape));if(1!==r.rank)throw new Error("Input shape should be Tensor1D but received shape ".concat(r.shape));if(1!==s.rank)throw new Error("New shape should be Tensor1D but received shape ".concat(s.shape));const o={inputIndices:a,inputShape:r,newShape:s},i=c.T2.runKernel(l.BoJ,o);return{outputIndices:i[0],outputShape:i[1]}}});const cr=(0,h.op)({sparseSegmentMean_:function(e,t,n){const a=(0,u.YT)(e,"data","sparseSegmentMean"),r=(0,u.YT)(t,"indices","sparseSegmentMean","int32"),s=(0,u.YT)(n,"segmentIds","sparseSegmentMean","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error("Indices should be Tensor1D but received shape\n          ".concat(r.shape));if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          ".concat(s.shape));const o={data:a,indices:r,segmentIds:s};return c.T2.runKernel(l.L6G,o)}});const lr=(0,h.op)({sparseSegmentSum_:function(e,t,n){const a=(0,u.YT)(e,"data","sparseSegmentSum"),r=(0,u.YT)(t,"indices","sparseSegmentSum","int32"),s=(0,u.YT)(n,"segmentIds","sparseSegmentSum","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error("Indices should be Tensor1D but received shape\n         ".concat(r.shape));if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         ".concat(s.shape));const o={data:a,indices:r,segmentIds:s};return c.T2.runKernel(l.DvZ,o)}});const ur=(0,h.op)({stringNGrams_:function(e,t,n,a,r,s,o,i){const d=(0,u.YT)(e,"data","stringNGrams","string");if("string"!==d.dtype)throw new Error("Data must be of datatype string");if(1!==d.shape.length)throw new Error("Data must be a vector, saw: ".concat(d.shape));const h=(0,u.YT)(t,"dataSplits","stringNGrams");if("int32"!==h.dtype)throw new Error("Data splits must be of datatype int32");const p={separator:n,nGramWidths:a,leftPad:r,rightPad:s,padWidth:o,preserveShortSequences:i},f={data:d,dataSplits:h},m=c.T2.runKernel(l.YAb,f,p);return{nGrams:m[0],nGramsSplits:m[1]}}});const dr=(0,h.op)({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=(0,u.YT)(e,"input","stringSplit","string"),r=(0,u.YT)(t,"delimiter","stringSplit","string");if(1!==a.rank)throw new Error("Input should be Tensor1D but received shape ".concat(a.shape));if(0!==r.rank)throw new Error("Delimiter should be a scalar but received shape ".concat(r.shape));const s={skipEmpty:n},o={input:a,delimiter:r},i=c.T2.runKernel(l.iW0,o,s);return{indices:i[0],values:i[1],shape:i[2]}}});const hr=(0,h.op)({stringToHashBucketFast_:function(e,t){const n=(0,u.YT)(e,"input","stringToHashBucketFast","string"),a={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return c.T2.runKernel(l.$jE,r,a)}});const pr=(0,h.op)({staticRegexReplace_:function(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=(0,u.YT)(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:n,replaceGlobal:a};return c.T2.runKernel(l.GZp,{x:r},s)}}),fr={fft:wn.h,ifft:kn.K,rfft:Tn.z,irfft:Sn.g},mr={hammingWindow:Ta,hannWindow:Na,frame:Ia,stft:Ca},gr={flipLeftRight:Aa,grayscaleToRGB:_a,resizeNearestNeighbor:Ua.b,resizeBilinear:Va.v,rgbToGrayscale:Ra,rotateWithOffset:Fa,cropAndResize:Ea,nonMaxSuppression:Oa,nonMaxSuppressionAsync:za,nonMaxSuppressionWithScore:La,nonMaxSuppressionWithScoreAsync:Pa,nonMaxSuppressionPadded:Ba,nonMaxSuppressionPaddedAsync:Wa,threshold:Ga,transform:Ha},yr={bandPart:ja,gramSchmidt:qa,qr:Xa},br={absoluteDifference:$a,computeWeightedLoss:Qa,cosineDistance:Ja,hingeLoss:er,huberLoss:tr,logLoss:nr,meanSquaredError:ar,sigmoidCrossEntropy:rr,softmaxCrossEntropy:sr},vr={sparseFillEmptyRows:or,sparseReshape:ir,sparseSegmentMean:cr,sparseSegmentSum:lr},xr={stringNGrams:ur,stringSplit:dr,stringToHashBucketFast:hr,staticRegexReplace:pr}},9286:(e,t,n)=>{"use strict";n.d(t,{Y:()=>r});var a=n(259);function r(e,t){const n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);const r=(0,a.r)(e,"int32"),s=(0,a.r)([n.length,e.length],"int32");for(let a=0;a<n.length;a++){const t=r.indexToLoc(n[a]),o=a*e.length;s.values.set(t,o)}return s.toTensor()}},9477:(e,t,n)=>{"use strict";n.d(t,{x:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({real_:function(e){const t={input:(0,s.YT)(e,"input","real")};return a.T2.runKernel(r.LRy,t)}})},9486:(e,t,n)=>{"use strict";n.d(t,{z:()=>m});var a=n(1426),r=n(6149),s=n(4429),o=n(1047),i=n(7892),c=n(9477),l=n(5583),u=n(463),d=n(5181),h=n(4218),p=n(3290),f=n(3062);const m=(0,i.op)({rfft_:function(e,t){(0,a.vA)("float32"===e.dtype,()=>"The dtype for rfft() must be real value but got ".concat(e.dtype));let n=e.shape[e.shape.length-1];const i=e.size/n;let m;if(null!=t&&t<n){const a=e.shape.map(e=>0),r=e.shape.map(e=>e);r[e.shape.length-1]=t,m=(0,u.d)(e,a,r),n=t}else if(null!=t&&t>n){const a=e.shape.map(e=>e);a[e.shape.length-1]=t-n,m=(0,s.x)([e,(0,h.U)(a)],e.shape.length-1),n=t}else m=e;const g=(0,p.P)(m),y=(0,l.t)((0,r.f)(m,g),[i,n]),b=(0,f.h)(y),v=Math.floor(n/2)+1,x=(0,c.x)(b),w=(0,o.n)(b),k=(0,d.l)(x,[v,n-v],x.shape.length-1),S=(0,d.l)(w,[v,n-v],w.shape.length-1),T=m.shape.slice();return T[m.shape.length-1]=v,(0,l.t)((0,r.f)(k[0],S[0]),T)}})},9494:(e,t,n)=>{"use strict";n.d(t,{qY:()=>b,yl:()=>d,rT:()=>x,tp:()=>v,B4:()=>y,Q5:()=>g,qP:()=>m});var a=n(7926),r=n(1426);function s(e,t,n,a){const s=(0,r.Ur)(t),i=function(e,t,n,a){const s=(0,r.Ze)(t),i=a[a.length-1],c=new Array(i).fill(0),u=t.length,d="complex64"===n?l(e):e;if(u>1)for(let r=0;r<s/i;r++){const e=r*i;for(let t=0;t<i;t++)c[t]=Math.max(c[t],o(d[e+t],0,n).length)}return c}(e,t,n,s),u=t.length,d=c(e,t,n,s,i),h=["Tensor"];return a&&(h.push("  dtype: ".concat(n)),h.push("  rank: ".concat(u)),h.push("  shape: [".concat(t,"]")),h.push("  values:")),h.push(d.map(e=>"    "+e).join("\n")),h.join("\n")}function o(e,t,n){let a;return a=Array.isArray(e)?"".concat(parseFloat(e[0].toFixed(7))," + ")+"".concat(parseFloat(e[1].toFixed(7)),"j"):(0,r.Kg)(e)?"'".concat(e,"'"):"bool"===n?i(e):parseFloat(e.toFixed(7)).toString(),(0,r.av)(a,t)}function i(e){return 0===e?"false":"true"}function c(e,t,n,a,r){let s=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const u="complex64"===n?2:1,d=t[0],h=t.length;if(0===h){if("complex64"===n){return[o(l(e)[0],0,n)]}return"bool"===n?[i(e[0])]:[e[0].toString()]}if(1===h){if(d>20){const t=3*u;let a=Array.from(e.slice(0,t)),s=Array.from(e.slice((d-3)*u,d*u));return"complex64"===n&&(a=l(a),s=l(s)),["["+a.map((e,t)=>o(e,r[t],n)).join(", ")+", ..., "+s.map((e,t)=>o(e,r[d-3+t],n)).join(", ")+"]"]}return["["+("complex64"===n?l(e):Array.from(e)).map((e,t)=>o(e,r[t],n)).join(", ")+"]"]}const p=t.slice(1),f=a.slice(1),m=a[0]*u,g=[];if(d>20){for(let t=0;t<3;t++){const a=t*m,s=a+m;g.push(...c(e.slice(a,s),p,n,f,r,!1))}g.push("...");for(let t=d-3;t<d;t++){const a=t*m,s=a+m;g.push(...c(e.slice(a,s),p,n,f,r,t===d-1))}}else for(let o=0;o<d;o++){const t=o*m,a=t+m;g.push(...c(e.slice(t,a),p,n,f,r,o===d-1))}const y=2===h?",":"";g[0]="["+(d>0?g[0]+y:"");for(let o=1;o<g.length-1;o++)g[o]=" "+g[o]+y;let b=",\n";for(let o=2;o<h;o++)b+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(s?"":b),g}function l(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var u=n(8977);class d{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=r.Ze(e),null!=n){const e=n.length;r.vA(e===this.size,()=>"Length of values '".concat(e,"' does not match the size ")+"inferred by the shape '".concat(this.size,"'."))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||r.Ab(t,this.size),this.strides=(0,r.Ur)(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];0===n.length&&(n=[0]),r.vA(n.length===this.rank,()=>"The number of provided coordinates (".concat(n.length,") must ")+"match the rank (".concat(this.rank,")"));const s=this.locToIndex(n);this.values[s]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let a=0;for(const s of t){if(s<0||s>=this.shape[a]){const e="Requested out of range element at ".concat(t,". ")+"  Buffer shape=".concat(this.shape);throw new Error(e)}a++}let r=t[t.length-1];for(let s=0;s<t.length-1;++s)r+=this.strides[s]*t[s];return this.values[r]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return h().makeTensor(this.values,this.shape,this.dtype)}}let h=null,p=null,f=null;function m(e){h=e}function g(e){p=e}function y(e){f=e}class b{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=r.Ze(e),this.strides=(0,r.Ur)(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return p.buffer(this.shape,this.dtype,e)}bufferSync(){return p.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,r.yw)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,r.yw)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=h().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map(e=>u.decodeString(e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),h().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=h().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>u.decodeString(e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await h().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),h().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return p.print(this,e)}clone(){return this.throwIfDisposed(),p.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return s(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),p.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),h().makeVariable(this,e,t,n)}}function v(){return(0,a.m)("Tensor",()=>b)}Object.defineProperty(b,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),v();class x extends b{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(e.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!r.r1(e.shape,this.shape))throw new Error("shape of the new value (".concat(e.shape,") and ")+"previous value (".concat(this.shape,") must match"));h().disposeTensor(this),this.dataId=e.dataId,h().incRef(this,null)}dispose(){h().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(x,Symbol.hasInstance,{value:e=>e instanceof b&&null!=e.assign&&e.assign instanceof Function})},9519:(e,t,n)=>{"use strict";n.d(t,{F:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({sin_:function(e){const t={x:(0,s.YT)(e,"x","sin","float32")};return a.T2.runKernel(r.hql,t)}})},9538:function(e,t,n){var a;!function(e,r){function s(e){var t=this;t.next=function(){var e,n,a=t.x,r=t.i;return e=a[r],n=(e^=e>>>7)^e<<24,n^=(e=a[r+1&7])^e>>>10,n^=(e=a[r+3&7])^e>>>3,n^=(e=a[r+4&7])^e<<7,e=a[r+7&7],n^=(e^=e<<13)^e<<9,a[r]=n,t.i=r+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function i(e,t){null==e&&(e=+new Date);var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.x&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.xorshift7=i}(0,e=n.nmd(e),n.amdD)},9554:(e,t,n)=>{"use strict";n.d(t,{$dB:()=>F,$jE:()=>nn,$zE:()=>R,A1h:()=>z,A8B:()=>Ut,BK4:()=>bn,BLA:()=>Qe,BRl:()=>se,Blb:()=>Gt,BoJ:()=>qt,BxF:()=>de,C8s:()=>jt,CQC:()=>ft,Cg$:()=>_e,CwD:()=>Ce,D7i:()=>It,Ddj:()=>Zt,Dr:()=>vn,DvZ:()=>Kt,E3$:()=>Se,EkD:()=>i,ElG:()=>pe,EwU:()=>dn,FAs:()=>on,FCQ:()=>Tt,FSt:()=>l,Fin:()=>Bt,GZp:()=>$t,HNs:()=>T,Ik2:()=>k,J3C:()=>zt,JiE:()=>Ot,Jp_:()=>u,KXH:()=>C,L6G:()=>Yt,LB5:()=>N,LDN:()=>Ve,LG0:()=>Xe,LRy:()=>yt,LWX:()=>st,LXA:()=>De,M6A:()=>Qt,MRQ:()=>G,Mn0:()=>B,MnK:()=>W,N4F:()=>S,Ncv:()=>dt,O4G:()=>ge,OAQ:()=>xe,ODT:()=>ct,OMN:()=>o,ORI:()=>X,PH8:()=>s,P_L:()=>Nt,Pah:()=>ne,PbM:()=>an,Q6t:()=>gt,QDP:()=>E,QKF:()=>h,Qgm:()=>te,R23:()=>xt,RMm:()=>fn,RUm:()=>Re,RW8:()=>Oe,RXX:()=>Ge,SDM:()=>nt,SQl:()=>ue,T7M:()=>wn,TBb:()=>cn,TL8:()=>qe,TMz:()=>j,TOR:()=>Et,ToN:()=>Pe,TyE:()=>f,UcO:()=>Jt,VAI:()=>We,VCH:()=>b,Vvy:()=>r,WRv:()=>Be,WT3:()=>$e,WuN:()=>Vt,X$8:()=>Y,X0$:()=>Ne,X4r:()=>_t,XQy:()=>kt,XhZ:()=>ye,XmO:()=>J,YAb:()=>en,YVe:()=>Lt,ZgB:()=>he,Zl4:()=>at,_s9:()=>re,aAr:()=>xn,awo:()=>yn,bCz:()=>lt,bP9:()=>Q,cHb:()=>je,cS:()=>v,dFH:()=>Wt,dLy:()=>ln,dXR:()=>hn,dv8:()=>we,e0f:()=>rt,epO:()=>p,fUj:()=>vt,g5A:()=>Ye,gC7:()=>P,gIW:()=>ke,hVg:()=>Ct,hgw:()=>St,ho8:()=>y,hql:()=>Mt,huO:()=>bt,i5R:()=>fe,iGz:()=>L,iPs:()=>Te,iW0:()=>tn,iuW:()=>sn,jAQ:()=>w,jM4:()=>Le,jOE:()=>wt,jfg:()=>M,jgd:()=>Xt,jj_:()=>V,jxD:()=>Z,kdj:()=>ht,l0G:()=>et,l6P:()=>Ft,lLS:()=>be,lNG:()=>Ke,ljI:()=>a,lxb:()=>g,lzr:()=>ve,mH5:()=>mt,mIA:()=>Ie,mM$:()=>it,mnI:()=>Ee,mxL:()=>me,nVu:()=>K,nY8:()=>U,nZd:()=>Fe,oFs:()=>rn,oJ2:()=>pt,ox3:()=>oe,p2J:()=>D,pJc:()=>At,pPe:()=>pn,p_m:()=>d,pk0:()=>$,pnw:()=>gn,pr3:()=>_,pyJ:()=>ut,rFG:()=>Ht,rFm:()=>O,rGP:()=>le,rsH:()=>ae,sDr:()=>ee,t3d:()=>Ue,tG8:()=>Ae,tGH:()=>q,u$b:()=>Dt,u8Z:()=>c,uWl:()=>Rt,urI:()=>ot,vI1:()=>Pt,vaV:()=>A,vj7:()=>I,wNW:()=>H,wwC:()=>x,wx0:()=>un,x7F:()=>Ze,xJ3:()=>mn,xu7:()=>Je,yPW:()=>ze,ySp:()=>He,ybN:()=>ie,ybj:()=>ce,ylV:()=>tt,zP9:()=>m,zfU:()=>Me});const a="Abs",r="Acos",s="Acosh",o="Add",i="AddN",c="All",l="Any",u="ArgMax",d="ArgMin",h="Asin",p="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",b="AvgPoolGrad",v="AvgPool3D",x="AvgPool3DGrad",w="BatchMatMul",k="BatchToSpaceND",S="Bincount",T="BitwiseAnd",N="BroadcastTo",I="BroadcastArgs",C="Cast",E="Ceil",A="ClipByValue",_="Complex",R="ComplexAbs",F="Concat",D="Conv2D",O="Conv2DBackpropFilter",M="Conv2DBackpropInput",z="Conv3D",L="Conv3DBackpropFilterV2",P="Conv3DBackpropInputV2",B="Cos",W="Cosh",V="Cumprod",U="Cumsum",G="CropAndResize",H="DenseBincount",j="DepthToSpace",q="DepthwiseConv2dNative",Y="DepthwiseConv2dNativeBackpropFilter",K="DepthwiseConv2dNativeBackpropInput",X="Diag",Z="Dilation2D",Q="Dilation2DBackpropInput",$="Dilation2DBackpropFilter",J="Draw",ee="RealDiv",te="Einsum",ne="Elu",ae="EluGrad",re="Erf",se="Equal",oe="Exp",ie="ExpandDims",ce="Expm1",le="FFT",ue="Fill",de="FlipLeftRight",he="Floor",pe="FloorDiv",fe="FusedBatchNorm",me="GatherV2",ge="GatherNd",ye="Greater",be="GreaterEqual",ve="Identity",xe="IFFT",we="Imag",ke="IsFinite",Se="IsInf",Te="IsNan",Ne="LeakyRelu",Ie="Less",Ce="LessEqual",Ee="LinSpace",Ae="Log",_e="Log1p",Re="LogicalAnd",Fe="LogicalNot",De="LogicalOr",Oe="LogicalXor",Me="LogSoftmax",ze="LowerBound",Le="LRN",Pe="LRNGrad",Be="MatrixBandPart",We="Max",Ve="Maximum",Ue="MaxPool",Ge="MaxPoolGrad",He="MaxPool3D",je="MaxPool3DGrad",qe="MaxPoolWithArgmax",Ye="Mean",Ke="Min",Xe="Minimum",Ze="MirrorPad",Qe="Mod",$e="Multinomial",Je="Multiply",et="Neg",tt="NotEqual",nt="NonMaxSuppressionV3",at="NonMaxSuppressionV4",rt="NonMaxSuppressionV5",st="OnesLike",ot="OneHot",it="Pack",ct="PadV2",lt="Pool",ut="Pow",dt="Prelu",ht="Prod",pt="RaggedGather",ft="RaggedRange",mt="RaggedTensorToTensor",gt="Range",yt="Real",bt="Reciprocal",vt="Relu",xt="Reshape",wt="ResizeNearestNeighbor",kt="ResizeNearestNeighborGrad",St="ResizeBilinear",Tt="ResizeBilinearGrad",Nt="Relu6",It="Reverse",Ct="Round",Et="Rsqrt",At="ScatterNd",_t="TensorScatterUpdate",Rt="SearchSorted",Ft="Select",Dt="Selu",Ot="Slice",Mt="Sin",zt="Sinh",Lt="Sign",Pt="Sigmoid",Bt="Softplus",Wt="Sqrt",Vt="Sum",Ut="SpaceToBatchND",Gt="SplitV",Ht="Softmax",jt="SparseFillEmptyRows",qt="SparseReshape",Yt="SparseSegmentMean",Kt="SparseSegmentSum",Xt="SparseToDense",Zt="SquaredDifference",Qt="Square",$t="StaticRegexReplace",Jt="StridedSlice",en="StringNGrams",tn="StringSplit",nn="StringToHashBucketFast",an="Sub",rn="Tan",sn="Tanh",on="Tile",cn="TopK",ln="Transform",un="Transpose",dn="Unique",hn="Unpack",pn="UnsortedSegmentSum",fn="UpperBound",mn="ZerosLike",gn="Step",yn="FromPixels",bn="RotateWithOffset",vn="_FusedMatMul",xn="FusedConv2D",wn="FusedDepthwiseConv2D"},9556:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(7794);const i=(0,n(7892).op)({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=(0,s.YT)(e,"x","prod");"bool"===i.dtype&&(i=(0,o.w)(i,"int32"));const c={x:i},l={axis:t,keepDims:n};return a.T2.runKernel(r.kdj,c,l)}})},9694:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s.YT)(e,"x","unique","string_or_numeric");(0,o.vA)(n.rank>0,()=>"The input tensor must be at least 1D");const i={x:n},c={axis:t},[l,u]=a.T2.runKernel(r.EwU,i,c);return{values:l,indices:u}}})},9721:(e,t,n)=>{"use strict";n.d(t,{j:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({relu6_:function(e){const t={x:(0,s.YT)(e,"x","relu6")};return a.T2.runKernel(r.P_L,t)}})},9820:(e,t,n)=>{"use strict";n.d(t,{o:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({clone_:function(e){const t={x:(0,s.YT)(e,"x","clone","string_or_numeric")};return a.T2.runKernel(r.lzr,t)}})},9855:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({prelu_:function(e,t){const n={x:(0,s.YT)(e,"x","prelu"),alpha:(0,s.YT)(t,"alpha","prelu")};return a.T2.runKernel(r.Ncv,n)}})},9870:(e,t,n)=>{"use strict";n.d(t,{k:()=>l});var a=n(4148),r=n(1426),s=n(4969),o=n(7538),i=n(7892),c=n(5583);const l=(0,i.op)({conv1d_:function(e,t,n,i){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,d=arguments.length>6?arguments[6]:void 0;const h=(0,a.YT)(e,"x","conv1d"),p=(0,a.YT)(t,"filter","conv1d");let f=h,m=!1;2===h.rank&&(m=!0,f=(0,c.t)(h,[1,h.shape[0],h.shape[1]])),r.vA(3===f.rank,()=>"Error in conv1d: input must be rank 3, but got rank ".concat(f.rank,".")),r.vA(3===p.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+"".concat(p.rank,".")),o.s_("conv1d",i,d),r.vA(f.shape[2]===p.shape[1],()=>"Error in conv1d: depth of input (".concat(f.shape[2],") must match ")+"input depth for filter ".concat(p.shape[1],".")),r.vA(o.G0(n,u),()=>"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(n," and dilation '").concat(u,"'")),r.vA(o.qk(u),()=>"Error in conv1D: Dilated rates should be larger than 0."),r.vA(o.qk(n),()=>"Error in conv1D: Stride should be larger than 0."),r.vA("NWC"===l,()=>"Error in conv1d: got dataFormat of ".concat(l," but only NWC is currently supported."));const g=(0,c.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),y=(0,c.t)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),b=[1,n],v=[1,u],x=(0,s.X)(y,g,b,i,"NHWC",v,d);return m?(0,c.t)(x,[x.shape[2],x.shape[3]]):(0,c.t)(x,[x.shape[0],x.shape[2],x.shape[3]])}})},9899:(e,t,n)=>{"use strict";n.d(t,{G:()=>u});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7538),c=n(7892),l=n(5583);const u=(0,c.op)({depthwiseConv2d_:function(e,t,n,c){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],h=arguments.length>6?arguments[6]:void 0;const p=(0,s.YT)(e,"x","depthwiseConv2d","float32"),f=(0,s.YT)(t,"filter","depthwiseConv2d","float32");let m=p,g=!1;3===p.rank&&(g=!0,m=(0,l.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o.vA(4===m.rank,()=>"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(m.rank,".")),o.vA(4===f.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(f.rank,"."));const y="NHWC"===u?m.shape[3]:m.shape[1];o.vA(y===f.shape[2],()=>"Error in depthwiseConv2d: number of input channels "+"(".concat(y,") must match the inChannels dimension in ")+"filter ".concat(f.shape[2],".")),i.s_("depthwiseConv2d",c,h);const b={x:m,filter:f},v={strides:n,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h},x=a.T2.runKernel(r.tGH,b,v);return g?(0,l.t)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},9914:(e,t,n)=>{"use strict";n.d(t,{Q:()=>i});var a=n(2164),r=n(8075),s=n(1426),o=n(8977);function i(e,t,n,i){if(null==i)i=(0,s.X$)(e);else if("complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if((0,r.Nw)(e)||(0,r.Oj)(e)){if("float32"!==i&&"int32"!==i)throw new Error("Creating tensor from GPU data only supports "+"'float32'|'int32' dtype, while the dtype is ".concat(i,"."));return a.T2.backend.createTensorFromGPUData(e,t||n,i)}if(!(0,o.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,s.SA)(t);const e=(0,s.Ze)(t),a=(0,s.Ze)(n);(0,s.vA)(e===a,()=>"Based on the provided shape, [".concat(t,"], the tensor should have ")+"".concat(e," values but has ").concat(a));for(let r=0;r<n.length;++r){const e=n[r],a=r!==n.length-1||e!==(0,s.Ze)(t.slice(r));(0,s.vA)(n[r]===t[r]||!a,()=>"Error creating a new Tensor. Inferred shape "+"(".concat(n,") does not match the provided ")+"shape (".concat(t,"). "))}}return(0,o.isTypedArray)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==i?(0,o.toTypedArray)(e,i):(0,o.flatten)(e,[],!0),a.T2.makeTensor(e,t,i)}},9973:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({softplus_:function(e){const t={x:(0,s.YT)(e,"x","softplus")};return a.T2.runKernel(r.Fin,t)}})},9996:(e,t,n)=>{"use strict";n.d(t,{D:()=>c});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805);const c=(0,n(7892).op)({greaterEqual_:function(e,t){let n=(0,o.YT)(e,"a","greaterEqual","string_or_numeric"),c=(0,o.YT)(t,"b","greaterEqual","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.lLS,l)}})}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var s=t[a]={id:a,loaded:!1,exports:{}};return e[a].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.m=e,n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.f={},n.e=e=>Promise.all(Object.keys(n.f).reduce((t,a)=>(n.f[a](e,t),t),[])),n.u=e=>"static/js/"+e+".a0ff2861.chunk.js",n.miniCssF=e=>{},n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={},t="my-page:";n.l=(a,r,s,o)=>{if(e[a])e[a].push(r);else{var i,c;if(void 0!==s)for(var l=document.getElementsByTagName("script"),u=0;u<l.length;u++){var d=l[u];if(d.getAttribute("src")==a||d.getAttribute("data-webpack")==t+s){i=d;break}}i||(c=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,n.nc&&i.setAttribute("nonce",n.nc),i.setAttribute("data-webpack",t+s),i.src=a),e[a]=[r];var h=(t,n)=>{i.onerror=i.onload=null,clearTimeout(p);var r=e[a];if(delete e[a],i.parentNode&&i.parentNode.removeChild(i),r&&r.forEach(e=>e(n)),t)return t(n)},p=setTimeout(h.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=h.bind(null,i.onerror),i.onload=h.bind(null,i.onload),c&&document.head.appendChild(i)}}})(),n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n.p="/testpage/",(()=>{var e={792:0};n.f.j=(t,a)=>{var r=n.o(e,t)?e[t]:void 0;if(0!==r)if(r)a.push(r[2]);else{var s=new Promise((n,a)=>r=e[t]=[n,a]);a.push(r[2]=s);var o=n.p+n.u(t),i=new Error;n.l(o,a=>{if(n.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var s=a&&("load"===a.type?"missing":a.type),o=a&&a.target&&a.target.src;i.message="Loading chunk "+t+" failed.\n("+s+": "+o+")",i.name="ChunkLoadError",i.type=s,i.request=o,r[1](i)}},"chunk-"+t,t)}};var t=(t,a)=>{var r,s,o=a[0],i=a[1],c=a[2],l=0;if(o.some(t=>0!==e[t])){for(r in i)n.o(i,r)&&(n.m[r]=i[r]);if(c)c(n)}for(t&&t(a);l<o.length;l++)s=o[l],n.o(e,s)&&e[s]&&e[s][0](),e[s]=0},a=self.webpackChunkmy_page=self.webpackChunkmy_page||[];a.forEach(t.bind(null,0)),a.push=t.bind(null,a.push.bind(a))})(),(()=>{"use strict";var e={};n.r(e),n.d(e,{mx:()=>ed,XI:()=>qd,Nk:()=>Yd,f6:()=>Xd,ct:()=>Xu,YG:()=>Jd,hH:()=>sh,z3:()=>Gh,sG:()=>ep,uM:()=>sp,vS:()=>kp,qB:()=>_p,GG:()=>Fp,lg:()=>Lp,rq:()=>Op,cu:()=>Zp,WR:()=>Yp,GE:()=>Jp,px:()=>tf,jC:()=>yf,He:()=>xf,hE:()=>_f,BF:()=>Mh,Dk:()=>Wf,cl:()=>Kf,_B:()=>im,ub:()=>hm,_f:()=>mm,Ku:()=>wm,qy:()=>Sm,Zy:()=>Mm,bu:()=>Pm,zv:()=>Wu,dH:()=>ld,HS:()=>Ud,yH:()=>rg,l3:()=>og,z9:()=>cg,x6:()=>pg,_m:()=>xg,eW:()=>Ng,GK:()=>Eg,SP:()=>Rg,yr:()=>Dg,dl:()=>dp,Dw:()=>Wg,xT:()=>Hg,_X:()=>gd,wz:()=>Qg});var t=n(5043),a=n(4391),r=n(5743),s=n(9554),o=n(7794),i=n(803),c=n(319);const l={kernelName:s.ljI,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,i.l)(e,(0,c.P)((0,o.w)(n,"float32"),-1))}}};var u=n(4974),d=n(1011),h=n(1997),p=n(191),f=n(7738),m=n(7951);const g={kernelName:s.Vvy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,f.E)((0,o.w)(n,"float32")),a=(0,p.R)((0,m.j)((0,h.d)(1),t));return(0,d.H)((0,u.y)(e,a))}}}},y={kernelName:s.PH8,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,p.R)((0,m.j)((0,f.E)((0,o.w)(n,"float32")),1));return(0,u.y)(e,t)}}}};var b=n(8805),v=n(5583),x=n(7382);const w={kernelName:s.OMN,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=b.assertAndGetBroadcastShape(n.shape,a.shape);return{a:()=>{let t=e;const a=b.getReductionAxes(n.shape,r);return a.length>0&&(t=(0,x.c)(t,a)),(0,v.t)(t,n.shape)},b:()=>{let t=e;const n=b.getReductionAxes(a.shape,r);return n.length>0&&(t=(0,x.c)(t,n)),(0,v.t)(t,a.shape)}}}},k={kernelName:s.EkD,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach((t,a)=>{n[a]=()=>e.clone()}),n}};var S=n(3290);const T={kernelName:s.Jp_,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,S.P)(n)}}},N={kernelName:s.p_m,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,S.P)(n)}}},I={kernelName:s.QKF,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,u.y)(e,(0,p.R)((0,m.j)((0,h.d)(1),(0,f.E)((0,o.w)(n,"float32")))))}}};var C=n(7242);const E={kernelName:s.epO,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,p.R)((0,C.W)((0,h.d)(1),(0,f.E)((0,o.w)(n,"float32"))));return(0,u.y)(e,t)}}}},A={kernelName:s.lxb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,b.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const t=(0,C.W)((0,f.E)(n),(0,f.E)(a));let s=(0,i.l)(e,(0,u.y)(a,t));const o=(0,b.getReductionAxes)(n.shape,r);return o.length>0&&(s=(0,x.c)(s,o)),(0,v.t)(s,n.shape)},b:()=>{const t=(0,C.W)((0,f.E)(n),(0,f.E)(a));let s=(0,d.H)((0,i.l)(e,(0,u.y)(n,t)));const o=(0,b.getReductionAxes)(a.shape,r);return o.length>0&&(s=(0,x.c)(s,o)),(0,v.t)(s,a.shape)}}}},_={kernelName:s.TyE,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,u.y)(e,(0,C.W)((0,f.E)((0,o.w)(n,"float32")),1))}}},R={kernelName:s.zP9,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,u.y)(e,(0,m.j)((0,h.d)(1),(0,f.E)((0,o.w)(n,"float32"))))}}};var F=n(2164),D=n(4148),O=n(1426),M=n(7538),z=n(7892);const L=(0,z.op)({avgPool3dGrad_:function(e,t,n,a,r,o){const i=(0,D.YT)(e,"dy","avgPool3dGrad"),c=(0,D.YT)(t,"input","avgPool3dGrad");let l=i,u=c,d=!1;4===c.rank&&(d=!0,l=(0,v.t)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=(0,v.t)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),O.vA(5===l.rank,()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+"".concat(l.rank,".")),O.vA(5===u.rank,()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+"".concat(u.rank,".")),(0,M.s_)("avgPool3dGrad",r,o);const h={dy:l,input:u},p={filterSize:n,strides:a,pad:r,dimRoundingMode:o},f=F.T2.runKernel(s.wwC,h,p);return d?(0,v.t)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),P={kernelName:s.cS,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:o,dimRoundingMode:i}=n;return{x:()=>L(e,a,r,s,o,i)}}};const B=(0,z.op)({avgPoolGrad_:function(e,t,n,a,r){const o=(0,D.YT)(e,"dy","avgPoolGrad"),i=(0,D.YT)(t,"input","avgPoolGrad");O.vA(i.rank===o.rank,()=>"Rank of input (".concat(i.rank,") does not match rank of dy (").concat(o.rank,")"));let c=i,l=o,u=!1;3===i.rank&&(u=!0,c=(0,v.t)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=(0,v.t)(o,[1,o.shape[0],o.shape[1],o.shape[2]])),O.vA(4===l.rank,()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+"".concat(l.rank,".")),O.vA(4===c.rank,()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+"".concat(c.rank,"."));const d={dy:l,input:c},h={filterSize:n,strides:a,pad:r},p=F.T2.runKernel(s.VCH,d,h);return u?(0,v.t)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),W={kernelName:s.ho8,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:o}=n;return{x:()=>B(e,a,r,s,o)}}};var V=n(5162);const U={kernelName:s.jAQ,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[a,r]=t,{transposeA:s,transposeB:o}=n;return s||o?!s&&o?{a:()=>(0,V.N)(e,r,!1,!1),b:()=>(0,V.N)(e,a,!0,!1)}:s&&!o?{a:()=>(0,V.N)(r,e,!1,!0),b:()=>(0,V.N)(a,e,!1,!1)}:{a:()=>(0,V.N)(r,e,!0,!0),b:()=>(0,V.N)(e,a,!0,!0)}:{a:()=>(0,V.N)(e,r,!1,!0),b:()=>(0,V.N)(a,e,!0,!1)}}};var G=n(3585);const H={kernelName:s.Ik2,gradFunc:(e,t,n)=>{const{blockShape:a,crops:r}=n;return{x:()=>(0,G.e)(e,a,r)}}},j={kernelName:s.LB5,gradFunc:(e,t,n)=>{const a=n,r=a.inputShape,s=a.shape,o=Array.from(s);for(let c=r.length-1;c>=0;c--)if(r[c]===s[c])o[c]=1;else if(1!==r[c])throw new Error("broadcastTo(): [".concat(r,"] cannot be broadcast to [").concat(s,"]."));const i=[];for(let c=0;c<o.length;c++)o[c]>1&&i.push(c);return{x:()=>(0,x.c)(e,i,!0)}}},q={kernelName:s.KXH,gradFunc:e=>({x:()=>e.clone()})},Y={kernelName:s.QDP,gradFunc:e=>({x:()=>(0,S.P)(e)})};var K=n(9996),X=n(827),Z=n(5692),Q=n(3986);const $={kernelName:s.vaV,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{clipValueMin:r,clipValueMax:s}=n;return{x:()=>(0,Q._)((0,Z.n)((0,K.D)(a,r),(0,X.I)(a,s)),e,(0,S.P)(e))}}},J={kernelName:s.$zE,inputsToSave:["x"],gradFunc:l.gradFunc};var ee=n(5181);const te={kernelName:s.$dB,saveAllInputs:!0,gradFunc:(e,t,n)=>{const a=t.map(e=>e.shape),{axis:r}=n,s=(0,O.Y6)(r,t[0].shape)[0],o=a.map(e=>e[s]);return(0,ee.l)(e,o,s).map(e=>()=>e)}};var ne=n(6927),ae=n(1565);const re={kernelName:s.p2J,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{dilations:s,strides:o,pad:i,dataFormat:c}=n;return O.vA(M.Dh(s),()=>"Error in gradient of conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(s,"'")),{x:()=>(0,ae.v)(a.shape,e,r,o,i,c),filter:()=>(0,ne.H)(a,e,r.shape,o,i,c)}}};var se=n(4969);const oe={kernelName:s.jfg,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{strides:s,pad:o,dataFormat:i,dimRoundingMode:c}=n;return{dy:()=>(0,se.X)(e,r,s,o,i,1,c),filter:()=>(0,ne.H)(e,a,r.shape,s,o,i,c)}}};const ie=(0,z.op)({conv3DBackpropFilter_:function(e,t,n,a,r){let o=e;4===e.rank&&(o=(0,v.t)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=(0,v.t)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),O.vA(5===o.rank,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+"".concat(o.shape,".")),O.vA(5===i.rank,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+"".concat(i.shape,".")),O.vA(5===n.length,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+"".concat(n,".")),O.vA(o.shape[4]===n[3],()=>"Error in conv3dDerFilter: depth of input ".concat(o.shape[4],") must ")+"match input depth in filter (".concat(n[3],".")),O.vA(i.shape[4]===n[4],()=>"Error in conv3dDerFilter: depth of dy (".concat(i.shape[4],") must ")+"match output depth for filter (".concat(n[4],")."));const c={x:o,dy:i},l={strides:a,pad:r,filterShape:n};return F.T2.runKernel(s.iGz,c,l)}});var ce=n(6410);const le={kernelName:s.A1h,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s}=n;O.vA((0,M.Dh)(a),()=>"Error in gradient of conv3D: dilation rates greater than 1 are "+"not yet supported in gradients. Got dilations '".concat(a,"'"));const[o,i]=t;return{x:()=>(0,ce.c)(o.shape,e,i,r,s),filter:()=>ie(o,e,i.shape,r,s)}}};var ue=n(9519);const de={kernelName:s.Mn0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,i.l)((0,d.H)((0,ue.F)((0,o.w)(n,"float32"))),e)}}};var he=n(8143);const pe={kernelName:s.MnK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,i.l)((0,he.L)((0,o.w)(n,"float32")),e)}}};var fe=n(9235),me=n(7167),ge=n(2154);const ye={kernelName:s.nY8,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r,exclusive:s,reverse:o}=n;return{x:()=>{const t=(0,fe.Em)([r],a.rank);let n=(0,me.r)(e,r,s,!o);return null!=t&&(n=(0,ge.m)(n,t)),n}}}};var be=n(7399),ve=n(261);const xe={kernelName:s.tGH,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s,dimRoundingMode:o}=n,i=null==a?[1,1]:a;O.vA(M.Dh(i),()=>"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(i,"'"));const[c,l]=t;return O.vA(4===c.rank,()=>"Error in gradient of depthwiseConv2dNative: input must be "+"rank 4, but got rank ".concat(c.rank,".")),O.vA(4===l.rank,()=>"Error in gradient of depthwiseConv2dNative: filter must be "+"rank 4, but got rank ".concat(l.rank,".")),O.vA(c.shape[3]===l.shape[2],()=>"Error in gradient of depthwiseConv2d: number of input "+"channels (".concat(c.shape[3],") must match the inChannels dimension ")+"in filter ".concat(l.shape[2],".")),O.vA(M.G0(r,i),()=>"Error in gradient of depthwiseConv2d: Either strides or "+"dilations must be  1. Got strides ".concat(r," and dilations ")+"'".concat(i,"'.")),M.s_("depthwiseConv2d",s,o),{x:()=>(0,ve.l)(c.shape,e,l,r,s,i,o),filter:()=>(0,be.x)(c,e,l.shape,r,s,i,o)}}},we={kernelName:s.jxD,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,o={x:a,filter:r,dy:e},i={x:a,filter:r,dy:e};return{x:()=>F.T2.runKernel(s.bP9,o,n),filter:()=>F.T2.runKernel(s.pk0,i,n)}}},ke={kernelName:s.Pah,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,a={dy:e,y:n};return{x:()=>F.T2.runKernel(s.rsH,a)}}};var Se=n(5462);const Te={kernelName:s._s9,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=(0,i.l)((0,Se.o)((0,d.H)((0,f.E)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,i.l)(e,a)}}},Ne={kernelName:s.ox3,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,i.l)(e,n)}}},Ie={kernelName:s.ybN,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>(0,v.t)(e,n.shape)}}},Ce={kernelName:s.ybj,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,i.l)(e,(0,Se.o)(n))}}},Ee={kernelName:s.ZgB,gradFunc:e=>({x:()=>(0,S.P)(e)})},Ae={kernelName:s.ElG,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,b.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const t=(0,u.y)(e,(0,o.w)(a,"float32")),s=(0,b.getReductionAxes)(n.shape,r);return s.length>0?(0,v.t)((0,x.c)(t,s),n.shape):t},b:()=>{let t=(0,i.l)(e,(0,o.w)(n,"float32"));const s=(0,b.getReductionAxes)(a.shape,r);s.length>0&&(t=(0,v.t)((0,x.c)(t,s),a.shape));const c=(0,f.E)(a);return(0,d.H)((0,u.y)(t,(0,o.w)(c,"float32")))}}}};var _e=n(6777),Re=n(3017);const Fe={kernelName:s.i5R,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:a}=n,[r,s,o,c]=t,l=null==c?(0,h.d)(1):c,u=(0,b.getReductionAxes)(s.shape,r.shape),d=[];if(1===s.rank){for(let e=0;e<r.shape.length-1;++e)d.push(r.shape[e]);d.push(1)}const p=(0,m.j)(r,s),f=(0,i.l)(e,l),g=(0,_e.Z)((0,C.W)(o,(0,h.d)(a))),y=(0,i.l)((0,i.l)((0,i.l)(g,g),g),(0,h.d)(-.5));return{x:()=>1===s.rank?(0,v.t)((0,i.l)((0,i.l)(e,(0,Re.V)((0,v.t)(g,[1,1,1,s.shape[0]]),d)),l),r.shape):(0,v.t)((0,i.l)((0,i.l)(e,g),l),r.shape),mean:()=>{let e=(0,i.l)((0,i.l)(g,(0,h.d)(-1)),f);return 1===s.rank&&(e=(0,x.c)(e,u)),(0,v.t)(e,s.shape)},variance:()=>{let e=(0,i.l)((0,i.l)(y,p),f);return 1===s.rank&&(e=(0,x.c)(e,u)),(0,v.t)(e,s.shape)},scale:()=>{const t=(0,i.l)(p,g);let n=(0,i.l)(e,t);return 1===s.rank&&(n=(0,x.c)(n,u)),(0,v.t)(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=(0,x.c)(t,u)),(0,v.t)(t,s.shape)}}}};var De=n(901),Oe=n(5149);const Me={kernelName:s.mxL,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[a,r]=t,{axis:s,batchDims:o}=n,i=(0,O.Y6)(s,a.shape)[0],c=(e,t,n)=>()=>{const a=e.shape,r=t.size,o=a.slice(0,i),c=o.length,l=a.slice(s,a.length).slice(1),u=l.length,d=ze(0,c),h=ze(c+1,c+1+u),p=Le([o,[r],l]),f=(0,v.t)(n,p),m=(0,v.t)(t,[r]),g=Le([[c],d,h]),y=(0,ge.m)(f,g);let b=(0,Oe.z)(y,m,e.shape[i]);const x=(0,fe.gx)(g);return b=(0,ge.m)(b,x),b};if(1===o){const t=a.shape[0],n=a.split(t,0);return{x:()=>{const t=(0,De.t)(n.map((t,n)=>c(t,r.slice(n,1),e.slice(n,1))()));return t.reshape(a.shape)},indices:()=>r}}return{x:c(a,r,e),indices:()=>r}}};function ze(e,t){const n=[];for(let a=e;a<t;++a)n.push(a);return n}function Le(e){const t=[];for(let n=0;n<e.length;++n)for(let a=0;a<e[n].length;++a)t.push(e[n][a]);return t}const Pe={kernelName:s.lLS,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>(0,S.P)(n),b:()=>(0,S.P)(a)}}},Be={kernelName:s.lzr,gradFunc:e=>({x:()=>(0,o.w)(e,"float32")})},We={kernelName:s.gIW,gradFunc:e=>({x:()=>(0,S.P)(e)})},Ve={kernelName:s.E3$,gradFunc:e=>({x:()=>(0,S.P)(e)})},Ue={kernelName:s.iPs,gradFunc:e=>({x:()=>(0,S.P)(e)})};var Ge=n(2759);const He={kernelName:s.X0$,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{alpha:r}=n,s=(0,Ge.r)(a,0);return{x:()=>(0,Q._)(s,e,(0,i.l)(e,r))}}},je={kernelName:s.Cg$,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,u.y)(e,(0,C.W)(n,1))}}},qe={kernelName:s.tG8,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,u.y)(e,(0,o.w)(n,"float32"))}}},Ye={kernelName:s.zfU,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;return{logits:()=>{const t=(0,Se.o)(a);return(0,m.j)(e,(0,i.l)((0,x.c)(e,r,!0),t))}}}};const Ke=(0,z.op)({localResponseNormalizationBackprop_:function(e,t,n){const a={x:e,y:t,dy:n},r={depthRadius:arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,bias:arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,alpha:arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,beta:arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5};return F.T2.runKernel(s.ToN,a,r)}}),Xe={kernelName:s.jM4,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{depthRadius:s,bias:o,alpha:i,beta:c}=n;return{x:()=>Ke(a,r,e,s,o,i,c)}}};var Ze=n(7457);function Qe(e,t,n,a){return t.rank<n.rank&&(t=(0,v.t)(t,fe.SM(t.shape,a))),e.rank<n.rank&&(e=(0,v.t)(e,fe.SM(e.shape,a))),{x:()=>(0,i.l)(e,(0,o.w)((0,Ze.L)(n,t),e.dtype))}}const $e={kernelName:s.VAI,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{reductionIndices:r}=a,s=t[0],o=Qe(e,t[1],s,O.Y6(r,s.shape));return{x:()=>o.x()}}};var Je=n(8320);const et={kernelName:s.LDN,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>(0,i.l)(e,(0,o.w)((0,K.D)(n,a),"float32")),b:()=>(0,i.l)(e,(0,o.w)((0,Je.M)(n,a),"float32"))}}};const tt=(0,z.op)({maxPool3dGrad_:function(e,t,n,a,r,o,i){const c=(0,D.YT)(e,"dy","maxPool3dGrad"),l=(0,D.YT)(t,"input","maxPool3dGrad"),u=(0,D.YT)(n,"output","maxPool3dGrad");let d=c,h=l,p=u,f=!1;4===l.rank&&(f=!0,d=(0,v.t)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),h=(0,v.t)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=(0,v.t)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),O.vA(5===d.rank,()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+"".concat(d.rank,".")),O.vA(5===h.rank,()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+"".concat(h.rank,".")),O.vA(5===p.rank,()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+"".concat(p.rank,".")),(0,M.s_)("maxPool3dGrad",o,i);const m={dy:d,input:h,output:p},g={filterSize:a,strides:r,pad:o,dimRoundingMode:i},y=F.T2.runKernel(s.cHb,m,g);return f?(0,v.t)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),nt={kernelName:s.ySp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=n;return{x:()=>tt(e,a,r,s,o,i,c)}}};const at=(0,z.op)({maxPoolGrad_:function(e,t,n,a,r,o,i){const c=(0,D.YT)(e,"dy","maxPoolGrad"),l=(0,D.YT)(t,"input","maxPoolGrad"),u=(0,D.YT)(n,"output","maxPoolGrad");O.vA(l.rank===c.rank,()=>"Rank of input (".concat(l.rank,") does not match rank of dy ")+"(".concat(c.rank,")")),O.vA(4===c.rank,()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+"".concat(c.rank,".")),O.vA(4===l.rank,()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+"".concat(l.rank,".")),M.s_("maxPoolGrad",o,i);const d={dy:c,input:l,output:u},h={filterSize:a,strides:r,pad:o,dimRoundingMode:i};return F.T2.runKernel(s.RXX,d,h)}}),rt={kernelName:s.t3d,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:o,pad:i}=n;return{x:()=>at(e,a,r,s,o,i)}}};var st=n(4616);const ot={kernelName:s.g5A,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n,s=O.Y6(r,a.shape),o=(0,fe.lb)(a.shape,s)[1],c=O.Ze(o);return{x:()=>{const t=a.shape.slice();s.forEach(e=>{t[e]=1});const n=(0,v.t)(e,t);return(0,u.y)((0,i.l)(n,(0,st.S)(a.shape,"float32")),c)}}}},it={kernelName:s.lNG,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{axis:r}=a,[s,o]=t,i=Qe(e,o,s,O.Y6(r,s.shape));return{x:()=>i.x()}}},ct={kernelName:s.LG0,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>(0,i.l)(e,(0,o.w)((0,X.I)(n,a),"float32")),b:()=>(0,i.l)(e,(0,o.w)((0,Ge.r)(n,a),"float32"))}}};var lt=n(463);const ut={kernelName:s.x7F,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map(e=>e[0]);return{x:()=>(0,lt.d)(e,s,a.shape)}}};var dt=n(8587);const ht={kernelName:s.BLA,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,b.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const t=(0,b.getReductionAxes)(n.shape,r);return t.length>0?(0,v.t)((0,x.c)(e,t),n.shape):e},b:()=>{const t=(0,i.l)(e,(0,d.H)((0,dt.R)((0,u.y)(n,a)))),s=(0,b.getReductionAxes)(a.shape,r);return s.length>0?(0,v.t)((0,x.c)(t,s),a.shape):t}}}},pt={kernelName:s.xu7,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,b.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const t=(0,i.l)(e,(0,o.w)(a,"float32")),s=(0,b.getReductionAxes)(n.shape,r);return s.length>0?(0,v.t)((0,x.c)(t,s),n.shape):t},b:()=>{const t=(0,i.l)(e,(0,o.w)(n,"float32")),s=(0,b.getReductionAxes)(a.shape,r);return s.length>0?(0,v.t)((0,x.c)(t,s),a.shape):t}}}},ft={kernelName:s.l0G,gradFunc:e=>({x:()=>(0,d.H)(e)})};var mt=n(4218);const gt={kernelName:s.urI,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>(0,mt.U)(n.shape,"float32")}}},yt={kernelName:s.LWX,gradFunc:e=>({x:()=>(0,S.P)(e)})};var bt=n(3984);const vt={kernelName:s.mM$,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:a}=n;return(0,bt.K)(e,a).map(e=>()=>e)}},xt={kernelName:s.ODT,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map(e=>e[0]);return{x:()=>(0,lt.d)(e,s,a.shape)}}};var wt=n(5911),kt=n(7587);const St={kernelName:s.pyJ,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,a,r]=t,s=n,c=a,l=b.assertAndGetBroadcastShape(s.shape,c.shape);return{a:()=>{const t=(0,o.w)(c,"float32");let n=(0,i.l)(e,(0,i.l)(t,(0,kt.n)(s,(0,m.j)(t,(0,h.d)(1)))));const a=b.getReductionAxes(s.shape,l);return a.length>0&&(n=(0,x.c)(n,a)),(0,v.t)(n,s.shape)},b:()=>{const t=(0,Ge.r)(s,0),n=(0,Q._)(t,(0,wt.R)(s),(0,S.P)(s));let a=(0,i.l)(e,(0,i.l)(r,n));const o=b.getReductionAxes(c.shape,l);return o.length>0&&(a=(0,x.c)(a,o)),(0,v.t)(a,c.shape)}}}},Tt={kernelName:s.Ncv,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,Ge.r)(n,0);return{x:()=>(0,Q._)(r,e,(0,i.l)(e,a)),alpha:()=>{let t=(0,Q._)(r,(0,S.P)(e),(0,i.l)(e,n));const s=(0,b.getReductionAxes)(a.shape,e.shape);return s.length>0&&(t=(0,x.c)(t,s)),(0,v.t)(t,a.shape)}}}};var Nt=n(3739);function It(e,t,n){const a=e.shape.length,r=a-n.length,s=fe.Em(n,a);let o=e;null!=s&&(o=(0,ge.m)(e,s));const c=o.shape.slice(),l=c.splice(a-n.length,n.length).reduce((e,t)=>e*t,1);c.push(l);let u=function(e,t,n){const a=e.shape.slice();a[n]=1;const r=(0,v.t)(t,a),s=(0,Nt.L)(e,n,!0,!1),o=(0,Nt.L)(e,n,!0,!0),c=(0,i.l)(s,o);return(0,i.l)(r,c)}(o.reshape(c),t,r);if(u=u.reshape(o.shape),null!=s){const e=fe.gx(s);u=(0,ge.m)(u,e)}return u}const Ct={kernelName:s.kdj,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;let s=[];return s=void 0===r||null===r?a.shape.map((e,t)=>t):"number"===typeof r?[r]:r,{x:()=>It(a,e,s)}}},Et={kernelName:s.sDr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=b.assertAndGetBroadcastShape(n.shape,a.shape);return{a:()=>{const t=(0,u.y)(e,(0,o.w)(a,"float32")),s=b.getReductionAxes(n.shape,r);return s.length>0?(0,v.t)((0,x.c)(t,s),n.shape):t},b:()=>{let t=(0,i.l)(e,(0,o.w)(n,"float32"));const s=b.getReductionAxes(a.shape,r);s.length>0&&(t=(0,v.t)((0,x.c)(t,s),a.shape));const c=(0,f.E)(a);return(0,d.H)((0,u.y)(t,(0,o.w)(c,"float32")))}}}},At={kernelName:s.huO,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,u.y)(e,(0,d.H)((0,f.E)(n)))}}},_t={kernelName:s.P_L,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=(0,i.l)((0,X.I)(n,6),(0,c.P)(n));return{x:()=>(0,i.l)(e,(0,o.w)(a,"float32"))}}},Rt={kernelName:s.fUj,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,i.l)(e,(0,o.w)((0,c.P)(n),"float32"))}}},Ft={kernelName:s.R23,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,v.t)(e,n.shape)}}},Dt={kernelName:s.hgw,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>F.T2.runKernel(s.FCQ,r,n)}}},Ot={kernelName:s.jOE,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>F.T2.runKernel(s.XQy,r,n)}}};var Mt=n(7419);const zt={kernelName:s.D7i,gradFunc:(e,t,n)=>{const{dims:a}=n,r=(0,O.Y6)(a,e.shape);return{x:()=>(0,Mt.B)(e,r)}}},Lt={kernelName:s.hVg,gradFunc:e=>({x:()=>(0,S.P)(e)})},Pt={kernelName:s.TOR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,d.H)((0,u.y)(e,(0,i.l)((0,kt.n)(n,1.5),2)))}}};var Bt=n(5344);const Wt={kernelName:s.l6P,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>(0,o.w)((0,S.P)(n),"float32"),t:()=>(0,i.l)(e,(0,o.w)(n,e.dtype)),e:()=>(0,i.l)(e,(0,o.w)((0,Bt.N)(n),e.dtype))}}};var Vt=n(3765);const Ut={kernelName:s.u$b,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,Ge.r)(n,(0,h.d)(0)),a=(0,h.d)(Vt.j),r=(0,h.d)(Vt.X),s=(0,i.l)(e,r),c=(0,i.l)((0,i.l)(e,a),(0,Se.o)((0,o.w)(n,"float32")));return(0,Q._)(t,s,c)}}}},Gt={kernelName:s.vI1,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,i.l)(e,(0,i.l)(n,(0,m.j)((0,h.d)(1),n)))}}},Ht={kernelName:s.YVe,gradFunc:e=>({x:()=>(0,S.P)(e)})};var jt=n(5894);const qt={kernelName:s.hql,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,i.l)((0,jt.g)((0,o.w)(n,"float32")),e)}}};var Yt=n(1164);const Kt={kernelName:s.J3C,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,i.l)((0,Yt.y)((0,o.w)(n,"float32")),e)}}};var Xt=n(5048),Zt=n(4642);const Qt={kernelName:s.JiE,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{begin:r,size:s}=n,o=a.shape,[i,c]=(0,Zt.parseSliceParams)(a,r,s),l=[];for(let u=0;u<e.rank;u++)l.push([i[u],o[u]-i[u]-c[u]]);return{x:()=>(0,Xt.e)(e,l)}}},$t={kernelName:s.rFG,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{dim:r}=n,s=(0,i.l)(e,a);return{logits:()=>(0,m.j)(s,(0,i.l)((0,x.c)(s,[r],true),a))}}};var Jt=n(4213);const en={kernelName:s.Fin,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,i.l)(e,(0,Jt.r)(n))}}};var tn=n(2557);const nn={kernelName:s.A8B,gradFunc:(e,t,n)=>{const{blockShape:a,paddings:r}=n;return{x:()=>(0,tn.G)(e,a,r)}}};var an=n(4429);const rn={kernelName:s.Blb,gradFunc:(e,t,n)=>{const{axis:a}=n;return{x:()=>(0,an.x)(e,a)}}},sn={kernelName:s.dFH,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,u.y)(e,(0,i.l)((0,p.R)((0,o.w)(n,"float32")),2))}}},on={kernelName:s.M6A,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,i.l)(e,(0,i.l)((0,o.w)(n,"float32"),2))}}},cn={kernelName:s.Ddj,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,h.d)(2);return{a:()=>(0,i.l)(e,(0,i.l)(r,(0,m.j)(n,a))),b:()=>(0,i.l)(e,(0,i.l)(r,(0,m.j)(a,n)))}}},ln={kernelName:s.pnw,gradFunc:e=>({x:()=>(0,S.P)(e)})},un={kernelName:s.PbM,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=b.assertAndGetBroadcastShape(n.shape,a.shape);return{a:()=>{let t=e;const a=b.getReductionAxes(n.shape,r);return a.length>0&&(t=(0,x.c)(t,a)),(0,v.t)(t,n.shape)},b:()=>{let t=e;const n=b.getReductionAxes(a.shape,r);return n.length>0&&(t=(0,x.c)(t,n)),(0,v.t)((0,d.H)(t),a.shape)}}}},dn={kernelName:s.WuN,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,r=a.shape.slice(),{axis:s}=n;(0,O.Y6)(s,a.shape).forEach(e=>{r[e]=1});const o=(0,v.t)(e,r),c=(0,i.l)(o,(0,st.S)(a.shape,"float32"));return{x:()=>c}}},hn={kernelName:s.oFs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,u.y)(e,(0,f.E)((0,jt.g)(n)))}}},pn={kernelName:s.iuW,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,i.l)((0,m.j)((0,h.d)(1),(0,f.E)(n)),e)}}},fn={kernelName:s.FAs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{reps:r}=n;return{x:()=>{let t=(0,S.P)(a);if(1===a.rank)for(let n=0;n<r[0];++n)t=(0,C.W)(t,(0,lt.d)(e,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)t=(0,C.W)(t,(0,lt.d)(e,[n*a.shape[0],s*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)t=(0,C.W)(t,(0,lt.d)(e,[n*a.shape[0],s*a.shape[1],o*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+"".concat(a.rank," tensors yet."));for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)for(let i=0;i<r[3];++i)t=(0,C.W)(t,(0,lt.d)(e,[n*a.shape[0],s*a.shape[1],o*a.shape[2],i*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return t}}}},mn={kernelName:s.wx0,gradFunc:(e,t,n)=>{const a=n,{perm:r}=a,s=fe.gx(r);return{x:()=>(0,ge.m)(e,s)}}},gn={kernelName:s.dXR,gradFunc:(e,t,n)=>{const a=n,{axis:r}=a;return{value:()=>(0,De.t)(e,r)}}};var yn=n(4023),bn=n(6178),vn=n(2131);const xn={kernelName:s.pPe,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=(0,vn.P)(t,(0,S.P)(t)),a=(0,bn.k)(e,n);let r=(0,K.D)(t,(0,h.d)(0,"int32"));const s=a.rank-r.rank;for(let i=0;i<s;++i)r=(0,yn.U)(r,i+1);r=(0,Z.n)(r,(0,st.S)(a.shape,"bool"));const o=(0,S.P)(a);return(0,Q._)(r,a,o)}(e,n)}}};const wn={kernelName:s.xJ3,gradFunc:e=>({x:()=>(0,S.P)(e)})};var kn=n(843);const Sn=[l,g,y,w,k,T,N,I,E,A,_,R,P,W,U,H,j,q,Y,$,J,te,oe,re,le,de,pe,ye,xe,we,Et,ke,Te,Ne,Ie,Ce,Ae,Ee,Fe,Me,Pe,Be,We,Ve,Ue,He,je,qe,Ye,Xe,$e,$e,et,nt,rt,ot,it,ct,ut,ht,pt,ft,gt,yt,vt,xt,xt,St,Tt,Ct,At,_t,Rt,Ft,Dt,Ot,zt,Lt,Pt,Wt,Ut,Gt,Ht,qt,Kt,Qt,$t,en,nn,nn,rn,rn,sn,cn,on,ln,un,dn,hn,pn,fn,mn,gn,xn,wn];for(const n of Sn)(0,kn.kr)(n);var Tn=n(3753),Nn=n(9494);(0,Nn.tp)().prototype.abs=function(){return this.throwIfDisposed(),(0,Tn.t)(this)};var In=n(4759);(0,Nn.tp)().prototype.acos=function(){return this.throwIfDisposed(),(0,In.H)(this)};var Cn=n(983);(0,Nn.tp)().prototype.acosh=function(){return this.throwIfDisposed(),(0,Cn.F)(this)},(0,Nn.tp)().prototype.add=function(e){return this.throwIfDisposed(),(0,C.W)(this,e)};var En=n(1802);(0,Nn.tp)().prototype.all=function(e,t){return this.throwIfDisposed(),(0,En.Q)(this,e,t)};var An=n(1819);(0,Nn.tp)().prototype.any=function(e,t){return this.throwIfDisposed(),(0,An.b)(this,e,t)};var _n=n(3068);(0,Nn.tp)().prototype.argMax=function(e){return this.throwIfDisposed(),(0,_n.F)(this,e)};var Rn=n(8482);(0,Nn.tp)().prototype.argMin=function(e){return this.throwIfDisposed(),(0,Rn.X)(this,e)},(0,Nn.tp)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,O.vA)(1===this.size,()=>"The array must have only 1 element."),(0,v.t)(this,[])},(0,Nn.tp)().prototype.asType=function(e){return this.throwIfDisposed(),(0,o.w)(this,e)},(0,Nn.tp)().prototype.as1D=function(){return this.throwIfDisposed(),(0,v.t)(this,[this.size])},(0,Nn.tp)().prototype.as2D=function(e,t){return this.throwIfDisposed(),(0,v.t)(this,[e,t])},(0,Nn.tp)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),(0,v.t)(this,[e,t,n])},(0,Nn.tp)().prototype.as4D=function(e,t,n,a){return this.throwIfDisposed(),(0,v.t)(this,[e,t,n,a])},(0,Nn.tp)().prototype.as5D=function(e,t,n,a,r){return this.throwIfDisposed(),(0,v.t)(this,[e,t,n,a,r])};var Fn=n(3010);(0,Nn.tp)().prototype.asin=function(){return this.throwIfDisposed(),(0,Fn.q)(this)};var Dn=n(6464);(0,Nn.tp)().prototype.asinh=function(){return this.throwIfDisposed(),(0,Dn.y)(this)};var On=n(7803);(0,Nn.tp)().prototype.atan=function(){return this.throwIfDisposed(),(0,On.r)(this)};var Mn=n(6349);(0,Nn.tp)().prototype.atan2=function(e){return this.throwIfDisposed(),(0,Mn.F)(this,e)};var zn=n(8147);(0,Nn.tp)().prototype.atanh=function(){return this.throwIfDisposed(),(0,zn.r)(this)};var Ln=n(8650);(0,Nn.tp)().prototype.avgPool=function(e,t,n,a){return this.throwIfDisposed(),(0,Ln.$)(this,e,t,n,a)},(0,Nn.tp)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),(0,tn.G)(this,e,t)};var Pn=n(7237);(0,Nn.tp)().prototype.batchNorm=function(e,t,n,a,r){return this.throwIfDisposed(),(0,Pn.$)(this,e,t,n,a,r)};var Bn=n(4920);(0,Nn.tp)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),(0,Bn.h)(this,e)},(0,Nn.tp)().prototype.cast=function(e){return this.throwIfDisposed(),(0,o.w)(this,e)};var Wn=n(5396);(0,Nn.tp)().prototype.ceil=function(){return this.throwIfDisposed(),(0,Wn.m)(this)};var Vn=n(3829);(0,Nn.tp)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),(0,Vn.z)(this,e,t)},(0,Nn.tp)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Nn.qY&&(e=[e]),(0,an.x)([this,...e],t)};var Un=n(9870);(0,Nn.tp)().prototype.conv1d=function(e,t,n,a,r,s){return this.throwIfDisposed(),(0,Un.k)(this,e,t,n,a,r,s)};var Gn=n(1137);(0,Nn.tp)().prototype.conv2dTranspose=function(e,t,n,a,r){return this.throwIfDisposed(),(0,Gn.w)(this,e,t,n,a,r)},(0,Nn.tp)().prototype.conv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),(0,se.X)(this,e,t,n,a,r,s)},(0,Nn.tp)().prototype.cos=function(){return this.throwIfDisposed(),(0,jt.g)(this)},(0,Nn.tp)().prototype.cosh=function(){return this.throwIfDisposed(),(0,Yt.y)(this)},(0,Nn.tp)().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),(0,Nt.L)(this,e,t,n)},(0,Nn.tp)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),(0,me.r)(this,e,t,n)};var Hn=n(1719);(0,Nn.tp)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),(0,Hn.R)(this,e,t)};var jn=n(9899);(0,Nn.tp)().prototype.depthwiseConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),(0,jn.G)(this,e,t,n,a,r,s)};var qn=n(3789);(0,Nn.tp)().prototype.dilation2d=function(e,t,n,a,r){return this.throwIfDisposed(),(0,qn.X)(this,e,t,n,a,r)};var Yn=n(44);(0,Nn.tp)().prototype.divNoNan=function(e){return this.throwIfDisposed(),(0,Yn.e)(this,e)},(0,Nn.tp)().prototype.div=function(e){return this.throwIfDisposed(),(0,u.y)(this,e)};var Kn=n(6434);(0,Nn.tp)().prototype.dot=function(e){return this.throwIfDisposed(),(0,Kn.O)(this,e)};var Xn=n(3645);(0,Nn.tp)().prototype.elu=function(){return this.throwIfDisposed(),(0,Xn.P)(this)},(0,Nn.tp)().prototype.equal=function(e){return this.throwIfDisposed(),(0,Ze.L)(this,e)};var Zn=n(8810);(0,Nn.tp)().prototype.erf=function(){return this.throwIfDisposed(),(0,Zn.Y)(this)};var Qn=n(8826);(0,Nn.tp)().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),(0,Qn.p)(this,e,t)},(0,Nn.tp)().prototype.exp=function(){return this.throwIfDisposed(),(0,Se.o)(this)},(0,Nn.tp)().prototype.expandDims=function(e){return this.throwIfDisposed(),(0,yn.U)(this,e)};var $n=n(2520);(0,Nn.tp)().prototype.expm1=function(){return this.throwIfDisposed(),(0,$n.I)(this)};var Jn=n(3062);(0,Nn.tp)().prototype.fft=function(){return this.throwIfDisposed(),(0,Jn.h)(this)},(0,Nn.tp)().prototype.flatten=function(){return this.throwIfDisposed(),(0,v.t)(this,[this.size])},(0,Nn.tp)().prototype.floor=function(){return this.throwIfDisposed(),(0,dt.R)(this)};var ea=n(3612);(0,Nn.tp)().prototype.floorDiv=function(e){return this.throwIfDisposed(),(0,ea.w)(this,e)},(0,Nn.tp)().prototype.gather=function(e,t,n){return this.throwIfDisposed(),(0,bn.k)(this,e,t,n)},(0,Nn.tp)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),(0,K.D)(this,e)},(0,Nn.tp)().prototype.greater=function(e){return this.throwIfDisposed(),(0,Ge.r)(this,e)};var ta=n(1405);(0,Nn.tp)().prototype.ifft=function(){return this.throwIfDisposed(),(0,ta.K)(this)};var na=n(7307);(0,Nn.tp)().prototype.irfft=function(){return this.throwIfDisposed(),(0,na.g)(this)};var aa=n(9027);(0,Nn.tp)().prototype.isFinite=function(){return this.throwIfDisposed(),(0,aa.M)(this)};var ra=n(6005);(0,Nn.tp)().prototype.isInf=function(){return this.throwIfDisposed(),(0,ra.E)(this)};var sa=n(3467);(0,Nn.tp)().prototype.isNaN=function(){return this.throwIfDisposed(),(0,sa.y)(this)};var oa=n(8076);(0,Nn.tp)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),(0,oa.H)(this,e)},(0,Nn.tp)().prototype.lessEqual=function(e){return this.throwIfDisposed(),(0,X.I)(this,e)},(0,Nn.tp)().prototype.less=function(e){return this.throwIfDisposed(),(0,Je.M)(this,e)};var ia=n(6584);(0,Nn.tp)().prototype.localResponseNormalization=function(e,t,n,a){return this.throwIfDisposed(),(0,ia.K)(this,e,t,n,a)};var ca=n(4824);(0,Nn.tp)().prototype.logSigmoid=function(){return this.throwIfDisposed(),(0,ca.n)(this)};var la=n(1194);(0,Nn.tp)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),(0,la.H)(this,e)};var ua=n(2175);(0,Nn.tp)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),(0,ua.V)(this,e,t)},(0,Nn.tp)().prototype.log=function(){return this.throwIfDisposed(),(0,wt.R)(this)};var da=n(1386);(0,Nn.tp)().prototype.log1p=function(){return this.throwIfDisposed(),(0,da.K)(this)},(0,Nn.tp)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),(0,Z.n)(this,e)},(0,Nn.tp)().prototype.logicalNot=function(){return this.throwIfDisposed(),(0,Bt.N)(this)};var ha=n(7920);(0,Nn.tp)().prototype.logicalOr=function(e){return this.throwIfDisposed(),(0,ha.z)(this,e)};var pa=n(3708);(0,Nn.tp)().prototype.logicalXor=function(e){return this.throwIfDisposed(),(0,pa.r)(this,e)},(0,Nn.tp)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),(0,V.N)(this,e,t,n)};var fa=n(6044);(0,Nn.tp)().prototype.maxPool=function(e,t,n,a){return this.throwIfDisposed(),(0,fa.j)(this,e,t,n,a)};var ma=n(891);(0,Nn.tp)().prototype.max=function(e,t){return this.throwIfDisposed(),(0,ma.T)(this,e,t)},(0,Nn.tp)().prototype.maximum=function(e){return this.throwIfDisposed(),(0,vn.P)(this,e)};var ga=n(3015);(0,Nn.tp)().prototype.mean=function(e,t){return this.throwIfDisposed(),(0,ga.i)(this,e,t)};var ya=n(1465);(0,Nn.tp)().prototype.min=function(e,t){return this.throwIfDisposed(),(0,ya.j)(this,e,t)};var ba=n(6561);(0,Nn.tp)().prototype.minimum=function(e){return this.throwIfDisposed(),(0,ba.B)(this,e)};var va=n(4252);(0,Nn.tp)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),(0,va.F)(this,e,t)};var xa=n(3617);(0,Nn.tp)().prototype.mod=function(e){return this.throwIfDisposed(),(0,xa.z)(this,e)},(0,Nn.tp)().prototype.mul=function(e){return this.throwIfDisposed(),(0,i.l)(this,e)},(0,Nn.tp)().prototype.neg=function(){return this.throwIfDisposed(),(0,d.H)(this)};var wa=n(2155);(0,Nn.tp)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),(0,wa.x)(this,e,t,n)};var ka=n(135);(0,Nn.tp)().prototype.notEqual=function(e){return this.throwIfDisposed(),(0,ka.E)(this,e)};var Sa=n(6865);(0,Nn.tp)().prototype.oneHot=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),(0,Sa.M)(this,e,t,n)};var Ta=n(4100);(0,Nn.tp)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,Ta.P)(this)},(0,Nn.tp)().prototype.pad=function(e,t){return this.throwIfDisposed(),(0,Xt.e)(this,e,t)};var Na=n(7751);(0,Nn.tp)().prototype.pool=function(e,t,n,a,r,s){return this.throwIfDisposed(),(0,Na.d)(this,e,t,n,a,r,s)},(0,Nn.tp)().prototype.pow=function(e){return this.throwIfDisposed(),(0,kt.n)(this,e)};var Ia=n(9855);(0,Nn.tp)().prototype.prelu=function(e){return this.throwIfDisposed(),(0,Ia.N)(this,e)};var Ca=n(9556);(0,Nn.tp)().prototype.prod=function(e,t){return this.throwIfDisposed(),(0,Ca._)(this,e,t)};var Ea=n(6309);(0,Nn.tp)().prototype.reciprocal=function(){return this.throwIfDisposed(),(0,Ea.V)(this)};var Aa=n(5251);(0,Nn.tp)().prototype.relu=function(){return this.throwIfDisposed(),(0,Aa.V)(this)};var _a=n(9721);(0,Nn.tp)().prototype.relu6=function(){return this.throwIfDisposed(),(0,_a.j)(this)},(0,Nn.tp)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),(0,v.t)(this,e.shape)},(0,Nn.tp)().prototype.reshape=function(e){return this.throwIfDisposed(),(0,v.t)(this,e)};var Ra=n(2214);(0,Nn.tp)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),(0,Ra.v)(this,e,t,n)};var Fa=n(2823);(0,Nn.tp)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),(0,Fa.b)(this,e,t,n)},(0,Nn.tp)().prototype.reverse=function(e){return this.throwIfDisposed(),(0,Mt.B)(this,e)};var Da=n(9486);(0,Nn.tp)().prototype.rfft=function(){return this.throwIfDisposed(),(0,Da.z)(this)};var Oa=n(6509);(0,Nn.tp)().prototype.round=function(){return this.throwIfDisposed(),(0,Oa.L)(this)},(0,Nn.tp)().prototype.rsqrt=function(){return this.throwIfDisposed(),(0,_e.Z)(this)};var Ma=n(2022);(0,Nn.tp)().prototype.selu=function(){return this.throwIfDisposed(),(0,Ma.W)(this)};var za=n(3117);(0,Nn.tp)().prototype.separableConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),(0,za.w)(this,e,t,n,a,r,s)},(0,Nn.tp)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,Jt.r)(this)};var La=n(5740);(0,Nn.tp)().prototype.sign=function(){return this.throwIfDisposed(),(0,La._)(this)},(0,Nn.tp)().prototype.sin=function(){return this.throwIfDisposed(),(0,ue.F)(this)},(0,Nn.tp)().prototype.sinh=function(){return this.throwIfDisposed(),(0,he.L)(this)},(0,Nn.tp)().prototype.slice=function(e,t){return this.throwIfDisposed(),(0,lt.d)(this,e,t)};var Pa=n(6719);(0,Nn.tp)().prototype.softmax=function(e){return this.throwIfDisposed(),(0,Pa.V)(this,e)};var Ba=n(9973);(0,Nn.tp)().prototype.softplus=function(){return this.throwIfDisposed(),(0,Ba.l)(this)},(0,Nn.tp)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),(0,G.e)(this,e,t)},(0,Nn.tp)().prototype.split=function(e,t){return this.throwIfDisposed(),(0,ee.l)(this,e,t)},(0,Nn.tp)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,p.R)(this)},(0,Nn.tp)().prototype.square=function(){return this.throwIfDisposed(),(0,f.E)(this)};var Wa=n(208);(0,Nn.tp)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),(0,Wa.P)(this,e)};var Va=n(613);(0,Nn.tp)().prototype.squeeze=function(e){return this.throwIfDisposed(),(0,Va.r)(this,e)},(0,Nn.tp)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Nn.qY?[this,e]:[this,...e];return(0,De.t)(n,t)},(0,Nn.tp)().prototype.step=function(e){return this.throwIfDisposed(),(0,c.P)(this,e)};var Ua=n(1231);(0,Nn.tp)().prototype.stridedSlice=function(e,t,n,a,r,s,o,i){return this.throwIfDisposed(),(0,Ua.Y)(this,e,t,n,a,r,s,o,i)},(0,Nn.tp)().prototype.sub=function(e){return this.throwIfDisposed(),(0,m.j)(this,e)},(0,Nn.tp)().prototype.sum=function(e,t){return this.throwIfDisposed(),(0,x.c)(this,e,t)};var Ga=n(4894);(0,Nn.tp)().prototype.tan=function(){return this.throwIfDisposed(),(0,Ga.M)(this)};var Ha=n(6532);(0,Nn.tp)().prototype.tanh=function(){return this.throwIfDisposed(),(0,Ha.y)(this)},(0,Nn.tp)().prototype.tile=function(e){return this.throwIfDisposed(),(0,Re.V)(this,e)},(0,Nn.tp)().prototype.toBool=function(){return this.throwIfDisposed(),(0,o.w)(this,"bool")},(0,Nn.tp)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,o.w)(this,"float32")},(0,Nn.tp)().prototype.toInt=function(){return this.throwIfDisposed(),(0,o.w)(this,"int32")};var ja=n(2765);(0,Nn.tp)().prototype.topk=function(e,t){return this.throwIfDisposed(),(0,ja.r)(this,e,t)},(0,Nn.tp)().prototype.transpose=function(e){return this.throwIfDisposed(),(0,ge.m)(this,e)};var qa=n(9694);(0,Nn.tp)().prototype.unique=function(e){return this.throwIfDisposed(),(0,qa.A)(this,e)},(0,Nn.tp)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),(0,Oe.z)(this,e,t)},(0,Nn.tp)().prototype.unstack=function(e){return this.throwIfDisposed(),(0,bt.K)(this,e)},(0,Nn.tp)().prototype.where=function(e,t){return this.throwIfDisposed(),(0,Q._)(e,this,t)},(0,Nn.tp)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,S.P)(this)};class Ya extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ya.prototype)}}class Ka extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ka.prototype)}}class Xa extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Xa.prototype)}}class Za extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Za.prototype)}}class Qa extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Qa.prototype)}}Error;class $a{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error("The maxEntries of LRU caches must be at least 0, but got ".concat(e,"."));if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function Ja(e,t){if(Array.isArray(e)){let n=[];for(let a=0;a<t;a++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function er(e,t){if(!e)throw new Qa(t)}function tr(e,t){let n=0;for(const a of e)a===t&&n++;return n}function nr(e){return 1===e.length?e[0]:e}function ar(e){return Array.isArray(e)?e:[e]}function rr(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function sr(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let or={};function ir(e){if(null===e||void 0===e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function cr(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach(e=>cr(e));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!==typeof t.value?cr(t):e[n]=t.value)}}}function lr(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof e){const r=e;let s;if(r in n)s=n[r];else if(r in or)s=or[r];else if(s=t[r],null==s)throw new Xa("Unknown ".concat(a,": ").concat(e,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");return s}{const s=e;if(null==s.className||null==s.config)throw new Xa("".concat(a,": Improper config format: ")+"".concat(JSON.stringify(s),".\n")+"'className' and 'config' must set.");const o=s.className;let i,c;if(o in n?[i,c]=n[o]:o in or?[i,c]=or.className:o in t&&([i,c]=t[o]),null==i)throw new Xa("Unknown ".concat(a,": ").concat(o,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");if(null!=c){const e={};for(const n of Object.keys(or))e[n]=or[n];for(const r of Object.keys(n))e[r]=n[r];s.config.customObjects=e;const t=Object.assign({},or);for(const r of Object.keys(n))or[r]=n[r];cr(s.config);const a=c(i,s.config,n,r);return or=Object.assign({},t),a}{const e=Object.assign({},or);for(const a of Object.keys(n))or[a]=n[a];const t=new i(s.config);return or=Object.assign({},e),t}}}function ur(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function dr(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function hr(e){if(null==e)throw new Xa("Invalid value in obj: ".concat(JSON.stringify(e)));for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function pr(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Xa("".concat(n," is not a valid ").concat(t,".  Valid values are ").concat(e," or null/undefined."))}function fr(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return er(n>=0),er(a>=n),Array.isArray(e)&&e.length>=n&&e.length<=a&&e.every(e=>typeof e===t)}function mr(e,t){Array.isArray(e)?(r.util.assert(e.length>0,()=>"".concat(t," is unexpectedly an empty array.")),e.forEach((e,n)=>mr(e,"element ".concat(n+1," of ").concat(t)))):r.util.assert(Number.isInteger(e)&&e>0,()=>"Expected ".concat(t," to be a positive integer, but got ")+"".concat(gr(e),"."))}function gr(e){return null===e?"null":Array.isArray(e)?"["+e.map(e=>gr(e)).join(",")+"]":"string"===typeof e?'"'.concat(e,'"'):"".concat(e)}function yr(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let br=0;function vr(){return br++}const xr={};function wr(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e in xr||(xr[e]=0),xr[e]+=1,e+xr[e].toString()}const kr=["channelsFirst","channelsLast"],Sr=["nearest","bilinear"],Tr=["valid","same","causal"],Nr=["max","avg"],Ir=["sum","mul","concat","ave"],Cr=new Map;function Er(e){pr(kr,"DataFormat",e)}function Ar(e){pr(Tr,"PaddingMode",e)}function _r(e){pr(Nr,"PoolMode",e)}const Rr=[];function Fr(e,t){Rr.push(e);try{const e=t();return Rr.pop(),e}catch(n){throw Rr.pop(),n}}function Dr(e){if(!zr(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Rr.length?"":Rr.join("/")+"/")+e}function Or(e){if(!zr(e))throw new Error("Not a valid tensor name: '"+e+"'");Cr.has(e)||Cr.set(e,0);const t=Cr.get(e);if(Cr.set(e,Cr.get(e)+1),t>0){const n="".concat(e,"_").concat(t);return Cr.set(n,1),n}return e}const Mr=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function zr(e){return!!e.match(Mr)}function Lr(e){return e===parseInt(e.toString(),10)}function Pr(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let a=1;for(let r=t;r<n;++r)a*=e[r];return a}function Br(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a<t&&(t=a)}return t}function Wr(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a>t&&(t=a)}return t}function Vr(e,t){if(t<e)throw new Xa("end (".concat(t,") < begin (").concat(e,") is forbidden."));const n=[];for(let a=e;a<t;++a)n.push(a);return n}let Ur;function Gr(){return null==Ur&&(Ur=(0,r.backend)().epsilon()),Ur}function Hr(e,t){return r.cast(e,t)}function jr(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),r.reshape(e,n)}function qr(e,t,n){return(0,r.tidy)(()=>{switch(e.rank){case 1:return r.slice1d(e,t,n);case 2:return r.slice2d(e,[t,0],[n,e.shape[1]]);case 3:return r.slice3d(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return r.slice4d(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return r.slice(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return r.slice(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Xa("sliceAlongFirstAxis() received an unsupported tensor rank: "+"".concat(e.rank))}})}function Yr(e,t,n){return(0,r.tidy)(()=>{switch(e.rank){case 1:return r.slice1d(e,t,n);case 2:return r.slice2d(e,[0,t],[e.shape[0],n]);case 3:return r.slice3d(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return r.slice4d(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Xa("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}})}function Kr(e,t,n,a){return(0,r.tidy)(()=>{switch(e.rank){case 1:return r.slice1d(e,t,n);case 2:switch(a){case 1:return qr(e,t,n);case 2:return Yr(e,t,n);default:throw new Xa("The axis is not within the rank of the tensor "+"".concat(a))}case 3:switch(a){case 1:return qr(e,t,n);case 2:return r.slice3d(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Yr(e,t,n);default:throw new Xa("The axis is not within the rank of the tensor "+"".concat(a))}case 4:switch(a){case 1:return qr(e,t,n);case 2:return r.slice4d(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return r.slice4d(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Yr(e,t,n);default:throw new Xa("The axis is not within the rank of the tensor "+"".concat(a))}default:throw new Xa("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}})}function Xr(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(t=e[0].rank,n=0!==t?t:0),n===e[0].rank&&(n=-1),r.concat(e,n)}function Zr(e,t){switch(e.rank){case 1:return r.concat1d([e,t]);case 2:return r.concat2d([e,t],0);case 3:return r.concat3d([e,t],0);case 4:return r.concat4d([e,t],0);default:throw new Xa("concatAlongFirstAxis() received an unsupported "+"tensor rank: ".concat(e.rank))}}function Qr(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Xa("The length of input n (".concat(t.length,") does not match ")+"the number of dimensions in input x (".concat(e.rank,")"));return r.tile(e,t)}function $r(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0;return r.randomNormal(e,t,n,a,s)}function Jr(e,t,n,a){if(e.rank<2||t.rank<2)throw new Za("dot requires both inputs to be rank >= 2"+" but got x shape = ".concat(e.shape," and y shape = ").concat(t.shape));if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Za("If rank y >= 3, then the second last dim"+" of y must equal the last dim of x but got x shape = ".concat(e.shape," and ")+" y shape = ".concat(t.shape))}if(2===e.rank&&2===t.rank){const s=!1,o=!1;return r.fused.matMul({a:e,b:t,transposeA:s,transposeB:o,bias:a?ns(e.rank,a,"channelsLast"):null,activation:n})}{const s=e.shape.slice(),o=s.pop();e=r.reshape(e,[-1,o]);const i=t.shape.slice(),c=i.pop(),l=i.pop(),u=[...i,c],d=Array.from({length:t.rank},(e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n);t=r.reshape(r.transpose(t,d),[l,-1]);const h=[...s,...u],p=!1,f=!1;return r.reshape(r.fused.matMul({a:e,b:t,transposeA:p,transposeB:f,bias:a?ns(e.rank,a,"channelsLast"):null,activation:n}),h)}}function es(e,t,n){return(0,r.tidy)(()=>(t=Array.isArray(t)?(0,r.tensor1d)(t,"int32"):r.cast(t,"int32"),r.gather(e,t,n)))}function ts(e){return r.mul(e,e)}function ns(e,t,n){const a=t.shape;if(1!==t.rank&&t.rank!==e)throw new Xa("Unexpected bias dimensions: ".concat(t.rank)+"; expected it to be 1 or ".concat(e));if(5===e){if("channelsFirst"===n)return 1===a.length?r.reshape(t,[1,a[0],1,1,1]):r.reshape(t,[1,a[3],a[0],a[1],a[2]]);if("channelsLast"===n)return 1===a.length?r.reshape(t,[1,1,1,1,a[0]]):r.reshape(t,[1].concat(a))}else if(4===e){if("channelsFirst"===n)return 1===a.length?r.reshape(t,[1,a[0],1,1]):r.reshape(t,[1,a[2],a[0],a[1]]);if("channelsLast"===n)return 1===a.length?r.reshape(t,[1,1,1,a[0]]):r.reshape(t,[1].concat(a))}else if(3===e){if("channelsFirst"===n)return 1===a.length?r.reshape(t,[1,a[0],1]):r.reshape(t,[1,a[1],a[0]]);if("channelsLast"===n)return 1===a.length?r.reshape(t,[1,1,a[0]]):r.reshape(t,[1].concat(a))}else if(e<3)return t;throw new Xa("Unsupported input rank by biasAdd: ".concat(t.rank))}function as(e,t,n){return(0,r.tidy)(()=>(null==n&&(n="channelsLast"),Er(n),r.add(e,ns(e.rank,t,n))))}function rs(e,t,n,a){return(0,r.tidy)(()=>r.dropout(e,t,n,a))}function ss(e,t){return arguments.length>2&&void 0!==arguments[2]&&arguments[2]?e():t()}const os=["fanIn","fanOut","fanAvg"],is=["normal","uniform","truncatedNormal"];class cs extends r.serialization.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class ls extends cs{apply(e,t){return(0,r.zeros)(e,t)}}ls.className="Zeros",r.serialization.registerClass(ls);class us extends cs{apply(e,t){return(0,r.ones)(e,t)}}us.className="Ones",r.serialization.registerClass(us);class ds extends cs{constructor(e){if(super(),"object"!==typeof e)throw new Xa("Expected argument of type ConstantConfig but got ".concat(e));if(void 0===e.value)throw new Xa("config must have value set but got ".concat(e));this.value=e.value}apply(e,t){return(0,r.tidy)(()=>(0,r.mul)((0,r.scalar)(this.value),(0,r.ones)(e,t)))}getConfig(){return{value:this.value}}}ds.className="Constant",r.serialization.registerClass(ds);class hs extends cs{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return(0,r.randomUniform)(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}hs.className="RandomUniform",r.serialization.registerClass(hs);class ps extends cs{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Za("randomNormal does not support dType ".concat(t,"."));return $r(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ps.className="RandomNormal",r.serialization.registerClass(ps);class fs extends cs{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Za("truncatedNormal does not support dType ".concat(t,"."));return(0,r.truncatedNormal)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}fs.className="TruncatedNormal",r.serialization.registerClass(fs);class ms extends cs{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return(0,r.tidy)(()=>{if(2!==e.length||e[0]!==e[1])throw new Xa("Identity matrix initializer can only be used for 2D square matrices.");return(0,r.mul)(this.gain,(0,r.eye)(e[0]))})}getConfig(){return{gain:this.gain}}}ms.className="Identity",r.serialization.registerClass(ms);class gs extends cs{constructor(e){if(super(),e.scale<0)throw new Xa("scale must be a positive float. Got: ".concat(e.scale));var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,pr(os,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){pr(is,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e){let t,n,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(Er(a),2===e.length)t=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===a){const a=Pr(e,2);t=e[1]*a,n=e[0]*a}else if("channelsLast"===a){const a=Pr(e,0,e.length-2);t=e[e.length-2]*a,n=e[e.length-1]*a}}else{const a=Pr(e);t=Math.sqrt(a),n=Math.sqrt(a)}return[t,n]}(e),a=n[0],s=n[1];let o=this.scale;if("fanIn"===this.mode?o/=Math.max(1,a):"fanOut"===this.mode?o/=Math.max(1,s):o/=Math.max(1,(a+s)/2),"normal"===this.distribution){const n=Math.sqrt(o);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Za("".concat(this.getClassName()," does not support dType ").concat(t,"."));return(0,r.truncatedNormal)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*o);return(0,r.randomUniform)(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}gs.className="VarianceScaling",r.serialization.registerClass(gs);class ys extends gs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gs.className}}ys.className="GlorotUniform",r.serialization.registerClass(ys);class bs extends gs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gs.className}}bs.className="GlorotNormal",r.serialization.registerClass(bs);class vs extends gs{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gs.className}}vs.className="HeNormal",r.serialization.registerClass(vs);class xs extends gs{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gs.className}}xs.className="HeUniform",r.serialization.registerClass(xs);class ws extends gs{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gs.className}}ws.className="LeCunNormal",r.serialization.registerClass(ws);class ks extends gs{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gs.className}}ks.className="LeCunUniform",r.serialization.registerClass(ks);class Ss extends cs{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return(0,r.tidy)(()=>{if(e.length<2)throw new Za("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError("Unsupported data type ".concat(t,"."));const n=r.util.sizeFromShape(e.slice(0,-1)),a=e[e.length-1],s=n*a;s>this.ELEMENTS_WARN_SLOW&&console.warn("Orthogonal initializer is being called on a matrix with more "+"than ".concat(this.ELEMENTS_WARN_SLOW," (").concat(s,") elements: ")+"Slowness may result.");const o=$r([Math.max(a,n),Math.min(a,n)],0,1,t,this.seed),i=r.linalg.qr(o,!1);let c=i[0];const l=i[1].flatten().stridedSlice([0],[Math.min(a,n)*Math.min(a,n)],[Math.min(a,n)+1]);return c=(0,r.mul)(c,l.sign()),n<a&&(c=c.transpose()),(0,r.mul)((0,r.scalar)(this.gain),c.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}Ss.className="Orthogonal",r.serialization.registerClass(Ss);const Ts={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Ns(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return lr(e,r.serialization.SerializationMap.getMap().classNameMap,t,"initializer")}function Is(e){return ir(e)}function Cs(e){if("string"===typeof e){const t=e in Ts?Ts[e]:e;if("GlorotNormal"===t)return new bs;if("GlorotUniform"===t)return new ys;if("HeNormal"===t)return new vs;if("HeUniform"===t)return new xs;if("LeCunNormal"===t)return new ws;if("LeCunUniform"===t)return new ks;{const e={};return e.className=t,e.config={},Ns(e)}}return e instanceof cs?e:Ns(e)}function Es(e){return Array.isArray(e)&&Array.isArray(e[0])}function As(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function _s(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Xa("Expected Tensor length to be 1; got ".concat(e.length));t=e[0]}else t=e;return t}function Rs(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new Xa("Expected exactly 1 Shape; got ".concat(e.length))}return e}function Fs(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce((e,t)=>e*t);return t}const Ds="Variable";class Os{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Ds,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=vr(),n=null==n?Ds:n,this.originalName=Dr(n),this.name=Or(this.originalName),this.trainable_=a,this.constraint=s,this.val=r.variable(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error("LayersVariable ".concat(this.name," is already disposed."))}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Ms(e){return e.map(e=>e.read())}function zs(e){e.forEach(e=>{e[0].write(e[1])})}class Ls{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Ps{constructor(e,t,n,a,r,s,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=a,this.callArgs=r,this.outputTensorIndex=o,this.id=vr(),null!=s&&(this.originalName=Dr(s),this.name=Or(this.originalName)),this.rank=t.length}}let Bs=0;class Ws{constructor(e,t){this.callArgs=t,this.id=Bs++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Vs=0;class Us extends r.serialization.Serializable{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Vs++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=rr(e)+"_"+wr(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Ka("The layer has never been called "+"and thus has no defined ".concat(t,"."));if(this.inboundNodes.length<=e)throw new Xa("Asked to get ".concat(t," at node ").concat(e,", ")+"but the layer has only ".concat(this.inboundNodes.length," inbound nodes."));return this.inboundNodes[e]}getInputAt(e){return nr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return nr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Ya("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new Ya("Layer ".concat(this.name)+" is not connected, no input to return.");return nr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Ya("Layer ".concat(this.name)+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new Ya("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return nr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=ar(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=ar(this.inputSpec);if(t.length!==n.length)throw new Xa("Layer ".concat(this.name," expects ").concat(n.length," inputs, ")+"but it received ".concat(t.length," input tensors. ")+"Input received: ".concat(e));for(let a=0;a<t.length;a++){const e=t[a],r=n[a];if(null==r)continue;const s=e.rank;if(null!=r.ndim&&s!==r.ndim)throw new Xa("Input ".concat(a," is incompatible with layer ").concat(this.name,": ")+"expected ndim=".concat(r.ndim,", found ndim=").concat(s));if(null!=r.maxNDim&&s>r.maxNDim)throw new Xa("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected max_ndim=".concat(r.maxNDim,", found ndim=").concat(s));if(null!=r.minNDim&&s<r.minNDim)throw new Xa("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected min_ndim=".concat(r.minNDim,", found ndim=").concat(s,"."));if(null!=r.dtype&&e.dtype!==r.dtype)throw new Xa("Input ".concat(a," is incompatible with layer ").concat(this.name," ")+": expected dtype=".concat(r.dtype,", found dtype=").concat(e.dtype,"."));if(r.axes){const t=e.shape;for(const e in r.axes){const n=Number(e),s=r.axes[e],o=n>=0?t[n]:t[t.length+n];if(null!=s&&-1===[s,null].indexOf(o))throw new Xa("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected axis ").concat(n," of input shape to ")+"have value ".concat(s," but got shape ").concat(t,"."))}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const n=r.shape[t],s=e.shape[t];if(null!=n&&null!=s&&n!==s)throw new Xa("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected shape=").concat(r.shape,", ")+"found shape=".concat(e.shape,"."))}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=ar(e),a=function(e){let t=!0;for(const n of ar(e))if(!(n instanceof Ps)){t=!1;break}return t}(e),r=function(e){let t=!0;for(const n of ar(e))if(n instanceof Ps){t=!1;break}return t}(e);if(a===r)throw new Xa("Arguments to apply() must be all SymbolicTensors or all Tensors");return Fr(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of ar(e))t.push(n.shape);this.build(nr(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,a);const r=ar(a),s=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(a=nr(s),null!=this.activityRegularizer)throw new Za("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{const n=function(e){e=ar(e);const t=[];for(const n of e)t.push(n.shape);return nr(t)}(e),a=this.computeOutputShape(n);let r;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=a&&a.length>0&&Array.isArray(a[0])?a.map((n,a)=>new Ps(s,n,this,ar(e),t,this.name,a)):new Ps(s,a,this,ar(e),t,this.name),this.addInboundNode(e,r,null,null,n,a,t),this._refCount++,null!=this.activityRegularizer)throw new Za("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}})}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+"".concat(JSON.stringify(e),") does not match that of the ")+"batchInputShape (".concat(JSON.stringify(this.batchInputShape),") ")+"of the layer ".concat(this.name));else{let t=!1;this.batchInputShape.forEach((n,a)=>{null!=n&&null!=e[a]&&e[a]!==n&&(t=!0)}),t&&console.warn("The shape of the input tensor "+"(".concat(JSON.stringify(e),") does not ")+"match the expectation of layer ".concat(this.name,": ")+"".concat(JSON.stringify(this.batchInputShape)))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Ya("The layer ".concat(this.name," has never been called and thus has no ")+"defined output shape.");const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Ya("The layer ".concat(this.name," has multiple inbound nodes with different ")+'output shapes. Hence the notion of "output shape" is ill-defined for the layer.')}countParams(){if(!this.built)throw new Ka("You tried to call countParams() on ".concat(this.name,", ")+"but the layer is not built yet. Build it first by calling build(batchInputShape).");return Fs(this.weights)}build(e){this.built=!0}getWeights(){return Ms(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(e){(0,r.tidy)(()=>{const t=this.weights;if(t.length!==e.length)throw new Xa('You called setWeights(weights) on layer "'.concat(this.name,'" ')+"with a weight list of length ".concat(e.length,", ")+"but the layer was expecting ".concat(t.length," weights. ")+"Provided weights: ".concat(e,"..."));if(0===t.length)return;const n=[],a=Ms(t);for(let s=0;s<a.length;++s){const o=a[s],i=t[s],c=e[s];if(!r.util.arraysEqual(o.shape,c.shape))throw new Xa("Layer weight shape ".concat(o.shape," ")+"not compatible with provided weight shape ".concat(c.shape));n.push([i,c])}zs(n)})}addWeight(e,t,n,a,r,s,o,i){if(-1!==this._addedWeightNames.indexOf(e))throw new Xa("Duplicate weight name ".concat(e," for layer ").concat(this.name));this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=null!=i?i():Cs("zeros"));const c=a.apply(t,n),l=new Os(c,n,e,s,o);return c.dispose(),null!=r&&this.addLoss(()=>r.apply(l.read())),null==s&&(s=!0),s?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=ar(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.");t.forEach(e=>{if(null!=e)throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.")})}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const a=this.computeMask(e,n),r=ar(t),s=ar(a);if(r.length!==s.length)throw new Error("".concat(this.name," outputs ").concat(r.length," tensors ")+"but ".concat(r.length," masks for those tensors"));for(let o=0;o<r.length;o++)r[o].kerasMask=s[o]}addInboundNode(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const i=ar(e);t=ar(t),n=ar(n),a=ar(a),r=As(r),s=As(s);const c=[],l=[],u=[];for(const d of i)c.push(d.sourceLayer),l.push(d.nodeIndex),u.push(d.tensorIndex);new Ws({outboundLayer:this,inboundLayers:c,nodeIndices:l,tensorIndices:u,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:a,inputShapes:r,outputShapes:s},o);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error("Layer '".concat(this.name,"' is already disposed."))}dispose(){if(!this.built)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been ")+"built yet.");if(null===this._refCount)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been used ")+"yet.");this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Gs(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const a=Gs(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of a)-1===t.indexOf(e)&&t.push(e)}return t}}}class Hs extends Us{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:wr("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Xa("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Xa("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Xa("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const a=new Ps(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new Ws({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Xa("Cannot pass any input to an "+"InputLayer's apply() method. InputLayer name: ".concat(this.name))}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Hs.className="InputLayer",r.serialization.registerClass(Hs);class js{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof js)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Xa("Duplicate key: name=".concat(e.name,", id=").concat(e.id));return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return(0,r.cast)(t,e.dtype)}catch(n){throw new Xa("The dtype of the feed (".concat(t.dtype,") can not be cast to the dtype ")+"of the key '".concat(e.name,"' (").concat(e.dtype,")."))}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Ps){if(null==this.id2Value[e.id])throw new Xa("Nonexistent key: ".concat(e.name));return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Xa("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Value[t]}}getMask(e){if(e instanceof Ps){if(null==this.id2Value[e.id])throw new Xa("Nonexistent key: ".concat(e.name));return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Xa("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&(0,r.dispose)(this.id2Mask)}}const qs=new $a,Ys=new $a;function Ks(e,t,n,a){const s=null!=n&&n.training,o=Array.isArray(e),i=o?e:[e],c=i.map(e=>e.name),l=[],u=t.names();for(const r of c)-1!==u.indexOf(r)?l.push(t.getValue(r)):l.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);const d=c.join(",")+"|"+t.names().sort().join(",");let h,p=qs.get(d);if(null==p){const e=function(e,t){r.util.assert(null!=e&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],a={};if(1===e.length){const r=Zs(e[0],t);n=r.sorted,a=r.recipientMap}else{const r=new Set;for(const s of e){const{sorted:e,recipientMap:o}=Zs(s,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const t in o)null==a[t]&&(a[t]=new Set),o[t].forEach(e=>a[t].add(e))}}return{sorted:n,recipientCounts:Xs(a)}}(i,t);p=e.sorted,h=e.recipientCounts,qs.put(d,p),Ys.put(d,h)}h={},s||Object.assign(h,Ys.get(d));const f=new js(t);for(let m=0;m<p.length;++m){if(null!=a){const e=(0,r.memory)().numTensors;e>a.maxNumTensors&&(a.maxNumTensors=e),e<a.minNumTensors&&(a.minNumTensors=e)}const e=p[m],o=e.sourceLayer;if(o instanceof Hs)continue;const i=[],u=[],d=[];let g=!1;for(const n of e.inputs){const e=f.getValue(n),a=f.getMask(n);i.push(e),u.push(a),null!=a&&(g=!0),s||(h[n.name]--,0!==h[n.name]||t.hasKey(n)||-1!==c.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||d.push(e))}g&&((n=n||{}).mask=u[0]);const y=ar(o.apply(i,n));let b=null;o.supportsMasking&&(b=o.computeMask(i,u));const v=Qs(e),x=Array.isArray(v)?v:[v];for(let t=0;t<x.length;++t){f.hasKey(x[t])||f.add(x[t],y[t],Array.isArray(b)?b[0]:b);const e=c.indexOf(x[t].name);-1!==e&&(l[e]=y[t])}s||(0,r.dispose)(d)}return f.disposeMasks(),o?l:l[0]}function Xs(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Zs(e,t){const n=new Set,a=[],r={};for(const i of t.names())n.add(i);const s=[],o=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=o[o.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),a.push(e),n.add(e.name),t&&o.pop();else{o.push(s.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:a,recipientMap:r}}function Qs(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const a of e.sourceLayer.inboundNodes[t].outputTensors)if(a.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function $s(e,t){return(0,r.tidy)(()=>r.sqrt(r.sum(r.mul(e,e),t,!0)))}(0,r.env)().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,function(e){null!=qs&&qs.setMaxEntries(e),null!=Ys&&Ys.setMaxEntries(e)});class Js extends r.serialization.Serializable{getConfig(){return{}}}class eo extends Js{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,r.tidy)(()=>{const t=$s(e,this.axis),n=r.clipByValue(t,0,this.maxValue);return r.mul(e,r.div(n,r.add(Gr(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}eo.className="MaxNorm",r.serialization.registerClass(eo);class to extends Js{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,r.tidy)(()=>r.div(e,r.add(Gr(),$s(e,this.axis))))}getConfig(){return{axis:this.axis}}}to.className="UnitNorm",r.serialization.registerClass(to);class no extends Js{apply(e){return r.relu(e)}}no.className="NonNeg",r.serialization.registerClass(no);class ao extends Js{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,r.tidy)(()=>{const t=$s(e,this.axis),n=r.add(r.mul(this.rate,r.clipByValue(t,this.minValue,this.maxValue)),r.mul(1-this.rate,t));return r.mul(e,r.div(n,r.add(Gr(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}ao.className="MinMaxNorm",r.serialization.registerClass(ao);const ro={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function so(e){return ir(e)}function oo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return lr(e,r.serialization.SerializationMap.getMap().classNameMap,t,"constraint")}function io(e){if(null==e)return null;if("string"===typeof e){return oo({className:e in ro?ro[e]:e,config:{}})}return e instanceof Js?e:oo(e)}async function co(e){if(null==e)return;const t=[],n=[],a=[];for(const r in e){const s=e[r];if("number"!==typeof s){const e=s;t.push(e.data()),n.push(r),a.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];(0,r.dispose)(a)}}function lo(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}var uo;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(uo||(uo={}));class ho{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class po{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class fo extends ho{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const a in t){const e=t[a];if("number"===typeof e)this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+e*n;else{let t;a in this.totals?t=this.totals[a]:this.totals[a]=0;const s=(0,r.tidy)(()=>(0,r.add)(this.totals[a],(0,r.mul)(e,n)));this.totals[a]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:(0,r.tidy)(()=>{const e=(0,r.mul)((0,r.div)(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),(0,r.keep)(t[n])}))}}class mo extends ho{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!==typeof a[s]){const o=a[s];e.push(o.data()),t.push(r),n.push(s)}}const a=await Promise.all(e);for(let r=0;r<a.length;++r){this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=a[r][0]}}}class go extends ho{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||r.nextFrame,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");r.util.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let a,s=null!=n?n():r.util.now();return function(){const o=null!=n?n():r.util.now();return o-s<t||(s=o,a=e(...arguments)),a}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const a=[];null!=this.yield&&(await co(n),a.push(this.yield(e,t,n))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await co(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await co(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await co(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await co(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):r.util.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await co(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await co(e),await this.trainEnd(e))}}function yo(e,t){if(null==e&&(e={}),e instanceof ho)return[e];if(Array.isArray(e)&&e[0]instanceof ho)return e;return ar(e).map(e=>new go(e,t))}class bo{constructor(){}static registerCallbackConstructor(e,t){r.util.assert(e>=0&&Number.isInteger(e),()=>"Verbosity level is expected to be an integer >= 0, "+"but got ".concat(e)),bo.checkForDuplicate(t),null==bo.constructors[e]&&(bo.constructors[e]=[]),bo.constructors[e].push(t)}static checkForDuplicate(e){for(const t in bo.constructors){bo.constructors[+t].forEach(t=>{if(t===e)throw new Xa("Duplicate callback constructor.")})}}static clear(){bo.constructors={}}static createCallbacks(e){const t=[];for(const n in bo.constructors){const a=+n;e>=a&&t.push(...bo.constructors[a])}return t.map(e=>new e)}}function vo(e,t,n,a,r,s,o,i,c){const l=new mo,u=[new fo,...bo.createCallbacks(t)];null!=e&&u.push(...e),u.push(l);const d=new po(u);return d.setParams({epochs:n,initialEpoch:a,samples:r,steps:s,batchSize:o,verbose:t,doValidation:i,metrics:c}),{callbackList:d,history:l}}function xo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return lr(e,r.serialization.SerializationMap.getMap().classNameMap,t,"layer",n)}function wo(e,t){return(0,r.tidy)(()=>{"float32"!==e.dtype&&(e=r.cast(e,"float32"));const n=r.sum(ts(e),t,!0),a=r.fill(n.shape,Gr()),s=r.sqrt(r.maximum(n,a));return r.div(e,s)})}function ko(e,t){return(0,r.tidy)(()=>r.mean(ts(r.sub(t,e)),-1))}function So(e,t){return(0,r.tidy)(()=>r.mean(r.abs(r.sub(t,e)),-1))}function To(e,t){return(0,r.tidy)(()=>{const n=r.sub(e,t),a=r.clipByValue(r.abs(e),Gr(),Number.MAX_VALUE),s=r.abs(r.div(n,a));return r.mul(100,r.mean(s,-1))})}function No(e,t){return(0,r.tidy)(()=>{const n=r.clipByValue(t,Gr(),Number.MAX_VALUE),a=r.log(r.add(1,n)),s=r.clipByValue(e,Gr(),Number.MAX_VALUE),o=r.log(r.add(1,s));return r.mean(ts(r.sub(a,o)),-1)})}function Io(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,r.tidy)(()=>{if(n)t=r.softmax(t);else{const e=r.sum(t,t.shape.length-1,!0);t=r.div(t,e)}return t=r.clipByValue(t,Gr(),1-Gr()),r.neg(r.sum(r.mul(r.cast(e,"float32"),r.log(t)),t.shape.length-1))})}function Co(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,r.tidy)(()=>{const a=r.cast(r.floor(function(e){const t=[Pr(e.shape)];return r.reshape(e,t)}(e)),"int32"),s=(t=r.clipByValue(t,Gr(),1-Gr())).shape;return Io(r.reshape(r.oneHot(a,s[s.length-1]),s),t,n)})}function Eo(e,t){return(0,r.tidy)(()=>{let n;return n=r.clipByValue(t,Gr(),1-Gr()),n=r.log(r.div(n,r.sub(1,n))),r.mean(function(e,t){if(!r.util.arraysEqual(e.shape,t.shape))throw new Xa("logits and labels must have the same shape, but got shapes "+"".concat(JSON.stringify(e.shape)," and ").concat(JSON.stringify(t.shape)));return(0,r.tidy)(()=>{const n=r.relu(t),a=r.neg(r.abs(t));return r.add(r.sub(n,r.mul(t,e)),r.log1p(r.exp(a)))})}(e,n),-1)})}function Ao(e,t){return(0,r.tidy)(()=>{const n=r.clipByValue(e,Gr(),1),a=r.clipByValue(t,Gr(),1);return r.sum(r.mul(e,r.log(r.div(n,a))),-1)})}function _o(e,t){return(0,r.tidy)(()=>{const n=wo(e,-1),a=wo(t,-1),s=r.mul(n,a);return r.neg(r.sum(s,-1))})}bo.constructors={};const Ro={meanSquaredError:ko,meanAbsoluteError:So,meanAbsolutePercentageError:To,meanSquaredLogarithmicError:No,squaredHinge:function(e,t){return(0,r.tidy)(()=>{const n=r.maximum(0,r.sub(1,r.mul(e,t)));return r.mean(ts(n),-1)})},hinge:function(e,t){return(0,r.tidy)(()=>{const n=r.maximum(0,r.sub(1,r.mul(e,t)));return r.mean(n,-1)})},categoricalHinge:function(e,t){return(0,r.tidy)(()=>{const n=r.sum(r.mul(e,t),-1),a=r.max(r.mul(r.sub(1,e),t),-1);return r.maximum(0,r.add(1,r.sub(a,n)))})},logcosh:function(e,t){return(0,r.tidy)(()=>{const n=Math.log(2),a=r.sub(t,e),s=r.sub(r.add(a,r.softplus(r.mul(-2,a))),n);return r.mean(s,-1)})},categoricalCrossentropy:Io,sparseCategoricalCrossentropy:Co,binaryCrossentropy:Eo,kullbackLeiblerDivergence:Ao,poisson:function(e,t){return(0,r.tidy)(()=>{const n=r.log(r.add(Gr(),t));return r.mean(r.sub(t,r.mul(e,n)),-1)})},cosineProximity:_o};function Fo(e){if("string"===typeof e){if(e in Ro)return Ro[e];let t="Unknown loss ".concat(e);throw e.toLowerCase().includes("softmaxcrossentropy")&&(t="Unknown loss ".concat(e,". ")+'Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),new Xa(t)}return e}function Do(e,t){return(0,r.tidy)(()=>{const n=r.mul(.5,r.onesLike(t)),a=Hr(r.greater(t,n),e.dtype);return r.mean(r.equal(e,a),-1)})}function Oo(e,t){return(0,r.tidy)(()=>Hr(r.equal(r.argMax(e,-1),r.argMax(t,-1)),"float32"))}function Mo(e,t){return(0,r.tidy)(()=>r.cast(r.sum(r.logicalAnd(r.equal(e,1),r.equal(t,1))),"float32"))}function zo(e,t){return Eo(e,t)}function Lo(e,t){return e.rank===t.rank&&(e=r.squeeze(e,[e.rank-1])),(t=r.argMax(t,-1)).dtype!==e.dtype&&(t=r.cast(t,e.dtype)),r.cast(r.equal(e,t),"float32")}const Po=Io,Bo=Co,Wo={binaryAccuracy:Do,categoricalAccuracy:Oo,precision:function(e,t){return(0,r.tidy)(()=>{const n=Mo(e,t),a=function(e,t){return(0,r.tidy)(()=>r.cast(r.sum(r.logicalAnd(r.equal(e,0),r.equal(t,1))),"float32"))}(e,t),s=r.add(n,a);return r.cast(r.where(r.greater(s,0),r.div(n,s),0),"float32")})},categoricalCrossentropy:Po,sparseCategoricalCrossentropy:Bo,mse:ko,MSE:ko,mae:So,MAE:So,mape:To,MAPE:To,cosine:_o};function Vo(e){if("string"===typeof e&&e in Wo)return Wo[e];if("string"!==typeof e&&null!=e)return e;throw new Xa("Unknown metric ".concat(e))}function Uo(e){if(er(null!==e,"Unknown LossOrMetricFn ".concat(e)),"string"===typeof e)return e;{let t;for(const n of Object.keys(Ro))if(Ro[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Wo))if(Wo[n]===e){t=n;break}return void 0!==t?t:e.name}}const Go=1048576;function Ho(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!jo(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>Go&&console.warn('User-defined metadata of model "'.concat(t,'" is too large in ')+"size (length=".concat(n.length," when serialized). It is not ")+"recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= "+"".concat(Go,"."))}}function jo(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!jo(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!jo(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function qo(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const r=function(e){let t=!0;const n=[],a=[];for(const r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(const r of n){if(r.length>1||1===r.length&&r[0].inboundLayers.length>1){t=!1;break}a.push(...r)}if(t)for(const r of e.layers){let e=!1;for(const n of r.inboundNodes)if(-1!==a.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Input Shape","Output shape","Param #"];let o;if(r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(e=>Math.floor(t*e))),!r){s.push("Receives inputs"),o=[];for(const t in e.nodesByDepth)o.push(...e.nodesByDepth[t])}a("_".repeat(t)),Yo(s,n,a),a("=".repeat(t));const i=e.layers;for(let u=0;u<i.length;++u)r?Ko(i[u],n,a):Xo(i[u],n,o,a),a((u===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const c=function(e){let t;t=null!=e.collectedTrainableWeights?Fs(e.collectedTrainableWeights):Fs(e.trainableWeights);return t}(e),l=Fs(e.nonTrainableWeights);a("Total params: ".concat(c+l)),a("Trainable params: ".concat(c)),a("Non-trainable params: ".concat(l)),a("_".repeat(t))}function Yo(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,a="";for(let r=0;r<e.length;++r)r>0&&(a=a.slice(0,a.length-1)+" "),a+=e[r],a=a.slice(0,t[r]),a+=" ".repeat(t[r]-a.length);n(a)}function Ko(e,t,n){let a,r;try{r=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(i){r="multiple"}try{a=JSON.stringify(e.outputShape)}catch(i){a="multiple"}const s=e.name,o=e.getClassName();Yo(["".concat(s," (").concat(o,")"),r,a,e.countParams().toString()],t,n)}function Xo(e,t,n,a){let r,s;try{s=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(u){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(u){r="multiple"}const o=[];for(const d of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(d)))for(let e=0;e<d.inboundLayers.length;++e){const t=d.inboundLayers[e].name,n=d.nodeIndices[e],a=d.tensorIndices[e];o.push("".concat(t,"[").concat(n,"][").concat(a,"]"))}const i=e.name,c=e.getClassName(),l=0===o.length?"":o[0];Yo(["".concat(i," (").concat(c,")"),s,r,e.countParams().toString(),l],t,a);for(let d=1;d<o.length;++d)Yo(["","","","",o[d]],t,a)}function Zo(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function Qo(e,t){if(null===e)return null;if("string"===typeof e)return sr(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];Zo(t,r,a)?n.push(a):n.push(Qo(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n];if("name"===n&&"string"===typeof a)t[n]=a;else{const e=sr(n);t[e]=Qo(a,e)}}return t}}function $o(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return rr(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];Zo(t,r,a)?n.push(a):n.push($o(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n],r=rr(n);t[r]="name"!==n&&"className"!==n||"string"!==typeof a?$o(a,n):a}return t}}const Jo="4.22.0";class ei extends Us{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=wr(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],dr(this.inputs).length!==this.inputs.length)throw new Xa("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+"".concat(this.inputs.map(e=>e.name)));dr(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+"".concat(this.outputs.map(e=>e.name))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;er(0===t,"input layer has >1 nodes"),er(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof Hs))throw new TypeError("Input layers to a LayersModel must be InputLayer objects. "+"Received inputs: ".concat(e.inputs,". ")+"Input ".concat(y," (0-based) originates ")+"from layer type ".concat(t.getClassName(),"."));this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(e=>e.shape),this.internalOutputShapes=this.outputs.map(e=>e.shape);const t={},n={},a={},r={},s={},o=[],i=(e,t,n,a,r,c)=>{null!=a&&null!=r&&null!=c||(a=e.sourceLayer,r=e.nodeIndex,c=e.tensorIndex);const l=a.inboundNodes[r];if(-1!==n.indexOf(l))throw new Ka("The tensor ".concat(e.name,' at layer "').concat(a.name,'" ')+"is part of a cycle.");if(-1!==t.indexOf(l))return;this.containerNodes.add(ei.nodeKey(a,r)),a.id in s||(s[a.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const u=l.inboundLayers.length;for(let s=0;s<u;s++){const e=l.inputTensors[s],a=l.inboundLayers[s],r=l.nodeIndices[s],o=l.tensorIndices[s];i(e,t,n,a,r,o)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);o.push(l)},c=[],l=[];for(const y of this.outputs)i(y,c,l);const u=o.slice().reverse();for(const y of u){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];const s=null==a[y.outboundLayer.id]?0:a[y.outboundLayer.id];e=Math.max(e,s),a[y.outboundLayer.id]=e,r[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let a=0;a<y.inboundLayers.length;a++){const r=y.inboundLayers[a],s=y.nodeIndices[a],o=r.inboundNodes[s],i=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(e+1,i),n[o.id]=o}}const d={};for(const y in t){const e=t[y];e in d||(d[e]=[]),d[e].push(n[y])}const h={};for(const y in a){const e=a[y];e in h||(h[e]=[]),h[e].push(r[y])}let p=Object.keys(h).map(e=>parseInt(e,10)).sort(ur);this.layers=[];for(const y of p){const e=h[y];e.sort((e,t)=>{const n=s[e.id],a=s[t.id];return n<a?-1:n>a?1:0});for(const t of e)t instanceof ei&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=h,p=Object.keys(d).map(e=>parseInt(e,10)).sort(ur);const f=this.inputs.slice(),m=[];for(const y of p)for(const e of d[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Ka("Graph disconnected: cannot obtain value for tensor ".concat(n)+' at layer "'.concat(t.name,'". ')+"The following previous layers were accessed without "+"issue: ".concat(m));for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=d;const g=this.layers.map(e=>e.name);for(const y of g){const e=g.filter(e=>e===y).length;if(1!==e)throw new Ka('The name "'.concat(y,'" is used ').concat(e," times ")+"in the model. All layer names should be unique. Layer names: "+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Ws({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(e=>null),outputMasks:this.outputs.map(e=>null),inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs.map(e=>e.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error("Container '".concat(this.name,"' is already disposed."))}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(t=>t.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Xa("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let a=0;const r=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);r&&this.parseWeights(e);for(const o of this.layers)for(const[e,t]of o.weights.entries()){const s=r?"".concat(t.name.split("/").slice(0,-1).join("/")+"/").concat(e):t.originalName;if(null!=n[s])throw new Xa("Duplicate weight name: ".concat(s));n[s]=t,a++}const s=[];for(const o in e){let a=o;if(null==n[o]){const e=o.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[o]]);else if(t)throw new Xa("Provided weight data has no target variable: ".concat(o));delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Xa("".concat(e.length," of ").concat(a," weights are not set: ")+"".concat(e))}zs(s)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),a=["vars","layer_checkpoint_dependencies"],r=n.map(e=>e.startsWith("_")?e.slice(1):e).filter(e=>!a.includes(e)).join("/");r!==t&&(e[r]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers ".concat(Jo),t.backend="TensorFlow.js",t}toJSON(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=$o(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return(0,r.tidy)(()=>{e=ar(e);const n=new js;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Ks(this.outputs,n,t)})}computeMask(e,t){return(0,r.tidy)(()=>{let n;return e=ar(e),n=null==t?Ja(null,e.length):ar(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){const t=As(e);if(t.length!==this.inputLayers.length)throw new Xa("Invalid inputShape argument ".concat(e,": ")+"model has ".concat(this.inputLayers.length," tensor inputs."));const n={};for(let o=0;o<t.length;o++){const e=this.inputLayers[o],a=t[o];n[e.name+"_0_0"]=a}const a=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(ur);if(a.length>1)for(const o of a){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map(e=>e.id).indexOf(e.id))continue;const a=[];for(let o=0;o<t.inboundLayers.length;o++){const e=t.inboundLayers[o],r=t.nodeIndices[o],s=t.tensorIndices[o],i=n["".concat(e.name,"_").concat(r,"_").concat(s)];a.push(i)}const r=As(e.computeOutputShape(nr(a))),s=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++){n["".concat(e.name,"_").concat(s,"_").concat(t)]=r[t]}}}const r=[],s=[];for(let o=0;o<this.outputLayers.length;o++){const e=this.outputLayers[o],t=this.outputLayersNodeIndices[o],n=this.outputLayersTensorIndices[o],a="".concat(e.name,"_").concat(t,"_").concat(n);s.push(a)}for(let o=0;o<s.length;o++){const e=s[o];er(e in n),r.push(n[e])}return nr(r)}runInternalGraph(e,t){null==t&&(t=Ja(null,e.length));const n={};for(let i=0;i<this.inputs.length;++i){const a=this.inputs[i],r=e[i],s=t[i];n[a.id]=[r,s]}const a=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(ur);for(const i of a){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer,a=t.inputTensors,r=t.outputTensors,s=new Array;for(const t of a)t.id in n&&s.push(n[t.id]);if(s.length===a.length){let a,o,i,c,l={};if(null!=t.callArgs&&(l=t.callArgs),1===s.length){const[t,n]=s[0];null==l.mask&&(l.mask=n),i=ar(e.call(t,l)),c=ar(e.computeMask(t,n)),a=[t],o=[n]}else a=s.map(e=>e[0]),o=s.map(e=>e[1]),null==l.mask&&(l.mask=o),i=ar(e.call(a,l)),c=ar(e.computeMask(a,o));if(e.activityRegularizer)throw new Za("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],a=i[e],s=c[e];n[t.id]=[a,s]}}}}const r=[],s=[],o=[];for(const i of this.outputs){er(i.id in n,"Could not compute output ".concat(i.name," : ").concat(i.id));const[e,t]=n[i.id];o.push(e.shape),r.push(e),s.push(t)}return[r,s,o]}buildNodeConversionMap(e){const t={};let n;for(const a of this.layers){n=a instanceof ei?1:0;for(let e=0;e<a.inboundNodes.length;e++){const r=ei.nodeKey(a,e);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new Xa("Provide either a layer name or layer index");if("number"===typeof e)return this.findLayer(e);for(const n of this.layers)if(n.name===e)return n;throw new Xa("No such layer: ".concat(e))}findLayer(e){if(this.layers.length<=e)throw new Xa("Was asked to retrieve layer at index ".concat(e,", but model only ")+"has ".concat(this.layers.length," layer(s)."));return this.layers[e]}calculateLosses(){return(0,r.tidy)(()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const a=ei.nodeKey(t,n);this.containerNodes.has(a)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const o of this.layers){const e=o.getClassName(),a=o.getConfig(),r=[];for(let n=0;n<o.inboundNodes.length;n++){const e=o.inboundNodes[n],a=ei.nodeKey(o,n);let i={};if(this.containerNodes.has(a)){if(e.callArgs)try{JSON.stringify(e.callArgs),i=e.callArgs}catch(s){console.warn("Layer ".concat(o.name," was passed ")+"non-serializable keyword arguments: "+"".concat(e.callArgs,". They will not be included ")+"in the serialized model (and thus will be missing at deserialization time)."),i={}}if(e.inboundLayers.length>0){const n=[];for(let a=0;a<e.inboundLayers.length;a++){const r=e.inboundLayers[a],s=e.nodeIndices[a],o=e.tensorIndices[a];let c=t[ei.nodeKey(r,s)];null==c&&(c=0),n.push([r.name,c,o,i])}r.push(n)}}}const i={};i.name=o.name,i.className=e,i.config=a,i.inboundNodes=r,n.push(i)}e.layers=n;const a=[];for(let o=0;o<this.inputLayers.length;o++){const e=this.inputLayers[o],n=this.inputLayersNodeIndices[o],r=ei.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let s=t[r];null!==s&&void 0!==s||(s=0);const i=this.inputLayersTensorIndices[o];a.push([e.name,s,i])}e.inputLayers=a;const r=[];for(let o=0;o<this.outputLayers.length;o++){const e=this.outputLayers[o],n=this.outputLayersNodeIndices[o],a=ei.nodeKey(e,n);if(!this.containerNodes.has(a))continue;let s=t[a];null!==s&&void 0!==s||(s=0);const i=this.outputLayersTensorIndices[o];r.push([e.name,s,i])}return e.outputLayers=r,e}static fromConfig(e,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a={},r={};function s(e,t){e.name in r?r[e.name].push(t):r[e.name]=[t]}function o(e,t){const n=[];let r;for(const o of t){const i=o[0],c=o[1],l=o[2];if(r=null==o[3]?{}:o[3],!(i in a))return void s(e,t);const u=a[i];if(u.inboundNodes.length<=c)return void s(e,t);const d=u.inboundNodes[c];n.push(d.outputTensors[l])}n.length>0&&e.apply(nr(n),r)}function i(e){const r=e.name,o=xo(e,null!=t.customObjects?t.customObjects:{});o.setFastWeightInitDuringBuild(n),a[r]=o;e.inboundNodes.forEach(e=>{if(!(e instanceof Array))throw new Xa("Corrupted configuration, expected array for nodeData: ".concat(e));s(o,e)})}const c=t.name,l=t.layers;for(const f of l)i(f);for(;!hr(r);)for(const e of l){const t=a[e.name];if(t.name in r){const e=r[t.name];delete r[t.name];for(const n of e)o(t,n)}}const u=[],d=[],h=t.inputLayers;for(const f of h){const e=f[0],t=f[1],n=f[2];er(e in a);const r=a[e].inboundNodes[t].outputTensors;u.push(r[n])}const p=t.outputLayers;for(const f of p){const e=f[0],t=f[1],n=f[2];er(e in a);const r=a[e].inboundNodes[t].outputTensors;d.push(r[n])}return new e({inputs:u,outputs:d,name:c})}get stateful(){if(this._stateful)throw new Xa("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){(0,r.tidy)(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}function ti(e,t,n){const a=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>null);if(1===a)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==a)throw new Error("Provided ".concat(n," is an array of ").concat(e.length," ")+"element(s), but the model has ".concat(a," outputs. ")+"Make sure a set of weights is provided for each model output.");return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach(t=>{t in e?n.push(e[t]):n.push(null)}),n}throw new Error("The model has multiple (".concat(a,") outputs, ")+"so ".concat(n," must be either an array with ")+"".concat(a," elements or an object with ").concat(t," keys. ")+"Provided ".concat(n," not understood: ").concat(JSON.stringify(e)))}function ni(e,t){return ti(e,t,"classWeight")}async function ai(e,t,n,a){if(null!=t||null!=a)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=(0,r.tidy)(()=>{if(1===e.shape.length)return(0,r.clone)(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return(0,r.argMax)(e,t)}if(1===e.shape[1])return(0,r.reshape)(e,[e.shape[0]]);throw new Error("Encountered unexpected last-dimension size (".concat(e.shape[1],") ")+"during handling of class weights. The size is expected to be >= 1.")}throw new Error("Unexpected rank of target (y) tensor (".concat(e.rank,") during ")+"handling of class weights. The rank is expected to be 1 or 2.")}),a=Array.from(await t.data());(0,r.dispose)(t);const s=[];return a.forEach(e=>{if(null==n[e])throw new Error("classWeight must contain all classes in the training data. "+"The class ".concat(e," exists in the data but not in ")+"classWeight");s.push(n[e])}),(0,r.tensor1d)(s,"float32")}return null}function ri(e,t){return(0,r.mul)(e,t)}function si(e,t){let n,a;const s=t;n=s.xs,a=s.ys,r.util.assert(null!=n&&null!=a,()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+"".concat(t));const o=oi("input",e.inputNames,n),i=oi("output",e.outputNames,a),c=o[0].shape[0];r.util.assert(o.length===e.inputs.length,()=>"LayersModel has ".concat(e.inputs.length," inputs, but the dataset ")+"provides ".concat(o.length," inputs.  (Expected input keys: ")+"".concat(JSON.stringify(e.inputNames),")")),r.util.assert(i.length===e.outputs.length,()=>"LayersModel has ".concat(e.outputs.length," outputs, but the dataset ")+"provides ".concat(i.length," outputs.  (Expected output keys: ")+"".concat(JSON.stringify(e.outputNames),")"));for(let l=0;l<o.length;l++)r.util.assert(o[l].shape[0]===c,()=>"Batch size mismatch: input "+"".concat(e.inputNames[l]," has ").concat(o[l].shape[0],"; ")+"expected  ".concat(c," based on input ").concat(e.inputNames[0],"."));for(let l=0;l<i.length;l++)r.util.assert(i[l].shape[0]===c,()=>"Batch size mismatch: output "+"".concat(e.outputNames[l]," has ").concat(i[l].shape[0],"; ")+"expected  ".concat(c," based on input ").concat(e.inputNames[0],"."));return{xs:o,ys:i}}function oi(e,t,n){if(n instanceof r.Tensor)return[n];if(Array.isArray(n))return r.util.assert(n.length===t.length,()=>"Received an array of ".concat(n.length," Tensors, but expected ").concat(t.length," to match the ").concat(e," keys ").concat(t,".")),n;{const a=[];for(const r of t){if(null==n[r])throw new Xa("The feature data generated by the dataset lacks the required "+"".concat(e," key '").concat(r,"'."));a.push(n[r])}return a}}async function ii(e,t,n){const a=null!=n.batchesPerEpoch;if(r.util.assert(null!=e.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),r.util.assert(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),r.util.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>"For fitDataset(), config.epochs is expected to be a positive "+"integer, but got ".concat(n.epochs)),r.util.assert(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>"For fitDataset(), config.batchesPerEpoch is expected to be a "+"positive integer if specified, but got ".concat(n.batchesPerEpoch)),r.util.assert(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let o,i;if(s)if(ci(n.validationData))r.util.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, "+"but got ".concat(n.validationBatches));else{const e=function(e){if(3===e.length)throw new Za("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);o=e.xs,i=e.ys}const c=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map(e=>"val_"+e)):l.slice();const d=yo(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=vo(d,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,s,u);p.setModel(e),e.history=f,await p.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const u={};await p.onEpochBegin(m);let d=0,h=0;for(a||(g=await t.iterator());!a||d<n.batchesPerEpoch;){const t=await g.next();if(a&&t.done){console.warn("You provided `batchesPerEpoch` as "+"".concat(n.batchesPerEpoch,", ")+"but your dataset iterator ran out of data after "+"".concat(d," batches; ")+"interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+"".concat(n.batchesPerEpoch*n.epochs," batches). ")+"You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:a,ys:s}=si(e,t.value),o={};o.batch=h,o.size=a[0].shape[0],await p.onBatchBegin(h,o);const i=[];if(null!=n.classWeight){const t=ni(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await ai(s[e],null,t[e]))}const u=a.concat(s).concat(i),f=c(u);r.dispose(u);for(let e=0;e<l.length;++e){const t=l[e],n=f[e];o[t]=n,r.keep(n)}await p.onBatchEnd(h,o),lo(o),h++,d++}if(a?d>=n.batchesPerEpoch:t.done){if(s){let t;t=ci(n.validationData)?ar(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):ar(e.evaluate(o,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u["val_".concat(e.metricsNames[n])]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(m,u),m++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function ci(e){return"function"===typeof e.iterator}function li(e){r.util.assert(e>0&&Number.isInteger(e),()=>"batchSize is required to be a positive integer, but got ".concat(e))}function ui(e,t,n){return null==e?[null]:Array.isArray(e)?e.map(e=>qr(e,t,n-t)):qr(e,t,n-t)}function di(e,t){return r.tidy(()=>null==e?null:Array.isArray(e)?e.map(e=>di(e,t)):es(e,"int32"===t.dtype?t:r.cast(t,"int32")))}function hi(e,t){const n=[];let a=0,r=null;for(;a<e;)r=a+t,r>=e&&(r=e),n.push([a,r]),a=r;return n}function pi(e){const t=[];e instanceof r.Tensor&&(e=[e]);for(let n=0;n<e.length;++n){const a=e[n];if(1===a.rank)t.push(jr(a,1));else{if(0===a.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(a)}}return t}function fi(e,t){if(null==e)return;const n=[];if(t instanceof r.Tensor)n.push(t.id);else if(Array.isArray(t))t.forEach(e=>n.push(e.id));else if(null!=t)for(const r in t){const e=t[r];n.push(e.id)}const a=[];if(e instanceof r.Tensor)-1===n.indexOf(e.id)&&a.push(e);else if(Array.isArray(e))e.forEach(e=>{-1===n.indexOf(e.id)&&a.push(e)});else if(null!=e)for(const r in e){const t=e[r];-1===n.indexOf(t.id)&&a.push(t)}a.forEach(e=>{e.isDisposed||e.dispose()})}function mi(e){return Array.isArray(e)}function gi(e){return!function(e){return e instanceof r.Tensor}(e)&&!mi(e)}function yi(e,t,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==t||0===t.length){if(null!=e){let t=!1;if(mi(e)&&e.length>0)t=!0;else if(gi(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Xa("Error when checking model ".concat(s," expected no data, ")+"but got ".concat(e))}return[]}if(null==e)return t.map(e=>null);if(gi(e)){a=[];for(const n of t){if(null==e[n])throw new Xa('No data provided for "'.concat(n,'". Need data for each key in: ')+"".concat(t));a.push(e[n])}}else if(mi(e)){if(e.length!==t.length)throw new Xa("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"model expected. Expected to see ".concat(t.length," Tensor(s), but ")+"instead got the following list of Tensor(s): ".concat(e));a=e}else{if(t.length>1)throw new Xa("The model ".concat(s," expects ").concat(t.length," Tensor(s), ")+"but only received one Tensor. Found: Tensor with shape ".concat(e.shape));a=[e]}if(a=pi(a),null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=a[o];if(e.shape.length!==n[o].length)throw new Xa("Error when checking ".concat(s,": expected ").concat(t[o]," ")+"to have ".concat(n[o].length," dimension(s). but got array with ")+"shape ".concat(e.shape));for(let t=0;t<n[o].length;++t){if(0===t&&!r)continue;const a=e.shape[t],i=n[o][t];if(null!=i&&i>=0&&a!==i)throw new Xa("".concat(s," expected a batch of elements where each ")+"example has shape [".concat(n[o].slice(1,n[o].length),"] ")+"(i.e.,tensor shape [*,".concat(n[o].slice(1,n[o].length),"])")+" but the ".concat(s," received an input with ").concat(e.shape[0])+" examples, each with shape [".concat(e.shape.slice(1,e.shape.length),"]")+" (tensor shape [".concat(e.shape,"])"))}}return a}function bi(e,t,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(e)){if(e.length!==t.length)throw new Xa("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"the model expected. Expected to see ".concat(t.length," Tensor(s),")+" but instead got ".concat(e.length," Tensors(s)."));a=e}else{if(t.length>1)throw new Xa("The model expects ".concat(t.length," ").concat(s," Tensors, ")+"but only received one Tensor. Found: array with shape "+"".concat(JSON.stringify(e.shape),"."));a=[e]}if(null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=a[o];if(e.shape.length!==n[o].length)throw new Xa("Error when checking ".concat(s,": expected ").concat(t[o]," ")+"to have ".concat(n[o].length," dimension(s), but got array with ")+"shape ".concat(JSON.stringify(e.shape)));for(let a=0;a<n[o].length;++a){if(0===a&&!r)continue;const i=e.shape[a],c=n[o][a];if(null!=c&&c!==i)throw new Xa("Error when checking ".concat(s,": expected ")+"".concat(t[o]," to have shape ").concat(JSON.stringify(n[o])," but ")+"got array with shape ".concat(JSON.stringify(e.shape),"."))}}}class vi extends ei{constructor(e){super(e),this.isTraining=!1}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new Xa("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");qo(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>r.train.adagrad(.01),Adadelta:()=>r.train.adadelta(1,.95,Gr()),Adam:()=>r.train.adam(.001,.9,.999,Gr()),Adamax:()=>r.train.adamax(.002,.9,.999,Gr(),0),RMSProp:()=>r.train.rmsprop(.001,.9,0,Gr()),SGD:()=>r.train.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Xa("Unknown Optimizer ".concat(e))}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof r.Optimizer))throw new Xa("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Xa("When passing an Array as loss, it should have one entry per "+"model output. The model has ".concat(this.outputs.length," output(s), ")+"but you passed loss=".concat(e.loss,"."));const n=e.loss;t=n.map(e=>Fo(e))}else{const n=Fo(e.loss);this.outputs.forEach(e=>{t.push(n)})}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Xa('Unknown entry in loss dictionary: "'.concat(t,'". ')+"Only expected the following keys: ".concat(this.outputNames));for(const n of this.outputNames)null==e.loss[n]&&console.warn('Output "'.concat(n,'" is missing from loss dictionary. We assume ')+"this was done on purpose, and we will not be expecting data "+"to be passed to ".concat(n," during training")),t.push(Fo(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let r=0;r<this.outputs.length;++r){const e=this.internalOutputShapes[r],t=this.outputNames[r];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[r])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Fr("loss",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}});const a=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>[]);let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError("Type of metrics argument not understood. Expected an string,"+"function, Array, or Object, found: ".concat(e));n=e}if(Array.isArray(n))return t.map(e=>n);{const e=[];for(const a of t){let t=n.hasOwnProperty(a)?n[a]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Fr("metric",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,a,r;for(const o of t){if("string"===typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===Eo?-1!==["accuracy","acc"].indexOf(o)?a=Do:-1!==["crossentropy","ce"].indexOf(o)&&(a=zo):this.lossFunctions[e]===Co?-1!==["accuracy","acc"].indexOf(o)?a=Lo:-1!==["crossentropy","ce"].indexOf(o)&&(a=Bo):-1!==["accuracy","acc"].indexOf(o)?a=Oo:-1!==["crossentropy","ce"].indexOf(o)&&(a=Po),-1!==["accuracy","acc"].indexOf(o)?s="acc":-1!==["crossentropy","ce"].indexOf(o)&&(s="ce"),r=a,n=""+s}else{const e=Vo(o);r=e,n=""+Uo(o)}let t;Fr(n,()=>{t=r}),s(e,n,t)}})(a[e])}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=null==n.batchSize?32:n.batchSize;li(a);const r=this.standardizeUserDataXY(e,t,!0,a);try{const e=r[0].concat(r[1]);this.makeTestFunction();const t=this.testFunction;return nr(this.testLoop(t,e,a,n.verbose,n.steps))}finally{fi(r[0],e),fi(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const a=null!=(n=n||{}).batches,s=e.testFunction;let o=[];if(n.verbose>0)throw new Za("Verbose mode is not implemented yet.");r.util.assert(!a||n.batches>0&&Number.isInteger(n.batches),()=>"Test loop expects `batches` to be a positive integer, but "+"received ".concat(JSON.stringify(n.batches)));const i="function"===typeof t.next?t:await t.iterator();let c=0,l=0;for(;!a||l<n.batches;){const t=await i.next();if(o=r.tidy(()=>{if(t.value){const{xs:n,ys:a}=si(e,t.value),i=n.concat(a),u=r.tidy(()=>s(i));if(r.dispose(i),0===l)for(let e=0;e<u.length;++e)o.push((0,r.scalar)(0));const d=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=o[e];o[e]=r.tidy(()=>r.add(o[e],r.mul(d,t))),l>0&&r.dispose(n)}r.dispose(u),c+=d,++l}return o}),t.done){a&&console.warn("Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` "+"batches (in this case, ".concat(n.batches," batches). ")+"You may need to use the repeat() function when building your dataset.");break}}for(let u=0;u<o.length;++u){const e=o[u];o[u]=r.div(o[u],c),r.dispose(e)}return nr(o)}(this,e,t)}checkNumSamples(e,t,n){let a,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(a=null,null!=t)throw new Xa("If ".concat(r," is set, batchSize must be null or undefined.")+"Got batchSize = ".concat(t))}else{if(null==e)throw new Xa("Either the input data should have a defined shape, or "+"".concat(r," shoud be specified."));a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Xa("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),a=n?t:[t],s=this.retrieveSymbolicTensors(a),o=new js;if(e instanceof r.Tensor&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Xa("The number of inputs provided (".concat(e.length,") ")+"does not match the number of inputs of this model "+"(".concat(this.inputs.length,")."));for(let t=0;t<this.inputs.length;++t)o.add(this.inputs[t],e[t])}else for(const r of this.inputs){const t=e[r.name];if(null==t)throw new Xa("No value is provided for the model's input ".concat(r.name));o.add(r,t)}const i=Ks(s,o);return n?i:i[0]}retrieveSymbolicTensors(e){const t=Ja(null,e.length);let n=e.length;for(const a of this.layers){const r=Array.isArray(a.output)?a.output:[a.output],s=r.map(e=>e.name);for(let a=0;a<e.length;++a){const o=s.indexOf(e[a]);if(-1!==o&&(t[a]=r[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach((t,a)=>{null==t&&n.push(e[a])}),new Xa("Cannot find SymbolicTensors for output name(s): "+"".concat(JSON.stringify(n)))}return t}predictLoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return r.tidy(()=>{const a=this.checkNumSamples(e);if(n)throw new Za("Verbose predictLoop() is not implemented yet.");const s=hi(a,t),o=this.outputs.map(e=>[]);for(let t=0;t<s.length;++t){r.tidy(()=>{const n=s[t][0],a=s[t][1],r=ui(e,n,a),o=[];if(Array.isArray(r))for(let e=0;e<r.length;++e)o.push({key:this.inputs[e],value:r[e]});else o.push({key:this.inputs[0],value:r});const i=new js(o);return Ks(this.outputs,i)}).forEach((e,t)=>o[t].push(e))}return nr(o.map(e=>r.concat(e,0)))})}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=pi(e);bi(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return li(e),this.predictLoop(n,e)}finally{fi(n,e)}}predictOnBatch(e){bi(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new Ka("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let r=0;r<this.feedOutputShapes.length;++r){const e=this.feedOutputShapes[r];this.feedLossFns[r]===Co?a.push(e.slice(0,e.length-1).concat([1])):a.push(e)}if(function(e,t){const n=dr(e.map(e=>e.shape[0]));n.sort();const a=dr(t.map(e=>e.shape[0]));if(a.sort(),n.length>1)throw new Xa("All input Tensors (x) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(e.map(e=>e.shape))));if(a.length>1)throw new Xa("All target Tensors (y) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(t.map(e=>e.shape))));if(n.length>0&&a.length>0&&!r.util.arraysEqual(n,a))throw new Xa("Input Tensors should have the same number of samples as target "+"Tensors. Found ".concat(n[0]," input sample(s) and ").concat(a[0]," target ")+"sample(s).")}(e=yi(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=yi(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const a=[ko,Eo,Io];for(let r=0;r<e.length;++r){const s=e[r],o=t[r],i=n[r];if(null!=o){if(o===Io&&1===s.shape[s.shape.length-1])throw new Xa("You are passing a target array of shape ".concat(s.shape," while using ")+"a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].");if(-1!==a.indexOf(o)){const e=s.shape.slice(1),t=i.slice(1);for(let n=0;n<e.length;++n){const a=e[n],r=t[n];if(null!=r&&a!==r)throw new Xa("A target Tensor with shape ".concat(s.shape," was passed for an ")+"output of shape ".concat(i,", while using a loss function that ")+"expects targets to have the same shape as the output.")}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!==0)throw new Xa("In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size "+"".concat(n,". Found: ").concat(e[0].shape[0]," sample(s)."));return[e,t]}async standardizeUserData(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=arguments.length>5?arguments[5]:void 0;const[o,i]=this.standardizeUserDataXY(e,t,r,s);if(null!=n)throw new Error("sample weight is not supported yet.");let c=null;if(null!=a){const e=ni(a,this.outputNames);c=[];for(let t=0;t<e.length;++t)c.push(await ai(i[t],null,e[t]))}return[o,i,c]}testLoop(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4?arguments[4]:void 0;return r.tidy(()=>{const o=this.checkNumSamples(t,n,s,"steps"),i=[];if(a>0)throw new Za("Verbose mode is not implemented yet.");if(null!=s)throw new Za("steps mode in testLoop() is not implemented yet");{const a=hi(o,n),s=(0,r.tensor1d)(Vr(0,o));for(let n=0;n<a.length;++n){const o=a[n][0],c=a[n][1],l=qr(s,o,c-o),u=di(t,l),d=e(u);if(0===n)for(let e=0;e<d.length;++e)i.push((0,r.scalar)(0));for(let e=0;e<d.length;++e){const t=d[e];i[e]=r.add(i[e],r.mul(c-o,t))}}for(let e=0;e<i.length;++e)i[e]=r.div(i[e],o)}return i})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const a=e[n];let r=a;if(tr(e,a)>1){const t=tr(e.slice(0,n),a);r+="_".concat(t)}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),o=[],i=this.collectedTrainableWeights.map(e=>e.read());return[this.optimizer_.minimize(()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new js(e),c=Ks(this.outputs,i,{training:!0});let l;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(a[n],c[n]);null!=s[n]&&(e=ri(e,s[n]));const o=r.mean(e);t.push(o),l=0===n?e:r.add(l,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],s=this.metricsTensors[n][1];e=r.mean(t(a[s],c[s]))}r.keep(e),o.push(e)}return l=r.mean(l),this.calculateLosses().forEach(e=>{l=r.add(l,e)}),l},!0,i)].concat(o)}}makeTestFunction(){this.testFunction=e=>r.tidy(()=>{const t=[];let n;const a=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=[];for(let e=0;e<this.inputs.length;++e)o.push({key:this.inputs[e],value:a[e]});const i=new js(o),c=Ks(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const a=this.lossFunctions[e],o=r.mean(a(s[e],c[e]));n=0===e?o:r.add(n,o),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],a=this.metricsTensors[e][1],o=r.mean(n(s[a],c[a]));t.push(o)}return t})}async fit(e,t){let n,a,s,o,i,c,l,u,d,h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{const r=null==h.batchSize?32:h.batchSize;li(r);const p=!1,f=await this.standardizeUserData(e,t,h.sampleWeight,h.classWeight,p,r);n=f[0],a=f[1],d=f[2];let m,g=!1;if(null!=h.validationData&&h.validationData.length>0){if(g=!0,2!==h.validationData.length)throw 3===h.validationData.length?new Za("validationData including sample weights is not supported yet."):new Xa("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+"".concat(h.validationData," is invalid."));i=h.validationData[0],c=h.validationData[1];const e=!0,t=await this.standardizeUserData(i,c,null,null,e,r);l=t[0],u=t[1],m=l.concat(u)}else if(null!=h.validationSplit&&h.validationSplit>0&&h.validationSplit<1){g=!0;const e=Math.floor(n[0].shape[0]*(1-h.validationSplit)),t=n[0].shape[0];l=ui(n,e,t),s=n,n=ui(n,0,e),u=ui(a,e,t),o=a,a=ui(a,0,e),m=l.concat(u)}else null!=h.validationSteps&&(g=!0);const y=n.concat(a).concat(d);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),v=this.getDedupedMetricsNames();let x,w;g?(this.makeTestFunction(),x=this.testFunction,w=v.slice().concat(v.map(e=>"val_"+e))):(x=null,m=[],w=v.slice());const k=yo(h.callbacks,h.yieldEvery);return await this.fitLoop(b,y,v,r,h.epochs,h.verbose,k,x,m,h.shuffle,w,h.initialEpoch,null,null)}finally{this.isTraining=!1,fi(n,e),fi(a,t),fi(s,e),fi(o,t),fi(l,i),fi(u,c),null!=d&&r.dispose(d)}}async fitLoop(e,t,n,a,s,o,i,c,l,u,d,h,p,f){null==a&&(a=32),null==s&&(s=1),null==u&&(u=!0),null==h&&(h=0);let m=!1;if(null!=c&&null!=l&&(m=!0),null!=f&&(m=!0,null==p))throw new Xa("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(t,a,p,"steps_per_epoch");let y;null!=g&&(y=Vr(0,g)),null==o&&(o=1);const{callbackList:b,history:v}=vo(i,o,s,h,g,p,a,m,d);b.setModel(this),this.history=v,await b.onTrainBegin(),this.stopTraining_=!1;for(let x=h;x<s;++x){await b.onEpochBegin(x);const s={};if(null!=p)throw new Za("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new Za("batch shuffling is not implemneted yet");u&&r.util.shuffle(y);const o=(0,r.tensor1d)(y),i=hi(g,a);for(let u=0;u<i.length;++u){const d={};if(await b.onBatchBegin(u,d),r.tidy(()=>{const h=i[u][0],p=i[u][1],f=qr(o,h,p-h);d.batch=u,d.size=p-h;const g=di(t,f),y=e(g);for(let e=0;e<n.length;++e){const t=n[e],a=y[e];d[t]=a,r.keep(a)}if(u===i.length-1&&m){const e=this.testLoop(c,l,a);for(let t=0;t<n.length;++t){const a=n[t],o=e[t];r.keep(o),s["val_"+a]=o}}}),await b.onBatchEnd(u,d),lo(d),this.stopTraining_)break}o.dispose()}if(await b.onEpochEnd(x,s),this.stopTraining_)break}return await b.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return ii(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),a=n[0],s=n[1],o=this.makeTrainFunction()(a.concat(s)),i=[];for(const r of o){const e=await r.data();i.push(e[0])}return r.dispose(o),fi(n[0],e),fi(n[1],t),nr(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,a=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let s=0;s<a.length;++s)n&&!a[s].trainable||t.push({name:a[s].originalName,tensor:r[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=r.memory().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-r.memory().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=rr(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(e=>rr(e))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const a of t){if("string"!==typeof n[a])throw new Error("Serialization of non-string loss is not supported.");e[a]=rr(n[a])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[rr(Uo(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>rr(Uo(e)));{const e={};for(const t in this.metrics)e[t]=rr(Uo(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=xo(Qo(e.optimizer_config));let n,a;if("string"===typeof e.loss)n=sr(e.loss);else if(Array.isArray(e.loss))n=e.loss.map(e=>sr(e));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=sr(e.loss[t])}if(Array.isArray(e.metrics))a=e.metrics.map(e=>sr(e));else if(null!=e.metrics){a={};for(const t in e.metrics)a[t]=sr(e.metrics[t])}this.compile({loss:n,metrics:a,optimizer:t})}async save(e,t){if("string"===typeof e){const t=r.io.getSaveHandlers(e);if(0===t.length)throw new Xa("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new Xa("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new Xa("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await r.io.encodeWeights(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v".concat(Jo),convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await r.io.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=r.io.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Ho(this.userDefinedMetadata,this.name,e),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=n.data,a.weightSpecs=n.specs,e.save(a)}setUserDefinedMetadata(e){Ho(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}vi.className="Model",r.serialization.registerClass(vi);class xi extends vi{}xi.className="Functional",r.serialization.registerClass(xi);class wi extends vi{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:wr("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(e=>e<0))throw new Xa("Negative dimension size caused by adding layer "+"".concat(e.name," with input shape [")+"".concat(e.inboundNodes[0].inputTensors[0].shape,"]"))}add(e){const t=e instanceof wi||e instanceof vi;let n;if(t){if(n=e,1!==n.outputs.length)throw new Xa("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Xa("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Xa("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Xa("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Hs({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Xa("A layer added to a Sequential model must not already be "+"connected somewhere else. LayersModel received layer ".concat(e.name," ")+"which has ".concat(e.inboundNodes.length," pre-existing inbound ")+"connections.");if(1!==e.inboundNodes[0].outputTensors.length)throw new Xa("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Gs(this.outputs[0])}this.inboundNodes=[],new Ws({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Ja(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Rs(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new vi({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Ka("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Ka("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Ka("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Ka("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t){let n,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Xa("Legacy serialization format not supported yet.");n=t}else r.util.assert(null!=t.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),n=t.layers,delete t.layers,s=t;const o=new e(s);if(!(o instanceof wi))throw new Za("Sequential.fromConfig called on non-Sequential input: ".concat(o));for(const r of n){const e=xo(r,void 0,a);a&&e.setFastWeightInitDuringBuild(!0),o.add(e)}return o}set stopTraining(e){if(null==this.model)throw new Xa("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Xa("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}wi.className="Sequential",r.serialization.registerClass(wi);class ki extends r.serialization.Serializable{getConfig(){return{}}}class Si extends ki{apply(e){return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==t)throw new Za("Support for alpha values other than 1 (".concat(t,") is not implemented ")+"yet.");return r.elu(e)}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}Si.className="elu",r.serialization.registerClass(Si);class Ti extends ki{apply(e){return r.selu(e)}}Ti.className="selu",r.serialization.registerClass(Ti);class Ni extends ki{apply(e){return r.relu(e)}}Ni.className="relu",r.serialization.registerClass(Ni);class Ii extends ki{apply(e){return(0,r.tidy)(()=>r.minimum(6,r.relu(e)))}}Ii.className="relu6",r.serialization.registerClass(Ii);class Ci extends ki{apply(e){return e}}Ci.className="linear",r.serialization.registerClass(Ci);class Ei extends ki{apply(e){return r.sigmoid(e)}}Ei.className="sigmoid",r.serialization.registerClass(Ei);class Ai extends ki{apply(e){return function(e){return(0,r.tidy)(()=>{const t=r.add(.5,r.mul(.2,e));return r.clipByValue(t,0,1)})}(e)}}Ai.className="hardSigmoid",r.serialization.registerClass(Ai);class _i extends ki{apply(e){return r.softplus(e)}}_i.className="softplus",r.serialization.registerClass(_i);class Ri extends ki{apply(e){return function(e){return(0,r.tidy)(()=>r.div(e,r.add(r.abs(e),1)))}(e)}}Ri.className="softsign",r.serialization.registerClass(Ri);class Fi extends ki{apply(e){return r.tanh(e)}}Fi.className="tanh",r.serialization.registerClass(Fi);class Di extends ki{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return r.softmax(e,t)}}Di.className="softmax",r.serialization.registerClass(Di);class Oi extends ki{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return r.logSoftmax(e,t)}}Oi.className="logSoftmax",r.serialization.registerClass(Oi);class Mi extends ki{apply(e){return(0,r.tidy)(()=>r.tidy(()=>{const t=Math.sqrt(2),n=r.mul(.5,r.add(1,r.erf(r.div(e,t))));return r.mul(e,n)}))}}Mi.className="gelu",r.serialization.registerClass(Mi);class zi extends ki{apply(e){return(0,r.tidy)(()=>r.mul(.5,r.mul(e,r.add(1,r.tanh(r.mul(r.sqrt(r.div(2,Math.PI)),r.add(e,r.mul(.044715,r.pow(e,3)))))))))}}zi.className="gelu_new",r.serialization.registerClass(zi);class Li extends ki{apply(e){return(0,r.tidy)(()=>r.mul(e,r.tanh(r.softplus(e))))}}Li.className="mish",r.serialization.registerClass(Li);class Pi extends ki{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return(0,r.tidy)(()=>r.mul(r.sigmoid(r.mul(e,t)),e))}}function Bi(e){return e.getClassName()}function Wi(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return lr(e,r.serialization.SerializationMap.getMap().classNameMap,t,"activation")}function Vi(e){if(null==e){const e={className:"linear",config:{}};return Wi(e)}if("string"===typeof e){const t={};return t.className=e,t.config={},Wi(t)}return e instanceof ki?e:Wi(e)}function Ui(e){if(null!=e&&"object"!==typeof e)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an "+"object, but received: ".concat(e))}Pi.className="swish",r.serialization.registerClass(Pi);class Gi extends r.serialization.Serializable{}class Hi extends Gi{constructor(e){super(),Ui(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return(0,r.tidy)(()=>{let t=(0,r.zeros)([1]);return this.hasL1&&(t=(0,r.add)(t,(0,r.sum)(r.mul(this.l1,(0,r.abs)(e))))),this.hasL2&&(t=(0,r.add)(t,(0,r.sum)(r.mul(this.l2,ts(e))))),r.reshape(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Hi.className="L1L2",r.serialization.registerClass(Hi);const ji={l1l2:"L1L2"};function qi(e){return ir(e)}function Yi(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return lr(e,r.serialization.SerializationMap.getMap().classNameMap,t,"regularizer")}function Ki(e){if(null==e)return null;if("string"===typeof e){return Yi({className:e in ji?ji[e]:e,config:{}})}return e instanceof Gi?e:Yi(e)}class Xi extends Us{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=_s(e);let n=(0,r.relu)(e);return null!=this.maxValue&&(n=(0,r.clipByValue)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Xi.className="ReLU",r.serialization.registerClass(Xi);class Zi extends Us{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=_s(e);return(0,r.leakyRelu)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Zi.className="LeakyReLU",r.serialization.registerClass(Zi);class Qi extends Us{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Cs(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ki(e.alphaRegularizer),this.alphaConstraint=io(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new Xa("Expected sharedAxes to be a number or an array of numbers, "+"but got ".concat(e.sharedAxes));this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Rs(e)).slice(1);if(null!=this.sharedAxes)for(const a of this.sharedAxes)t[a-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let a=1;a<e.length;++a)n[a]=e[a];this.inputSpec=[new Ls({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=_s(e),(0,r.prelu)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Is(this.alphaInitializer),alphaRegularizer:qi(this.alphaRegularizer),alphaConstraint:so(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Qi.className="PReLU",r.serialization.registerClass(Qi);class $i extends Us{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Za("Non-default alpha value (".concat(e.alpha,") is not supported by the ")+"ELU layer yet.");this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=_s(e);return(0,r.elu)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}$i.className="ELU",r.serialization.registerClass($i);class Ji extends Us{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=_s(e);return(0,r.mul)(n,(0,r.cast)((0,r.greater)(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Ji.className="ThresholdedReLU",r.serialization.registerClass(Ji);class ec extends Us{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Di).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return(0,r.tidy)(()=>{let n=_s(e);const a=t.mask;if(null!=a){const e=(0,r.mul)((0,r.sub)((0,r.ones)(n.shape),(0,r.cast)(a,n.dtype)),(0,r.scalar)(-1e9));n=(0,r.add)(n,e)}return this.axis instanceof Array?this.axis.length>1?(0,r.exp)((0,r.sub)(n,(0,r.logSumExp)(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function tc(e,t,n){if("number"===typeof e)return Ja(e,t);if(e.length!==t)throw new Xa("The ".concat(n," argument must be an integer or tuple of ").concat(t," integers.")+" Received: ".concat(e.length," elements."));for(let a=0;a<t;++a){const r=e[a];if(!Lr(r))throw new Xa("The ".concat(n," argument must be an integer or tuple of ").concat(t)+" integers. Received: ".concat(JSON.stringify(e)," including a")+" non-integer number ".concat(r))}return e}function nc(e,t,n,a){if(null==e)return e;let r;return r="same"===n?e:e-(t+(t-1)*((arguments.length>4&&void 0!==arguments[4]?arguments[4]:1)-1))+1,Math.floor((r+a-1)/a)}function ac(e,t,n,a){if(null==e)return null;if("valid"===a)e=e*t+Wr([n-t,0]);else{if("same"!==a)throw new Xa("Unsupport padding mode: ".concat(a,"."));e*=t}return e}function rc(e,t){return(0,r.tidy)(()=>(Er(t),"channelsFirst"===t?r.transpose(e,[0,2,3,1]):e))}function sc(e,t){return(0,r.tidy)(()=>(Er(t),"channelsFirst"===t?r.transpose(e,[0,2,3,4,1]):e))}function oc(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",o=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return(0,r.tidy)(()=>{if(null==o&&(o="channelsLast"),Er(o),3!==e.shape.length)throw new Xa("The input of a conv1dWithBias operation should be 3, but is "+"".concat(e.shape.length," instead."));if(3!==t.shape.length)throw new Xa("The kernel for a conv1dWithBias operation should be 3, but is "+"".concat(t.shape.length," instead"));if(null!=n&&1!==n.shape.length)throw new Xa("The bias for a conv1dWithBias operation should be 1, but is "+"".concat(n.shape.length," instead"));if("channelsFirst"===o&&(e=r.transpose(e,[0,2,1])),"causal"===s)throw new Za("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let c=r.conv1d(e,t,a,"same"===s?"same":"valid","NWC",i);return null!=n&&(c=as(c,n)),c})}function ic(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",o=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0,c=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return(0,r.tidy)(()=>{if(null==o&&(o="channelsLast"),Er(o),3!==e.rank&&4!==e.rank)throw new Xa("conv2dWithBiasActivation expects input to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));if(3!==t.rank&&4!==t.rank)throw new Xa("conv2dWithBiasActivation expects kernel to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));let l=rc(e,o);if("causal"===s)throw new Za("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=r.fused.conv2d({x:l,filter:t,strides:a,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:c}),"channelsFirst"===o&&(l=r.transpose(l,[0,3,1,2])),l})}function cc(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",o=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0;return(0,r.tidy)(()=>{if(null==o&&(o="channelsLast"),Er(o),4!==e.rank&&5!==e.rank)throw new Xa("conv3dWithBias expects input to be of rank 4 or 5, but received "+"".concat(e.rank,"."));if(4!==t.rank&&5!==t.rank)throw new Xa("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+"".concat(e.rank,"."));let c=sc(e,o);if("causal"===s)throw new Za("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return c=r.conv3d(c,t,a,"same"===s?"same":"valid","NDHWC",i),null!=n&&(c=as(c,n)),"channelsFirst"===o&&(c=r.transpose(c,[0,4,1,2,3])),c})}ec.className="Softmax",r.serialization.registerClass(ec);class lc extends Us{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",lc.verifyArgs(t),this.rank=e,mr(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Za("Convolution layer for rank other than 1, 2, or 3 (".concat(this.rank,") is ")+"not implemented yet.");if(this.kernelSize=tc(t.kernelSize,e,"kernelSize"),this.strides=tc(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Ar(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Er(this.dataFormat),this.activation=Vi(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Cs(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=io(t.biasConstraint),this.biasRegularizer=Ki(t.biasRegularizer),this.activityRegularizer=Ki(t.activityRegularizer),this.dilationRate=tc(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Xa("dilationRate must be a number or an array of a single number for 1D convolution, but received "+"".concat(JSON.stringify(this.dilationRate)));if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Xa("dilationRate must be a number or array of two numbers for 2D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Xa("dilationRate must be a number or array of three numbers for 3D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}static verifyArgs(e){if(er("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!fr(e.kernelSize,"number",1,3))throw new Xa("BaseConv expects config.kernelSize to be number or number[] with "+"length 1, 2, or 3, but received ".concat(JSON.stringify(e.kernelSize),"."))}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Bi(this.activation),useBias:this.useBias,biasInitializer:Is(this.biasInitializer),biasRegularizer:qi(this.biasRegularizer),activityRegularizer:qi(this.activityRegularizer),biasConstraint:so(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class uc extends lc{constructor(e,t){super(e,t),this.kernel=null,uc.verifyArgs(t),this.filters=t.filters,mr(this.filters,"filters"),this.kernelInitializer=Cs(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=io(t.kernelConstraint),this.kernelRegularizer=Ki(t.kernelRegularizer)}build(e){e=Rs(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Xa("The channel dimension of the input should be defined. "+"Found ".concat(e[t]));const n=e[t],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return(0,r.tidy)(()=>{let t;e=_s(e);const n=null==this.bias?null:this.bias.read(),a=yr(this.activation.getClassName());if(null!=a&&2===this.rank)t=ic(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)t=oc(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=ic(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Za("convolutions greater than 3D are not implemented yet.");t=cc(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t})}computeOutputShape(e){e=Rs(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){const e=nc(n[r],this.kernelSize[r],this.padding,this.strides[r],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[r]);t.push(e)}let a=[e[0]];return"channelsLast"===this.dataFormat?(a=a.concat(t),a.push(this.filters)):(a.push(this.filters),a=a.concat(t)),a}getConfig(){const e={filters:this.filters,kernelInitializer:Is(this.kernelInitializer),kernelRegularizer:qi(this.kernelRegularizer),kernelConstraint:so(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new Xa("Convolution layer expected config.filters to be a 'number' > 0 "+"but got ".concat(JSON.stringify(e.filters)))}}class dc extends uc{constructor(e){super(2,e),dc.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!fr(e.kernelSize,"number",1,2))throw new Xa("Conv2D expects config.kernelSize to be number or number[] with "+"length 1 or 2, but received ".concat(JSON.stringify(e.kernelSize),"."))}}dc.className="Conv2D",r.serialization.registerClass(dc);class hc extends uc{constructor(e){super(3,e),hc.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Xa("Conv3D expects config.kernelSize to be number or"+" [number, number, number], but received ".concat(JSON.stringify(e.kernelSize),"."))}}hc.className="Conv3D",r.serialization.registerClass(hc);class pc extends dc{constructor(e){if(super(e),this.inputSpec=[new Ls({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Xa("Conv2DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(4!==(e=Rs(e)).length)throw new Xa("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Xa("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ls({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return r.tidy(()=>{let t=_s(e);if(4!==t.shape.length)throw new Xa("Conv2DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,a=n[0];let s,o;"channelsFirst"===this.dataFormat?(s=2,o=3):(s=1,o=2);const i=n[s],c=n[o],l=this.kernelSize[0],u=this.kernelSize[1],d=this.strides[0],h=this.strides[1],p=[a,ac(i,d,l,this.padding),ac(c,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=r.transpose(t,[0,2,3,1]));let f=r.conv2dTranspose(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(f=r.transpose(f,[0,3,1,2])),null!=this.bias&&(f=as(f,this.bias.read(),this.dataFormat)),null!=this.activation&&(f=this.activation.apply(f)),f})}computeOutputShape(e){const t=(e=Rs(e)).slice();let n,a,r;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3):(n=3,a=1,r=2);const s=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],c=this.strides[1];return t[n]=this.filters,t[a]=ac(t[a],i,s,this.padding),t[r]=ac(t[r],c,o,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}pc.className="Conv2DTranspose",r.serialization.registerClass(pc);class fc extends hc{constructor(e){if(super(e),this.inputSpec=[new Ls({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Xa("Conv3DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(5!==(e=Rs(e)).length)throw new Xa("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Xa("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ls({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return r.tidy(()=>{let t=_s(e);if(5!==t.shape.length)throw new Xa("Conv3DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,a=n[0];let s,o,i;"channelsFirst"===this.dataFormat?(i=2,s=3,o=4):(i=1,s=2,o=3);const c=n[i],l=n[s],u=n[o],d=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],y=[a,ac(c,f,d,this.padding),ac(l,m,h,this.padding),ac(u,g,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=r.transpose(t,[0,2,3,4,1]));let b=r.conv3dTranspose(t,this.kernel.read(),y,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=r.transpose(b,[0,4,1,2,3])),null!==this.bias&&(b=as(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b})}computeOutputShape(e){const t=(e=Rs(e)).slice();let n,a,r,s;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3,s=4):(n=4,a=1,r=2,s=3);const o=this.kernelSize[0],i=this.kernelSize[1],c=this.kernelSize[2],l=this.strides[0],u=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[a]=ac(t[a],l,o,this.padding),t[r]=ac(t[r],u,i,this.padding),t[s]=ac(t[s],d,c,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}fc.className="Conv3DTranspose",r.serialization.registerClass(fc);class mc extends uc{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Xa("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Xa("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Xa("SeparableConv".concat(this.rank,"D supports only padding modes: ")+"'same' and 'valid', but received ".concat(JSON.stringify(t.padding)));this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Cs(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ki(t.depthwiseRegularizer),this.depthwiseConstraint=io(t.depthwiseConstraint),this.pointwiseInitializer=Cs(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ki(t.pointwiseRegularizer),this.pointwiseConstraint=io(t.pointwiseConstraint)}build(e){if((e=Rs(e)).length<this.rank+2)throw new Xa("Inputs to SeparableConv".concat(this.rank,"D should have rank ")+"".concat(this.rank+2,", but received input shape: ")+"".concat(JSON.stringify(e)));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Xa("The channel dimension of the inputs should be defined, "+"but found ".concat(JSON.stringify(e[t])));const n=e[t],a=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Ls({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return(0,r.tidy)(()=>{let t;if(e=_s(e),1===this.rank)throw new Za("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=r.transpose(e,[0,2,3,1])),t=r.separableConv2d(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=as(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=r.transpose(t,[0,3,1,2])),t})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Is(this.depthwiseInitializer),e.pointwiseInitializer=Is(this.pointwiseInitializer),e.depthwiseRegularizer=qi(this.depthwiseRegularizer),e.pointwiseRegularizer=qi(this.pointwiseRegularizer),e.depthwiseConstraint=so(this.depthwiseConstraint),e.pointwiseConstraint=so(this.pointwiseConstraint),e}}mc.className="SeparableConv";class gc extends mc{constructor(e){super(2,e)}}gc.className="SeparableConv2D",r.serialization.registerClass(gc);class yc extends uc{constructor(e){super(1,e),yc.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!fr(e.kernelSize,"number",1,1))throw new Xa("Conv1D expects config.kernelSize to be number or number[] with "+"length 1, but received ".concat(JSON.stringify(e.kernelSize),"."))}}yc.className="Conv1D",r.serialization.registerClass(yc);class bc extends Us{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return(0,r.tidy)(()=>{if(e=_s(e),"channelsLast"===this.dataFormat){const t=Kr(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Kr(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Kr(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Kr(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}bc.className="Cropping2D",r.serialization.registerClass(bc);class vc extends Us{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Er(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,pr(Sr,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return r.tidy(()=>{let t=_s(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=r.transpose(t,[0,2,3,1]);const e=this.size[0]*n[2],a=this.size[1]*n[3],s="nearest"===this.interpolation?r.image.resizeNearestNeighbor(t,[e,a]):r.image.resizeBilinear(t,[e,a]);return r.transpose(s,[0,3,1,2])}{const e=this.size[0]*n[1],a=this.size[1]*n[2];return"nearest"===this.interpolation?r.image.resizeNearestNeighbor(t,[e,a]):r.image.resizeBilinear(t,[e,a])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}vc.className="UpSampling2D",r.serialization.registerClass(vc);class xc extends lc{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Cs(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=io(e.depthwiseConstraint),this.depthwiseRegularizer=Ki(e.depthwiseRegularizer)}build(e){if((e=Rs(e)).length<4)throw new Xa("Inputs to DepthwiseConv2D should have rank 4. "+"Received input shape: ".concat(JSON.stringify(e),"."));const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Xa("The channel dimension of the inputs to DepthwiseConv2D should "+"be defined, but is not (".concat(e[t],")."));const n=e[t],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,r.tidy)(()=>{let t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",s=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0;return(0,r.tidy)(()=>{null==s&&(s="channelsLast"),Er(s);let i=rc(e,s);if(4!==e.rank)throw new Xa("Input for depthwiseConv2d is required to be 4-D, but is instead "+"".concat(e.rank,"-D"));if(4!==t.rank)throw new Xa("depthwiseKernel is required to be 4-D, but is instead "+"".concat(t.rank,"-D"));return i=r.depthwiseConv2d(i,t,n,"same"===a?"same":"valid","NHWC",o),"channelsFirst"===s&&(i=r.transpose(i,[0,3,1,2])),i})}(e=_s(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=as(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t})}computeOutputShape(e){e=Rs(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=nc(t,this.kernelSize[0],this.padding,this.strides[0]),s=nc(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],a,r,s]:[e[0],r,s,a]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Is(this.depthwiseInitializer),e.depthwiseRegularizer=qi(this.depthwiseRegularizer),e.depthwiseConstraint=so(this.depthwiseRegularizer),e}}function wc(e,t,n,a){if(Array.isArray(e)){if(null!=t||null!=n)throw new Xa("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=e.slice(e.length-a,e.length),e=e.slice(0,e.length-a)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function kc(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return r.tidy(()=>{const l=t.shape.length;if(l<3)throw new Xa("Input should be at least 3D, but is ".concat(l,"D."));const u=[1,0].concat(Vr(2,l));if(t=r.transpose(t,u),null!=o)throw new Za("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&(s=r.cast(r.cast(s,"bool"),"float32"),s.rank===l-1&&(s=r.expandDims(s,-1)),s=r.transpose(s,u)),a&&(t=r.reverse(t,0),null!=s&&(s=r.reverse(s,0)));const d=[];let h,p=n;const f=t.shape[0],m=r.unstack(t);let g,y;null!=s&&(g=r.unstack(s));for(let t=0;t<f;++t){const n=m[t],a=r.tidy(()=>e(n,p));if(null==s)h=a[0],p=a[1];else{const e=r.tidy(()=>{const e=g[t],n=r.sub(r.onesLike(e),e);return{output:r.add(r.mul(a[0],e),r.mul(p[0],n)),newStates:p.map((t,s)=>r.add(r.mul(a[1][s],e),r.mul(t,n)))}});h=e.output,p=e.newStates}c&&d.push(h)}if(c){const e=1;y=r.stack(d,e)}return[h,y,p]})}xc.className="DepthwiseConv2D",r.serialization.registerClass(xc);class Sc extends Us{constructor(e){let t;if(super(e),null==e.cell)throw new Xa("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Rc({cells:e.cell}):e.cell,null==t.stateSize)throw new Xa("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Ls({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return Vr(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(e=>null)}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Es(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let a;if(a=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const a of t)n.push([e[0],a]);return[a].concat(n)}return a}computeMask(e,t){return r.tidy(()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map(e=>null);return[e].concat(t)}return e})}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Za("Constants support is not implemented in RNN yet.");Es(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Ls({shape:[t,null,...n]});const a=[e[0]].concat(e.slice(2));let s;if(this.cell.build(a),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!r.util.arraysEqual(this.stateSpec.map(e=>e.shape[e.shape.length-1]),s))throw new Xa("An initialState was passed that is not compatible with "+"cell.stateSize. Received stateSpec=".concat(this.stateSpec,"; ")+"However cell.stateSize is ".concat(this.cell.stateSize))}else this.stateSpec=s.map(e=>new Ls({shape:[null,e]}));this.stateful&&this.resetStates()}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];(0,r.tidy)(()=>{if(!this.stateful)throw new Ya("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Xa("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>r.zeros([n,e])):this.states_=[r.zeros([n,this.cell.stateSize])];else if(null==e)r.dispose(this.states_),null!=this.keptStates&&(r.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>r.zeros([n,e])):this.states_[0]=r.zeros([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Xa("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));!0===t?this.keptStates.push(this.states_.slice()):r.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const a=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,o=[n,s];if(!r.util.arraysEqual(a.shape,o))throw new Xa("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(o,", received shape=").concat(a.shape));this.states_[t]=a}}this.states_=this.states_.map(e=>r.keep(e.clone()))})}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=wc(e,n,a,this.numConstants);e=r.inputs,n=r.initialState,a=r.constants;let s=[],o=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Ls({shape:e.shape}));o=o.concat(this.stateSpec)}null!=a&&(t.constants=a,s=s.concat(a),this.numConstants=a.length);if(s[0]instanceof Ps){const n=[e].concat(s),a=this.inputSpec.concat(o),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,t);return this.inputSpec=r,i}return super.apply(e,t)}call(e,t){return(0,r.tidy)(()=>{const n=null==t?null:t.mask,a=null==t?null:t.training;let r=null==t?null:t.initialState;e=_s(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==s)throw new Xa("RNN Layer has ".concat(s," state(s) but was passed ")+"".concat(r.length," initial state(s)."));this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:a},i=kc((e,t)=>{const n=this.cell.call([e].concat(t),o);return[n[0],n.slice(1)]},e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),c=i[0],l=i[1],u=i[2];this.stateful&&this.resetStates(u,a);const d=this.returnSequences?l:c;return this.returnState?[d].concat(u):d})}getInitialState(e){return(0,r.tidy)(()=>{let t=r.zeros(e.shape);return t=r.sum(t,[1,2]),t=jr(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>e>1?Qr(t,[1,e]):t):this.cell.stateSize>1?[Qr(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Sc.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=xo(t.cell,n);return new e(Object.assign(t,{cell:a}))}}Sc.className="RNN",r.serialization.registerClass(Sc);class Tc extends Us{}class Nc extends Tc{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,mr(this.units,"units"),this.activation=Vi(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Cs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Cs(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Cs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ki(e.kernelRegularizer),this.recurrentRegularizer=Ki(e.recurrentRegularizer),this.biasRegularizer=Ki(e.biasRegularizer),this.kernelConstraint=io(e.kernelConstraint),this.recurrentConstraint=io(e.recurrentConstraint),this.biasConstraint=io(e.biasConstraint),this.dropout=Br([1,Wr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Br([1,Wr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Rs(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,r.tidy)(()=>{if(2!==e.length)throw new Xa("SimpleRNNCell expects 2 input Tensors, got ".concat(e.length,"."));let n=e[1];e=e[0];const a=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Fc({ones:()=>r.onesLike(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Fc({ones:()=>r.onesLike(n),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=this.recurrentDropoutMask;s=Jr(null!=o?r.mul(e,o):e,this.kernel.read()),null!=this.bias&&(s=as(s,this.bias.read())),null!=i&&(n=r.mul(n,i));let c=r.add(s,Jr(n,this.recurrentKernel.read()));return null!=this.activation&&(c=this.activation.apply(c)),[c,c]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Bi(this.activation),useBias:this.useBias,kernelInitializer:Is(this.kernelInitializer),recurrentInitializer:Is(this.recurrentInitializer),biasInitializer:Is(this.biasInitializer),kernelRegularizer:qi(this.kernelRegularizer),recurrentRegularizer:qi(this.recurrentRegularizer),biasRegularizer:qi(this.biasRegularizer),activityRegularizer:qi(this.activityRegularizer),kernelConstraint:so(this.kernelConstraint),recurrentConstraint:so(this.recurrentConstraint),biasConstraint:so(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Nc.className="SimpleRNNCell",r.serialization.registerClass(Nc);class Ic extends Sc{constructor(e){e.cell=new Nc(e),super(e)}call(e,t){return(0,r.tidy)(()=>{null!=this.cell.dropoutMask&&(r.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(r.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:s})})}static fromConfig(e,t){return new e(t)}}Ic.className="SimpleRNN",r.serialization.registerClass(Ic);class Cc extends Tc{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Xa("GRUCell does not support reset_after parameter set to true.");this.units=e.units,mr(this.units,"units"),this.activation=Vi(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Vi(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Cs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Cs(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Cs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ki(e.kernelRegularizer),this.recurrentRegularizer=Ki(e.recurrentRegularizer),this.biasRegularizer=Ki(e.biasRegularizer),this.kernelConstraint=io(e.kernelConstraint),this.recurrentConstraint=io(e.recurrentConstraint),this.biasConstraint=io(e.biasConstraint),this.dropout=Br([1,Wr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Br([1,Wr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Rs(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,r.tidy)(()=>{if(2!==e.length)throw new Xa("GRUCell expects 2 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=null!=t.training&&t.training;let a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Fc({ones:()=>r.onesLike(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Fc({ones:()=>r.onesLike(a),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,o=this.recurrentDropoutMask;let i,c,l;0<this.dropout&&this.dropout<1&&(e=r.mul(e,s[0]));let u=Jr(e,this.kernel.read());this.useBias&&(u=as(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=r.mul(a,o[0]));const d=this.recurrentKernel.read(),[h,p]=r.split(d,[2*this.units,this.units],d.rank-1),f=Jr(a,h),[m,g,y]=r.split(u,3,u.rank-1),[b,v]=r.split(f,2,f.rank-1);i=this.recurrentActivation.apply(r.add(m,b)),c=this.recurrentActivation.apply(r.add(g,v));const x=Jr(r.mul(c,a),p);l=this.activation.apply(r.add(y,x));const w=r.add(r.mul(i,a),r.mul(r.add(1,r.neg(i)),l));return[w,w]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Bi(this.activation),recurrentActivation:Bi(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Is(this.kernelInitializer),recurrentInitializer:Is(this.recurrentInitializer),biasInitializer:Is(this.biasInitializer),kernelRegularizer:qi(this.kernelRegularizer),recurrentRegularizer:qi(this.recurrentRegularizer),biasRegularizer:qi(this.biasRegularizer),activityRegularizer:qi(this.activityRegularizer),kernelConstraint:so(this.kernelConstraint),recurrentConstraint:so(this.recurrentConstraint),biasConstraint:so(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}Cc.className="GRUCell",r.serialization.registerClass(Cc);class Ec extends Sc{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Cc(e),super(e)}call(e,t){return(0,r.tidy)(()=>{null!=this.cell.dropoutMask&&(r.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(r.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:s})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Ec.className="GRU",r.serialization.registerClass(Ec);class Ac extends Tc{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,mr(this.units,"units"),this.activation=Vi(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Vi(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Cs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Cs(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Cs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Ki(e.kernelRegularizer),this.recurrentRegularizer=Ki(e.recurrentRegularizer),this.biasRegularizer=Ki(e.biasRegularizer),this.kernelConstraint=io(e.kernelConstraint),this.recurrentConstraint=io(e.recurrentConstraint),this.biasConstraint=io(e.biasConstraint),this.dropout=Br([1,Wr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Br([1,Wr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Rs(e))[e.length-1];let a;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;a=new((t=class extends cs{apply(t,a){const r=e.apply([n]),s=(new us).apply([n]),o=e.apply([2*n]);return Zr(Zr(r,s),o)}}).className="CustomInit",t)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return(0,r.tidy)(()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new Xa("LSTMCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));let a=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Fc({ones:()=>r.onesLike(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Fc({ones:()=>r.onesLike(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=this.recurrentDropoutMask;let c,l,u,d;0<this.dropout&&this.dropout<1&&(e=r.mul(e,o[0]));let h=Jr(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=r.mul(a,i[0])),h=r.add(h,Jr(a,this.recurrentKernel.read())),this.useBias&&(h=as(h,this.bias.read()));const[p,f,m,g]=r.split(h,4,h.rank-1);c=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(f),u=r.add(r.mul(l,s),r.mul(c,this.activation.apply(m))),d=this.recurrentActivation.apply(g);const y=r.mul(d,this.activation.apply(u));return[y,y,u]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Bi(this.activation),recurrentActivation:Bi(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Is(this.kernelInitializer),recurrentInitializer:Is(this.recurrentInitializer),biasInitializer:Is(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:qi(this.kernelRegularizer),recurrentRegularizer:qi(this.recurrentRegularizer),biasRegularizer:qi(this.biasRegularizer),activityRegularizer:qi(this.activityRegularizer),kernelConstraint:so(this.kernelConstraint),recurrentConstraint:so(this.recurrentConstraint),biasConstraint:so(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Ac.className="LSTMCell",r.serialization.registerClass(Ac);class _c extends Sc{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Ac(e),super(e)}call(e,t){return(0,r.tidy)(()=>{null!=this.cell.dropoutMask&&(r.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(r.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:s})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}_c.className="LSTM",r.serialization.registerClass(_c);class Rc extends Tc{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return(0,r.tidy)(()=>{let n=e.slice(1);const a=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?a.push(n.splice(0,e.stateSize.length)):a.push(n.splice(0,1));a.reverse();const r=[];let s;for(let o=0;o<this.cells.length;++o){const i=this.cells[o];n=a[o],s=0===o?[e[0]].concat(n):[s[0]].concat(n),s=i.call(s,t),r.push(s.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[s[0]].concat(n)})}build(e){let t;Es(e)&&(e=e[0]),this.cells.forEach((n,a)=>{Fr("RNNCell_".concat(a),()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map(e=>({className:e.getClassName(),config:e.getConfig()}))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=[];for(const r of t.cells)a.push(xo(r,n));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Ms(e)}setWeights(e){const t=[];for(const n of this.cells){const a=n.weights.length,r=e.splice(a);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}zs(t)}}function Fc(e){const{ones:t,rate:n,training:a=!1,count:s=1,dropoutFunc:o}=e,i=()=>null!=o?o(t(),n):rs(t(),n),c=()=>ss(i,t,a);if(!s||s<=1)return r.keep(c().clone());return Array(s).fill(void 0).map(c).map(e=>r.keep(e.clone()))}Rc.className="StackedRNNCells",r.serialization.registerClass(Rc);var Dc=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]])}return n};class Oc extends Sc{constructor(e){if(e.unroll)throw new Za("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Za("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Ls({ndim:5})]}call(e,t){return r.tidy(()=>{if(null!=this.cell.dropoutMask&&(r.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(r.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Xa("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,a=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:s})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return r.tidy(()=>{const{stateSize:t}=this.cell,n=e.shape,a=this.computeSingleOutputShape(n),s=[a[0],...a.slice(2)],o=r.zeros(s);return Array.isArray(t)?Array(t.length).fill(o):[o]})}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];r.tidy(()=>{if(!this.stateful)throw new Ya("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),s=[a[0],...a.slice(2)];if(null==n[0])throw new Xa("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>r.zeros(s)):this.states_=[r.zeros(s)];else if(null==e)r.dispose(this.states_),null!=this.keptStates&&(r.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>r.zeros(s)):this.states_[0]=r.zeros(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Xa("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));t?this.keptStates.push(this.states_.slice()):r.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],a=s;if(!r.util.arraysEqual(n.shape,a))throw new Xa("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(a,", received shape=").concat(n.shape));this.states_[t]=n}}this.states_=this.states_.map(e=>r.keep(e.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:a,padding:r,strides:s,dilationRate:o}=this.cell,i="channelsFirst"===t,c=e[i?3:2],l=e[i?4:3],u=nc(c,a[0],r,s[0],o[0]),d=nc(l,a[1],r,s[1],o[1]);return[...e.slice(0,2),...i?[n,u,d]:[u,d,n]]}}Oc.className="ConvRNN2D";class Mc extends Ac{constructor(e){const{filters:t,kernelSize:n,strides:a,padding:r,dataFormat:s,dilationRate:o}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,mr(this.filters,"filters"),this.kernelSize=tc(n,2,"kernelSize"),this.kernelSize.forEach(e=>mr(e,"kernelSize")),this.strides=tc(a||1,2,"strides"),this.strides.forEach(e=>mr(e,"strides")),this.padding=r||"valid",Ar(this.padding),this.dataFormat=s||"channelsLast",Er(this.dataFormat),this.dilationRate=tc(o||1,2,"dilationRate"),this.dilationRate.forEach(e=>mr(e,"dilationRate"))}build(e){var t;e=Rs(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Xa("The channel dimension of the input should be defined. "+"Found ".concat(e[n]));const a=e[n],s=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const o=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,a=this.filters;e=new((t=class extends cs{apply(e,t){return Xr([n.apply([a]),r.ones([a]),n.apply([2*a])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return r.tidy(()=>{if(3!==e.length)throw new Xa("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=t.training||!1,a=e[0],s=e[1],o=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Fc({ones:()=>r.onesLike(a),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,c=(e,t,n)=>t&&t[n]?r.mul(t[n],e):e;let l=c(a,i,0),u=c(a,i,1),d=c(a,i,2),h=c(a,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Fc({ones:()=>r.onesLike(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let f=c(s,p,0),m=c(s,p,1),g=c(s,p,2),y=c(s,p,3);const[b,v,x,w]=r.split(this.kernel.read(),4,3),[k,S,T,N]=this.useBias?r.split(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,b,k,this.padding),u=this.inputConv(u,v,S,this.padding),d=this.inputConv(d,x,T,this.padding),h=this.inputConv(h,w,N,this.padding);const[I,C,E,A]=r.split(this.recurrentKernel.read(),4,3);f=this.recurrentConv(f,I),m=this.recurrentConv(m,C),g=this.recurrentConv(g,E),y=this.recurrentConv(y,A);const _=this.recurrentActivation.apply(r.add(l,f)),R=this.recurrentActivation.apply(r.add(u,m)),F=r.add(r.mul(R,o),r.mul(_,this.activation.apply(r.add(d,g)))),D=r.mul(this.recurrentActivation.apply(r.add(h,y)),this.activation.apply(F));return[D,D,F]})}getConfig(){const e=super.getConfig(),{units:t}=e,n=Dc(e,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),a)}inputConv(e,t,n,a){const s=r.conv2d(e,t,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?as(s,n,this.dataFormat):s}recurrentConv(e,t){return r.conv2d(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Mc.className="ConvLSTM2DCell",r.serialization.registerClass(Mc);class zc extends Oc{constructor(e){const t=new Mc(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}zc.className="ConvLSTM2D",r.serialization.registerClass(zc);class Lc extends Us{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let a=0;a<this.noiseShape.length;++a)n.push(null==this.noiseShape[a]?t[a]:this.noiseShape[a]);return n}call(e,t){return(0,r.tidy)(()=>{this.invokeCallHook(e,t);const n=_s(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,a=this.getNoiseShape(n);return ss(()=>rs(n,this.rate,a,this.seed),()=>n,e)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Lc.className="Dropout",r.serialization.registerClass(Lc);class Pc extends Lc{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Pc.className="SpatialDropout1D",r.serialization.registerClass(Pc);class Bc extends Us{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,mr(this.units,"units"),this.activation=Vi(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Cs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Cs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=io(e.kernelConstraint),this.biasConstraint=io(e.biasConstraint),this.kernelRegularizer=Ki(e.kernelRegularizer),this.biasRegularizer=Ki(e.biasRegularizer),this.activityRegularizer=Ki(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Rs(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Rs(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return(0,r.tidy)(()=>{this.invokeCallHook(e,t);const n=_s(e),a=yr(this.activation.getClassName());let r;return null!=a?r=Jr(n,this.kernel.read(),a,this.bias?this.bias.read():null):(r=Jr(n,this.kernel.read()),null!=this.bias&&(r=as(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r})}getConfig(){const e={units:this.units,activation:Bi(this.activation),useBias:this.useBias,kernelInitializer:Is(this.kernelInitializer),biasInitializer:Is(this.biasInitializer),kernelRegularizer:qi(this.kernelRegularizer),biasRegularizer:qi(this.biasRegularizer),activityRegularizer:qi(this.activityRegularizer),kernelConstraint:so(this.kernelConstraint),biasConstraint:so(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Bc.className="Dense",r.serialization.registerClass(Bc);class Wc extends Us{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Rs(e);for(const t of e.slice(1))if(null==t)throw new Xa('The shape of the input to "Flatten" is not fully defined '+"(got ".concat(e.slice(1),"). Make sure to pass a complete ")+'"input_shape" or "batch_input_shape" argument to the first layer in your model.');return[e[0],Pr(e,1)]}call(e,t){return(0,r.tidy)(()=>{this.invokeCallHook(e,t);let n=_s(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=(0,r.transpose)(n,e)}return function(e){if(e.rank<=1)throw new Xa("batchFlatten requires a minimum rank of 2. Got rank: ".concat(e.rank,"."));const t=[e.shape[0],Pr(e.shape,1)];return r.reshape(e,t)}(n)})}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Wc.className="Flatten",r.serialization.registerClass(Wc);class Vc extends Us{constructor(e){super(e),this.supportsMasking=!0,this.activation=Vi(e.activation)}call(e,t){return(0,r.tidy)(()=>{this.invokeCallHook(e,t);const n=_s(e);return this.activation.apply(n)})}getConfig(){const e={activation:Bi(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Vc.className="Activation",r.serialization.registerClass(Vc);class Uc extends Us{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return(0,r.tidy)(()=>{return e=_s(e),t=e,n=this.n,(0,r.tidy)(()=>{if(2!==t.shape.length)throw new Xa("repeat() expects a rank-2 tensor, but received a "+"rank-".concat(t.shape.length," tensor."));return Qr(jr(t,1),[1,n,1])});var t,n})}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Uc.className="RepeatVector",r.serialization.registerClass(Uc);class Gc extends Us{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",a=t.slice();let r=1,s=null;for(let i=0;i<a.length;++i){const e=a[i];if(this.isUnknown(e)){if(null!==s)throw new Xa("Can only specifiy one unknown dimension.");s=i}else r*=e}const o=Pr(e);if(null!==s){if(0===r||o%r!==0)throw new Xa(n);a[s]=o/r}else if(o!==r)throw new Xa(n);return a}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return(0,r.tidy)(()=>{this.invokeCallHook(e,t);const n=_s(e),a=n.shape,s=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return(0,r.reshape)(n,s)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Gc.className="Reshape",r.serialization.registerClass(Gc);class Hc extends Us{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+"".concat(e.dims," instead."));const t=Vr(1,e.dims.length+1);if(!r.util.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Ls({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Rs(e)).slice();return this.dims.forEach((n,a)=>{t[a+1]=e[n]}),t}call(e,t){return(0,r.transpose)(_s(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Hc.className="Permute",r.serialization.registerClass(Hc);class jc extends Us{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=_s(e);return(0,r.any)((0,r.notEqual)(n,this.maskValue),-1)}call(e,t){return(0,r.tidy)(()=>{this.invokeCallHook(e,t);const n=_s(e),a=(0,r.any)((0,r.notEqual)(n,this.maskValue),-1,!0);return(0,r.mul)(n,(0,r.cast)(a,n.dtype))})}}jc.className="Masking",r.serialization.registerClass(jc);class qc extends Us{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(ar(e.inputLength))}this.inputDim=e.inputDim,mr(this.inputDim,"inputDim"),this.outputDim=e.outputDim,mr(this.outputDim,"outputDim"),this.embeddingsInitializer=Cs(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ki(e.embeddingsRegularizer),this.activityRegularizer=Ki(e.activityRegularizer),this.embeddingsConstraint=io(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return(0,r.tidy)(()=>this.maskZero?(e=_s(e),(0,r.notEqual)(e,(0,r.zerosLike)(e))):null)}computeOutputShape(e){if(e=Rs(e),null==this.inputLength)return[...e,this.outputDim];const t=ar(this.inputLength);if(t.length!==e.length-1)throw new Xa('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));{let n=0;for(let a=0;a<t.length;++a){const r=t[a],s=e[a+1];if(null!=r&&null!=s&&r!==s)throw new Xa('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));null==r&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return(0,r.tidy)(()=>{this.invokeCallHook(e,t);let n=_s(e);"int32"!==n.dtype&&(n=Hr(n,"int32"));const a=es(this.embeddings.read(),(0,r.reshape)(n,[n.size]));return(0,r.reshape)(a,Rs(this.computeOutputShape(n.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Is(this.embeddingsInitializer),embeddingsRegularizer:qi(this.embeddingsRegularizer),activityRegularizer:qi(this.activityRegularizer),embeddingsConstraint:so(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}qc.className="Embedding",r.serialization.registerClass(qc);class Yc extends Us{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Za}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let a=0;a<t.length;++a){const r=e[e.length-t.length+a],s=t[a];if(null==r||null==s||r<0||s<0)n.push(null);else if(1===r)n.push(s);else if(1===s)n.push(r);else{if(r!==s)throw new Xa("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Rs(e)]),e.length<2)throw new Xa("A merge layer should be called on an Array of at least 2 inputs."+" Got ".concat(e.length," input(s)."));let t=[];for(const r of e)null!=r&&null!==r[0]&&t.push(r[0]);if(t=dr(t),t.length>1)throw new Xa("Can not merge tensors with different batch sizes. "+"Got tensors with shapes: ".concat(JSON.stringify(e),"."));let n=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const t=null==e[r]?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const a=e.map(e=>e.length);-1===e.indexOf(null)&&1===dr(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return(0,r.tidy)(()=>{if(this.reshapeRequired){const t=[],n=e.map(e=>e.rank);if(-1===n.indexOf(null)){const a=Wr(n);for(let n of e){const e=n.rank;for(let t=0;t<a-e;++t)n=jr(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const o of e){const e=o.rank;if(null==e){const e=o.shape,a=e[0],s=e.slice(1).concat([a]);let i=r.reshape(o,[a].concat(Pr(e.slice(1))));i=r.transpose(i,[1,0]),i=r.reshape(i,s),t.push(i),n=!0}else if(e>1){const a=Vr(1,e).concat([0]);t.push(r.transpose(o,a)),n=!0}else t.push(o)}let a=this.mergeFunction(t);const s=a.rank;if(n)if(null==s){const e=a.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));a=r.reshape(r.transpose(r.reshape(a,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(Vr(0,s-1));a=r.transpose(a,e)}return a}}return this.mergeFunction(e)})}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){const n=null==e[a]?null:e[a].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const a of e)null!=a&&null!==a[0]&&n.push(a[0]);return n=dr(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return r.tidy(()=>{if(null==t)return null;if(!Array.isArray(t))throw new Xa("`mask` should be an Array");if(!Array.isArray(e))throw new Xa("`inputs` should be an Array");if(t.length!==e.length)throw new Xa("The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths "+"(".concat(e.length," vs ").concat(t.length,")"));if(t.every(e=>null==e))return null;let n=(t=t.map(e=>null==e?e:r.expandDims(e,0)))[0];for(let e=1;e<t.length-1;++e)n=r.logicalAnd(n,t[e]);return n})}}class Kc extends Yc{constructor(e){super(e)}mergeFunction(e){return(0,r.tidy)(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=r.add(t,e[n]);return t})}}Kc.className="Add",r.serialization.registerClass(Kc);class Xc extends Yc{constructor(e){super(e)}mergeFunction(e){return(0,r.tidy)(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=r.mul(t,e[n]);return t})}}Xc.className="Multiply",r.serialization.registerClass(Xc);class Zc extends Yc{constructor(e){super(e)}mergeFunction(e){return(0,r.tidy)(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=r.add(t,e[n]);return r.mul(1/e.length,t)})}}Zc.className="Average",r.serialization.registerClass(Zc);class Qc extends Yc{constructor(e){super(e)}mergeFunction(e){return(0,r.tidy)(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=r.maximum(t,e[n]);return t})}}Qc.className="Maximum",r.serialization.registerClass(Qc);class $c extends Yc{constructor(e){super(e)}mergeFunction(e){return(0,r.tidy)(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=r.minimum(t,e[n]);return t})}}$c.className="Minimum",r.serialization.registerClass($c);class Jc extends Yc{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Xa("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const a of e)if(null!=a){t=!1;break}if(t)return;const n=[];for(let a=0;a<e.length;++a){const t=e[a].slice();t.splice(this.axis,1);let s=!1;for(const e of n)if(r.util.arraysEqual(e,t)){s=!0;break}s||n.push(t)}if(n.length>1)throw new Xa("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return(0,r.tidy)(()=>Xr(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Xa("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(const r of t.slice(1)){if(null==n[a]||null==r[a]){n[a]=null;break}n[a]+=r[a]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Xa("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Xa("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Xa("Mismatch in the length of mask (".concat(t.length,") ")+"and the legnth of inputs (".concat(e.length,")"));return r.tidy(()=>{let n=!0;if(t.forEach(e=>{null==e||(n=!1)}),n)return null;const a=[];for(let o=0;o<e.length;++o)null==t[o]?a.push(r.cast(r.onesLike(e[o]),"bool")):t[o].rank<e[o].rank?a.push(r.expandDims(t[o],-1)):a.push(t[o]);const s=r.concat(a,this.axis);return r.all(s,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function el(e,t){for(;e<0;)e+=t;return e}Jc.className="Concatenate",r.serialization.registerClass(Jc);class tl extends Yc{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){r.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Za("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);if(t[a[0]]!==n[a[1]])throw new Xa("Dimension incompatibility: "+"".concat(t[a[0]]," !== ").concat(n[a[1]]))}mergeFunction(e){if(2!==e.length)throw new Xa("A `Dot` layer must be called on exactly 2 inputs, "+"but received ".concat(e.length," input(s)."));let t,n=e[0],a=e[1];return t=Array.isArray(this.axes)?this.axes.map((t,n)=>el(t,e[n].shape.length)):[el(this.axes,n.shape.length),el(this.axes,a.shape.length)],this.normalize&&(n=wo(n,t[0]),a=wo(a,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Za("batchDot is not implemented for tensors of 4D or higher rank yet");if(r.util.assert(e.shape.length>=2,()=>"batchDot requires the rank of x to be >= 2, "+"but got ".concat(e.shape.length)),r.util.assert(e.shape.length>=2,()=>"batchDot requires the rank of y to be >= 2, "+"but got ".concat(t.shape.length)),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Za("batchDot is not implemented for complex64-type Tensors yet.");const a=e.shape.length,s=t.shape.length;null==n&&(n=[a-1,s-2]);const o=n;return r.tidy(()=>{let n,i;if(a>s){n=a-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=r.reshape(t,t.shape.concat(e))}else if(s>a){n=s-a;const t=[];for(let e=0;e<n;++e)t.push(1);e=r.reshape(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=o[0]===o[1]?r.sum(r.mul(e,t),o[0]):r.sum(r.mul(r.transpose(e,[1,0]),t),o[1]);else{const n=o[0]!==e.shape.length-1,a=o[1]===t.shape.length-1;i=r.matMul(e,t,n,a)}if(n>0){let e;e=a>s?a+s-3:a-1;const t=[];for(let a=e;a<e+n;++a)t.push(a);i=r.squeeze(i,t)}return 1===i.shape.length&&(i=r.expandDims(i,1)),i})}(n,a,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[el(this.axes,e.length),el(this.axes,t.length)],n}computeOutputShape(e){r.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Za("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);t.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}tl.className="Dot",r.serialization.registerClass(tl);class nl extends Us{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return(0,r.tidy)(()=>{this.invokeCallHook(e,t);const n=_s(e);return ss(()=>(0,r.add)($r(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}}nl.className="GaussianNoise",r.serialization.registerClass(nl);class al extends Us{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,r.tidy)(()=>{this.invokeCallHook(e,t);const n=_s(e);if(this.rate>0&&this.rate<1){return ss(()=>{const e=Math.sqrt(this.rate/(1-this.rate));return(0,r.mul)(n,$r(n.shape,1,e))},()=>n,t.training||!1)}return n})}}al.className="GaussianDropout",r.serialization.registerClass(al);class rl extends Us{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||_s(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,r.tidy)(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),a=()=>{const t=_s(e),a=-1.7580993408473766;let s=(0,r.greaterEqual)((0,r.randomUniform)(n),this.rate);s=Hr(s,"float32");const o=((1-this.rate)*(1+this.rate*a**2))**-.5,i=-o*a*this.rate,c=(0,r.add)((0,r.mul)(t,s),(0,r.mul)((0,r.add)(s,-1),a));return(0,r.add)((0,r.mul)(c,o),i)};return ss(a,()=>_s(e),t.training||!1)}return e})}}function sl(e,t,n,a,s){let o,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===e.rank)o=r.batchNorm2d(e,t,n,a,s,i);else if(3===e.rank)o=r.batchNorm3d(e,t,n,a,s,i);else{if(4!==e.rank)throw new Za("batchNormalization is not implemented for array of rank ".concat(e.rank," ")+"yet");o=r.batchNorm4d(e,t,n,a,s,i)}return o}function ol(e,t,n,a){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return r.util.arraysEqual(a.slice().sort(),Vr(0,e.rank-1))?function(e,t,n,a){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return(0,r.tidy)(()=>{const o=r.moments(e,a),i=o.mean,c=o.variance;return[sl(e,i,c,n,t,s),i,c]})}(e,t,n,a,s):function(e,t,n,a){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return(0,r.tidy)(()=>{const o=r.moments(e,a),i=o.mean,c=o.variance,l=[];for(const t of Vr(0,e.rank))-1!==a.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=(0,r.reshape)(i,l),d=(0,r.reshape)(c,l),h=null==t?null:(0,r.reshape)(t,l),p=null==n?null:(0,r.reshape)(n,l);return[sl(e,u,d,p,h,s),i,c]})}(e,t,n,a,s)}rl.className="AlphaDropout",r.serialization.registerClass(rl);class il extends Us{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Cs(e.betaInitializer||"zeros"),this.gammaInitializer=Cs(e.gammaInitializer||"ones"),this.movingMeanInitializer=Cs(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Cs(e.movingVarianceInitializer||"ones"),this.betaConstraint=io(e.betaConstraint),this.gammaConstraint=io(e.gammaConstraint),this.betaRegularizer=Ki(e.betaRegularizer),this.gammaRegularizer=Ki(e.gammaRegularizer)}build(e){e=Rs(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Xa("Axis ".concat(t," of input tensor should have a defined dimension but ")+"the layer received an input with shape "+"".concat(JSON.stringify(e),"."));this.inputSpec=[new Ls({ndim:e.length,axes:{[t]:n}})];const a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return(0,r.tidy)(()=>{const n=null!=t.training&&t.training,a=_s(e),s=a.shape,o=s.length,i=Vr(0,o),c=this.axis>=0?this.axis:this.axis+o;i.splice(c,1);const l=Ja(1,o);l[c]=s[c];const u=i.slice();u.sort();const d=!r.util.arraysEqual(u,Vr(0,o).slice(0,o-1));if(!n)return(()=>{if(d){const e=(0,r.reshape)(this.movingMean.read(),l),t=(0,r.reshape)(this.movingVariance.read(),l),n=this.center?(0,r.reshape)(this.beta.read(),l):null,s=this.scale?(0,r.reshape)(this.gamma.read(),l):null;return sl(a,e,t,n,s,this.epsilon)}return sl(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,f]=ol(a,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(e,t,n)=>{r.tidy(()=>{const a=1-n,s=e.read(),o=r.mul(r.sub(s,t),a);e.write(r.sub(s,o))})};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,f,this.momentum)})(),h})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Is(this.betaInitializer),gammaInitializer:Is(this.gammaInitializer),movingMeanInitializer:Is(this.movingMeanInitializer),movingVarianceInitializer:Is(this.movingVarianceInitializer),betaRegularizer:qi(this.betaRegularizer),gammaRegularizer:qi(this.gammaRegularizer),betaConstraint:so(this.betaConstraint),gammaConstraint:so(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}il.className="BatchNormalization",r.serialization.registerClass(il);class cl extends Us{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received ".concat(this.axis))}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, "+"but received ".concat(JSON.stringify(this.axis)));for(const e of this.axis)if(!Number.isInteger(e))throw new Error("Expected axis to be an array of integers, "+"but received ".concat(JSON.stringify(this.axis)))}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Cs(e.betaInitializer||"zeros"),this.gammaInitializer=Cs(e.gammaInitializer||"ones"),this.betaRegularizer=Ki(e.betaRegularizer),this.gammaRegularizer=Ki(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Rs(e)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error("Invalid axis: ".concat(r));if(this.axis.length!==dr(this.axis).length)throw new Error("Found duplicate axes in: ".concat(this.axis));const n=this.axis.map(t=>e[t]),a=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(e,t){const n=_s(e),a=n.shape,s=a.length;return(0,r.tidy)(()=>{let{mean:e,variance:t}=(0,r.moments)(n,this.axis,!0);const o=Ja(1,s);for(const n of this.axis)o[n]=a[n];const i=e=>null!=e&&e.shape.length!==s?r.reshape(e,o):e;let c=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null;const u=[],d=[];for(let n=0;n<s;++n)-1!==this.axis.indexOf(n)?(u.push(a[n]),d.push(1)):(u.push(1),d.push(a[n]));return e=r.tile(e,u),t=r.tile(t,u),null!=c&&(c=r.tile(c,d)),null!=l&&(l=r.tile(l,d)),sl(n,e,t,l,c,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Is(this.betaInitializer),gammaInitializer:Is(this.gammaInitializer),betaRegularizer:qi(this.betaRegularizer),gammaRegularizer:qi(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}cl.className="LayerNormalization",r.serialization.registerClass(cl);class ll extends Us{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Xa("ZeroPadding2D expects padding to be a length-2 array, but "+"received a length-".concat(e.padding.length," array."));let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Xa("ZeroPadding2D expects height padding to be a length-2 array, "+"but received a length-".concat(e.padding[0].length," array."));if(t=e.padding[0],2!==e.padding[1].length)throw new Xa("ZeroPadding2D expects width padding to be a length-2 array, "+"but received a length-".concat(e.padding[1].length," array."));n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Ls({ndim:4})]}computeOutputShape(e){let t,n;return e=Rs(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return(0,r.tidy)(()=>{return t=_s(e),n=this.padding,a=this.dataFormat,(0,r.tidy)(()=>{if(4!==t.rank)throw new Xa("temporalPadding expects input tensor to be 4-D, but received a "+"".concat(t.rank,"-D tensor."));if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Xa("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==a&&(a="channelsLast"),"channelsLast"!==a&&"channelsFirst"!==a)throw new Xa("Unknown data format: ".concat(a,". ")+"Supported data formats are 'channelsLast' and 'channelsFirst.");let e;return e="channelsFirst"===a?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],r.pad(t,e)});var t,n,a})}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function ul(e,t,n,a,s,o){return(0,r.tidy)(()=>{let i;Er(s),_r(o),Ar(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==s&&(s="channelsLast"),null==o&&(o="max"),e=rc(e,s);const c="same"===a?"same":"valid";return i="max"===o?r.maxPool(e,t,n,c):r.avgPool(e,t,n,c),"channelsFirst"===s&&(i=r.transpose(i,[0,3,1,2])),i})}function dl(e,t,n,a,s,o){return(0,r.tidy)(()=>{let i;Er(s),_r(o),Ar(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==s&&(s="channelsLast"),null==o&&(o="max"),e=sc(e,s);const c="same"===a?"same":"valid";return i="max"===o?r.maxPool3d(e,t,n,c):r.avgPool3d(e,t,n,c),"channelsFirst"===s&&(i=r.transpose(i,[0,4,1,2,3])),i})}ll.className="ZeroPadding2D",r.serialization.registerClass(ll);class hl extends Us{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new Xa("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.poolSize)));this.poolSize=e.poolSize}if(mr(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new Xa("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.strides)));this.strides=e.strides}mr(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Ar(this.padding),this.inputSpec=[new Ls({ndim:3})]}computeOutputShape(e){const t=nc((e=Rs(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return(0,r.tidy)(()=>{this.invokeCallHook(e,t),e=jr(_s(e),2);const n=this.poolingFunction(_s(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return r.squeeze(n,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class pl extends hl{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Er(r),Ar(a),ul(e,t,n,a,r,"max")}}pl.className="MaxPooling1D",r.serialization.registerClass(pl);class fl extends hl{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Er(r),Ar(a),ul(e,t,n,a,r,"avg")}}fl.className="AveragePooling1D",r.serialization.registerClass(fl);class ml extends Us{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Xa("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides];mr(this.poolSize,"poolSize"),mr(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Er(this.dataFormat),Ar(this.padding),this.inputSpec=[new Ls({ndim:4})]}computeOutputShape(e){e=Rs(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=nc(t,this.poolSize[0],this.padding,this.strides[0]),n=nc(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return(0,r.tidy)(()=>(this.invokeCallHook(e,t),this.poolingFunction(_s(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class gl extends ml{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Er(r),Ar(a),ul(e,t,n,a,r,"max")}}gl.className="MaxPooling2D",r.serialization.registerClass(gl);class yl extends ml{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Er(r),Ar(a),ul(e,t,n,a,r,"avg")}}yl.className="AveragePooling2D",r.serialization.registerClass(yl);class bl extends Us{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Xa("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];mr(this.poolSize,"poolSize"),mr(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Er(this.dataFormat),Ar(this.padding),this.inputSpec=[new Ls({ndim:5})]}computeOutputShape(e){e=Rs(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[4]:e[3];return t=nc(t,this.poolSize[0],this.padding,this.strides[0]),n=nc(n,this.poolSize[1],this.padding,this.strides[1]),a=nc(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,a]:[e[0],t,n,a,e[4]]}call(e,t){return(0,r.tidy)(()=>(this.invokeCallHook(e,t),this.poolingFunction(_s(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class vl extends bl{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Er(r),Ar(a),dl(e,t,n,a,r,"max")}}vl.className="MaxPooling3D",r.serialization.registerClass(vl);class xl extends bl{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Er(r),Ar(a),dl(e,t,n,a,r,"avg")}}xl.className="AveragePooling3D",r.serialization.registerClass(xl);class wl extends Us{constructor(e){super(e),this.inputSpec=[new Ls({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Za}}class kl extends wl{constructor(e){super(e||{})}call(e,t){return(0,r.tidy)(()=>{const t=_s(e);return r.mean(t,1)})}}kl.className="GlobalAveragePooling1D",r.serialization.registerClass(kl);class Sl extends wl{constructor(e){super(e||{})}call(e,t){return(0,r.tidy)(()=>{const t=_s(e);return r.max(t,1)})}}Sl.className="GlobalMaxPooling1D",r.serialization.registerClass(Sl);class Tl extends Us{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Er(this.dataFormat),this.inputSpec=[new Ls({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Za}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Nl extends Tl{call(e,t){return(0,r.tidy)(()=>{const t=_s(e);return"channelsLast"===this.dataFormat?r.mean(t,[1,2]):r.mean(t,[2,3])})}}Nl.className="GlobalAveragePooling2D",r.serialization.registerClass(Nl);class Il extends Tl{call(e,t){return(0,r.tidy)(()=>{const t=_s(e);return"channelsLast"===this.dataFormat?r.max(t,[1,2]):r.max(t,[2,3])})}}Il.className="GlobalMaxPooling2D",r.serialization.registerClass(Il);class Cl extends Us{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=xo(t.layer,n);delete t.layer;const r={layer:a};return Object.assign(r,t),new e(r)}}class El extends Cl{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Rs(e)).length<3)throw new Xa("TimeDistributed layer expects an input shape >= 3D, but received "+"input shape ".concat(JSON.stringify(e)));this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Rs(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),a=e[1];return[n[0],a].concat(n.slice(1))}call(e,t){return(0,r.tidy)(()=>kc((e,n)=>[_s(this.layer.call(e,t)),[]],e=_s(e),[],!1,null,null,!1,!0)[1])}}El.className="TimeDistributed",r.serialization.registerClass(El);class Al extends Cl{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=xo(n),t.goBackwards=!0!==t.goBackwards;const a={};var r;if(a.className=e.layer.getClassName(),a.config=t,this.backwardLayer=xo(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,pr(Ir,"BidirectionalMergeMode",r),e.weights)throw new Za("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,a,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(a=r.slice(1),t=r[0]):t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[t].concat(a).concat(a.slice()):nr(n)}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=wc(e,n,a,this.numConstants);if(e=r.inputs,n=r.initialState,a=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==a)return super.apply(e,t);const s=[],o=[];if(null!=n){const e=n.length;if(e%2>0)throw new Xa("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const a=n.map(e=>new Ls({shape:e.shape}));this.forwardLayer.stateSpec=a.slice(0,e/2),this.backwardLayer.stateSpec=a.slice(e/2),o.push(...a)}if(null!=a)throw new Za("Support for constants in Bidirectional layers is not implemented yet.");const i=s[0]instanceof Ps;for(const c of s)if(c instanceof Ps!==i)throw new Xa("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[e].concat(s),a=this.inputSpec.concat(o),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,t);return this.inputSpec=r,i}return super.apply(e,t)}call(e,t){return(0,r.tidy)(()=>{const n=t.initialState;let a,s,o,i;if(null==n)a=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const r=n.slice(0,n.length/2),o=n.slice(n.length/2);a=this.forwardLayer.call(e,Object.assign(t,{initialState:r})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:o}))}return this.returnState&&(Array.isArray(a)&&(o=a.slice(1).concat(s.slice(1))),a=a[0],s=s[0]),this.returnSequences&&(s=r.reverse(s,1)),"concat"===this.mergeMode?i=Xr([a,s]):"sum"===this.mergeMode?i=r.add(a,s):"ave"===this.mergeMode?i=r.mul(.5,r.add(a,s)):"mul"===this.mergeMode?i=r.mul(a,s):null==this.mergeMode&&(i=[a,s]),this.returnState?null==this.mergeMode?i.concat(o):[i].concat(o):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Fr(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Fr(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map(e=>null);return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=xo(t.layer);if(delete t.layer,null!=t.numConstants)throw new Za("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=t;return a.layer=n,new e(a)}}Al.className="Bidirectional",r.serialization.registerClass(Al);class _l extends Us{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,r.tidy)(()=>("float32"!==(e=_s(e)).dtype&&(e=Hr(e,"float32")),(0,r.add)((0,r.mul)(e,this.scale),this.offset)))}}_l.className="Rescaling",r.serialization.registerClass(_l);const{resizeBilinear:Rl,cropAndResize:Fl}=r.image;class Dl extends Us{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,a,s,o,i,c){return(0,r.tidy)(()=>{let l,u=!1;const d=[t/o,n/i,(a+t)/o,(s+n)/i],h=[];3===e.rank?(u=!0,l=(0,r.stack)([e])):l=e;for(let e=0;e<l.shape[0];e++)h.push(d);const p=(0,r.tensor)(h,[h.length,4]),f=(0,r.range)(0,h.length,1,"int32"),m=Fl(l,p,f,[a,s],"nearest");return Hr(u?_s((0,r.unstack)(m)):m,c)})}upsize(e,t,n,a){return(0,r.tidy)(()=>Hr(Rl(e,[t,n]),a))}call(e,t){return(0,r.tidy)(()=>{const t=_s(e),n=t.dtype,a=t.shape,r=a[a.length-3],s=a[a.length-2];let o=0;r!==this.height&&(o=Math.floor((r-this.height)/2));let i=0;return s!==this.width&&(i=Math.floor((s-this.width)/2),0===i&&(i=1)),o>=0&&i>=0?this.centerCrop(t,o,i,this.height,this.width,r,s,n):this.upsize(e,this.height,this.width,n)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Rs(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}Dl.className="CenterCrop",r.serialization.registerClass(Dl);class Ol extends Us{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=Rs(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return(0,r.tidy)(()=>{let n;if("int32"!==(e=_s(e)).dtype&&(e=Hr(e,"int32")),"undefined"!==typeof t.countWeights){if("count"!==this.outputMode)throw new Xa("countWeights is not used when outputMode !== count.\n              Received countWeights=".concat(t.countWeights));n=_s(t.countWeights)}const a=(0,r.max)(e),s=(0,r.min)(e),o=(0,r.greater)(this.numTokens,a).bufferSync().get(0),i=(0,r.greaterEqual)(s,0).bufferSync().get(0);if(!o||!i)throw new Xa("Input values must be between 0 < values <="+" numTokens with numTokens=".concat(this.numTokens));return function(e,t,n,a){let s=_s(e);if("int32"!==s.dtype&&(s=Hr(s,"int32")),"int"===t)return s;const o=s.shape;if(0===s.rank&&(s=(0,r.expandDims)(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=(0,r.expandDims)(s,-1)),s.rank>2)throw new Xa("When outputMode is not int, maximum output rank is 2"+" Received outputMode ".concat(t," and input shape ").concat(o)+" which would result in output rank ".concat(s.rank,"."));const i=["multiHot","oneHot"].includes(t),c=s;let l;if(l="undefined"!==typeof a&&"count"===t?(0,r.denseBincount)(c,a,n,i):(0,r.denseBincount)(c,[],n,i),"tfIdf"!==t)return l;if(a)return(0,r.mul)(l,a);throw new Xa("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)})}}Ol.className="CategoryEncoding",r.serialization.registerClass(Ol);const Ml=new Set(["bilinear","nearest"]);class zl extends Us{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!Ml.has(e.interpolation))throw new Xa("Invalid interpolation parameter: ".concat(e.interpolation," is not implemented"));this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=Rs(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,r.tidy)(()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return r.image.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return r.image.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error("Interpolation is ".concat(this.interpolation," but only ").concat([...Ml]," are supported"))})}}zl.className="Resizing",r.serialization.registerClass(zl);class Ll{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}Ll.className="RandomSeed";class Pl extends Us{constructor(e){super(e),this.randomGenerator=new Ll(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}Pl.className="BaseRandomLayer";const Bl=new Set(["bilinear","nearest"]);class Wl extends Pl{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new Xa("Invalid factor: ".concat(this.factor,". Must be positive number or tuple of 2 numbers"));this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new Xa("factor must have values larger than -1. Got: ".concat(this.factor));if(this.widthUpper<this.widthLower)throw new Xa("factor cannot have upper bound less than lower bound.\n        Got upper bound: ".concat(this.widthUpper,".\n        Got lower bound: ").concat(this.widthLower,"\n      "));if(n){if(!Bl.has(n))throw new Xa("Invalid interpolation parameter: ".concat(n," is not implemented"));this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Rs(e))[2];return[this.imgHeight,-1,t]}call(e,t){return(0,r.tidy)(()=>{const t=_s(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=(0,r.randomUniform)([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*n;a=Math.round(a);const s=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return r.image.resizeBilinear(e,s);case"nearest":return r.image.resizeNearestNeighbor(e,s);default:throw new Error("Interpolation is ".concat(this.interpolation,"\n          but only ").concat([...Bl]," are supported"))}})}}Wl.className="RandomWidth",r.serialization.registerClass(Wl);var Vl,Ul=n(5452),Gl=n(4334);function Hl(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(a.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(Kl(e)){const r=Array.isArray(e)?[]:{};a.add(e);for(const s in e){const o=Hl(e[s],t,n,a);r[s]=o}return a.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error("Can't recurse into non-iterable type: ".concat(e))}return n.set(e,r.value),r.value}function jl(e){return ql(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:Yl)}function ql(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const a=e[0];if(n.has(a))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(Kl(a)){const r=Array.isArray(a)?[]:{};n.add(a);for(const s in a){const a=ql(e.map(e=>e[s]),t,n);r[s]=a}return n.delete(a),r}throw new Error("Can't recurse into non-iterable type: ".concat(a))}return r.value}function Yl(e){return null===e?null:Kl(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function Kl(e){let t=!1;if(r.env().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:a}=n(551);t=e instanceof a}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof r.Tensor)&&!(e instanceof Promise)&&!t)}function Xl(e){return function(e,t){return Hl(e,t)}(e,Zl)}function Zl(e){return e instanceof r.Tensor?{value:e.clone(),recurse:!1}:Kl(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class Ql{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class $l extends Ql{constructor(){super($l.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let a=0;a<n;a++)t[a]=this.get(this.wrap(this.begin+a));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function Jl(e){return new au(e)}function eu(e,t){return new fu(e,t)}$l.INITIAL_CAPACITY=32;class tu{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new uu(this,e)}filter(e){return new cu(this,e)}map(e){return new lu(this,e)}mapAsync(e){return new du(this,e)}serialMapAsync(e){return new du(this,e).serial()}flatmap(e){return new pu(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(e=>!0===e)}rowMajorBatch(e){return new iu(this,e,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Yl;return this.rowMajorBatch(e,t).map(e=>jl(e,n))}concatenate(e,t){return new fu(new nu([this,e]),t)}take(e){return e<0||null==e?this:new ou(this,e)}skip(e){return e<0||null==e?this:new su(this,e)}prefetch(e){return new mu(this,e)}shuffle(e,t){return new gu(this,e,t)}serial(){return new ru(this)}}class nu extends tu{constructor(e){super(),this.items=e,this.trav=0}summary(){return"Array of ".concat(this.items.length," items")}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:Xl(e),done:!1}}}class au extends tu{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message="Error thrown while iterating through a dataset: ".concat(e.message),e}}}class ru extends tu{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Serial")}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class su extends tu{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Skip")}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;r.dispose(e.value)}return this.upstream.next()}}class ou extends tu{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return"".concat(this.upstream.summary()," -> Take")}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class iu extends tu{constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> RowMajorBatch")}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class cu extends tu{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Filter")}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;r.dispose(e.value)}}}class lu extends tu{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Map")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=r.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),a=r.tensor_util.getTensorsInContainer(n);for(const s of t)r.tensor_util.isTensorInList(s,a)||s.dispose();return{value:n,done:!1}}}class uu extends tu{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> handleErrors")}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class du extends tu{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> AsyncMap")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=r.tensor_util.getTensorsInContainer(e.value),n=await this.transform(e.value),a=r.tensor_util.getTensorsInContainer(n);for(const s of t)r.tensor_util.isTensorInList(s,a)||s.dispose();return{value:n,done:!1}}}class hu extends tu{constructor(){super(),this.outputQueue=new $l,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class pu extends hu{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Flatmap")}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=r.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),a=r.tensor_util.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const s of t)r.tensor_util.isTensorInList(s,a)||s.dispose();return!0}}class fu extends tu{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"".concat("TODO: fill in upstream of chained summaries"," -> Chained")}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(Vl||(Vl={}));class mu extends tu{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Ql(t)}summary(){return"".concat(this.upstream.summary()," -> Prefetch")}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class gu extends mu{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Gl.alea(n||r.util.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class yu{constructor(){this.size=null}batch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let a;return r.util.assert(e>0,()=>"batchSize needs to be positive, but it is\n      ".concat(e)),a=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),bu(async()=>(await n.iterator()).columnMajorBatch(e,t,vu),a)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,bu(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,bu(async()=>(await t.iterator()).filter(t=>r.tidy(()=>e(t))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return bu(async()=>(await t.iterator()).map(t=>r.tidy(()=>e(t))),this.size)}mapAsync(e){const t=this;return bu(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return bu(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,bu(async()=>eu(Jl(async()=>({value:await t.iterator(),done:!1})).take(e)),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,bu(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError("`Dataset.shuffle()` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for `tf.Tensor`s), consider setting "+"bufferSize to the dataset size (".concat(this.size," elements)"));const a=this,s=Gl.alea(t||r.util.now().toString());return bu(async()=>{let t=s.int32();return n&&(t+=s.int32()),(await a.iterator()).shuffle(e,t.toString())},this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,bu(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function bu(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends yu{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function vu(e){if(null===e)return null;if(function(e){return null==e||null===(t=e)||"object"!==typeof t&&"function"!==typeof t||Array.isArray(e)||"object"===typeof e&&e instanceof r.Tensor||r.util.isTypedArray(e);var t}(e[0])){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof r.Tensor?r.stack(e):r.tensor(e)}(e),recurse:!1}}return{value:null,recurse:!0}}yu.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");function xu(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&r.util.assert("complex64"!==e.dtype,()=>"".concat(t," does not support complex64 tensors in the CPU backend."))})}const wu=r.kernel_impls.whereImpl;class ku extends r.KernelBackend{nextDataId(){return ku.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new r.DataStorage(this,(0,r.engine)())}write(e,t,n){this.firstUse&&(this.firstUse=!1,(0,r.env)().get("IS_NODE")&&r.backend_util.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&r.util.isString(n[0])){const s=n.map(e=>r.util.encodeString(e));a=this.write(s,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,a,r){this.data.set(e,{values:t,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return r.backend_util.mergeRealAndImagArrays(e,t)}return r.util.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map(e=>r.util.decodeString(e));return(0,r.buffer)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,r.buffer)(e.shape,e.dtype,t)}makeOutput(e,t,n){return(0,r.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=r.util.now();e();return{kernelMs:r.util.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){xu([e],"where");const t=this.readSync(e.dataId);return wu(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}ku.nextDataId=0;function Su(e){return(t,n,a)=>{const s=r.util.getArrayFromDType(n,t.length);for(let r=0;r<t.length;++r)s[r]=e(t[r],a);return s}}function Tu(e,t,n){return Nu(e,Su(t),n)}function Nu(e,t,n){return a=>{let{inputs:s,attrs:o,backend:i}=a;const{x:c}=s;xu(c,e);const l=i,u=l.data.get(c.dataId).values;let d;if("string"===c.dtype){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");d=r.backend_util.fromUint8ToStringArray(u)}else d=u;const h=n||c.dtype,p=t(d,h,o);return l.makeTensorInfo(c.shape,h,p)}}(0,r.registerBackend)("cpu",()=>new ku,1);const Iu=Tu(r.Elu,e=>e>=0?e:Math.exp(e)-1),Cu={kernelName:r.Elu,backendName:"cpu",kernelFunc:Iu};function Eu(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const Au={kernelName:r.Identity,backendName:"cpu",kernelFunc:Eu};function _u(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{alpha:o}=a;xu([s],"leakyRelu");const i=r.util.sizeFromShape(s.shape),c=n.data.get(s.dataId).values,l=r.util.getTypedArrayFromDType("float32",i);for(let r=0;r<c.length;r++)l[r]=c[r]<0?o*c[r]:c[r];return n.makeTensorInfo(s.shape,"float32",l)}const Ru={kernelName:r.LeakyRelu,backendName:"cpu",kernelFunc:_u};function Fu(e){return(t,n,a,s,o)=>{const i=r.backend_util.assertAndGetBroadcastShape(t,n),c=i.length,l=r.util.computeStrides(i),u=r.util.sizeFromShape(i),d=r.util.getTypedArrayFromDType(o,u),h=t.length,p=n.length,f=r.util.computeStrides(t),m=r.util.computeStrides(n),g=r.backend_util.getBroadcastDims(t,i),y=r.backend_util.getBroadcastDims(n,i);if(g.length+y.length===0)for(let r=0;r<d.length;++r)d[r]=e(a[r%a.length],s[r%s.length]);else for(let b=0;b<d.length;++b){const t=r.util.indexToLoc(b,c,l),n=t.slice(-h);g.forEach(e=>n[e]=0);const o=r.util.locToIndex(n,h,f),i=t.slice(-p);y.forEach(e=>i[e]=0);const u=r.util.locToIndex(i,p,m);d[b]=e(a[o],s[u])}return[d,i]}}const Du=Fu((e,t)=>e<0?t*e:e);function Ou(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t;xu([a,r],"prelu");const s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,[i,c]=Du(a.shape,r.shape,s,o,"float32");return n.makeTensorInfo(c,"float32",i)}const Mu={kernelName:r.Prelu,backendName:"cpu",kernelFunc:Ou},zu=Tu(r.Relu,e=>Math.max(0,e)),Lu={kernelName:r.Relu,backendName:"cpu",kernelFunc:zu},Pu=Tu(r.Relu6,e=>Math.min(Math.max(0,e),6)),Bu={kernelName:r.Relu6,backendName:"cpu",kernelFunc:Pu},Wu=Su(e=>1/(1+Math.exp(-e))),Vu=Tu(r.Sigmoid,e=>1/(1+Math.exp(-e))),Uu={kernelName:r.Sigmoid,backendName:"cpu",kernelFunc:Vu};function Gu(e,t,n,a,r){if("linear"===n)return Eu({inputs:{x:t},backend:e});if("relu"===n)return zu({inputs:{x:t},backend:e});if("elu"===n)return Iu({inputs:{x:t},backend:e});if("relu6"===n)return Pu({inputs:{x:t},backend:e});if("prelu"===n)return Ou({inputs:{x:t,alpha:a},backend:e});if("leakyrelu"===n)return _u({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return Vu({inputs:{x:t},backend:e});throw new Error("Activation ".concat(n," has not been implemented for the CPU backend."))}function Hu(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,i=n.makeTensorInfo(a.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",s),imag:n.makeTensorInfo(r.shape,"float32",o)},i}const ju={kernelName:r.Complex,backendName:"cpu",kernelFunc:Hu};function qu(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return Hu({inputs:{real:qu(e,t,"float32"),imag:qu(e,t,"float32")},backend:e})}const a=r.util.makeZerosTypedArray(r.util.sizeFromShape(t),n);return e.makeTensorInfo(t,n,a)}function Yu(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.real,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const Ku={kernelName:r.Real,backendName:"cpu",kernelFunc:Yu};function Xu(e,t,n,a){if("int32"===a){return[t,"int32",Int32Array.from(e)]}if("bool"===a){const a=r.util.toTypedArray([0],n),[s,o]=Fu((e,t)=>e!==t?1:0)(t,[],e,a,"bool");return[o,"bool",s]}throw new Error("Error in Cast: failed to cast ".concat(n," to ").concat(a))}function Zu(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{dtype:o}=a;if("complex64"===o){if("complex64"===s.dtype)return Eu({inputs:{x:s},backend:n});const e=qu(n,s.shape,s.dtype),t=Zu({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),a=Hu({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===s.dtype){const e=Yu({inputs:{input:s},backend:n}),t=Zu({inputs:{x:e},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(e),t}if(!r.util.hasEncodingLoss(s.dtype,o)){const e=Eu({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:o}}const i=n.data.get(s.dataId).values,[c,l,u]=Xu(i,s.shape,s.dtype,o);return n.makeTensorInfo(c,l,u)}const Qu={kernelName:r.Cast,backendName:"cpu",kernelFunc:Zu};function $u(e,t,n,a){return null==n?n=>{let{inputs:s,backend:o}=n;const{a:i,b:c}=s,l=o;xu([i,c],e);const u=l.data.get(i.dataId).values,d=l.data.get(c.dataId).values,h="string"===i.dtype?r.backend_util.fromUint8ToStringArray(u):u,p="string"===i.dtype?r.backend_util.fromUint8ToStringArray(d):d,f=a||i.dtype,[m,g]=t(i.shape,c.shape,h,p,f);return l.makeTensorInfo(g,f,m)}:e=>{let{inputs:r,backend:s}=e;const{a:o,b:i}=r,c=s;if("complex64"===o.dtype||"complex64"===i.dtype){const e=Zu({inputs:{x:o},backend:c,attrs:{dtype:"complex64"}}),t=c.data.get(e.dataId),a=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,s=c.data.get(a.dataId).values,l=c.data.get(r.dataId).values,u=Zu({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),d=c.data.get(u.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,f=c.data.get(h.dataId).values,m=c.data.get(p.dataId).values,[g,y,b]=n(o.shape,i.shape,s,l,f,m),v=c.makeTensorInfo(b,"float32",g),x=c.makeTensorInfo(b,"float32",y),w=Hu({inputs:{real:v,imag:x},backend:c});return c.disposeIntermediateTensorInfo(e),c.disposeIntermediateTensorInfo(u),c.disposeIntermediateTensorInfo(v),c.disposeIntermediateTensorInfo(x),w}{const e=c.data.get(o.dataId).values,n=c.data.get(i.dataId).values,r=a||o.dtype,[s,l]=t(o.shape,i.shape,e,n,r);return c.makeTensorInfo(l,r,s)}}}function Ju(e){return(t,n,a,s,o,i)=>{const c=r.backend_util.assertAndGetBroadcastShape(t,n),l=r.util.sizeFromShape(c),u=c.length,d=r.util.computeStrides(c),h=r.util.getTypedArrayFromDType("float32",l),p=r.util.getTypedArrayFromDType("float32",l),f=r.backend_util.getBroadcastDims(t,c),m=r.backend_util.getBroadcastDims(n,c),g=r.backend_util.mergeRealAndImagArrays(a,s),y=r.backend_util.mergeRealAndImagArrays(o,i),b=t.length,v=r.util.computeStrides(t),x=n.length,w=r.util.computeStrides(n);if(f.length+m.length===0)for(let r=0;r<h.length;r++){const t=r%g.length,n=r%y.length,a=e(g[2*t],g[2*t+1],y[2*n],y[2*n+1]);h[r]=a.real,p[r]=a.imag}else for(let k=0;k<h.length;k++){const t=r.util.indexToLoc(k,u,d),n=t.slice(-b);f.forEach(e=>n[e]=0);const a=r.util.locToIndex(n,b,v),s=t.slice(-x);m.forEach(e=>s[e]=0);const o=r.util.locToIndex(s,x,w),i=e(g[2*a],g[2*a+1],y[2*o],y[2*o+1]);h[k]=i.real,p[k]=i.imag}return[h,p,c]}}const ed=Fu((e,t)=>e+t),td=Ju((e,t,n,a)=>({real:e+n,imag:t+a})),nd=$u(r.Add,ed,td),ad={kernelName:r.Add,backendName:"cpu",kernelFunc:nd};function rd(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{shape:o}=a,i=r.util.sizeFromShape(s.shape),c=r.util.inferFromImplicitShape(o,i),l=r.util.sizeFromShape(c);r.util.assert(i===l,()=>"The new shape (".concat(c,") has ").concat(l," elements and the old ")+"shape (".concat(s.shape,") has ").concat(i," elements. The new shape and old ")+"shape must have the same number of elements."),n.incRef(s.dataId);const u=n.data.get(s.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=c,t.shape=c}return{dataId:s.dataId,shape:c,dtype:s.dtype}}const sd={kernelName:r.Reshape,backendName:"cpu",kernelFunc:rd};function od(e){const{inputs:t,backend:n,attrs:a}=e,{a:s,b:o}=t,{transposeA:i,transposeB:c}=a;xu([s,o],"matMul");const l=s.shape.length,u=o.shape.length,d=i?s.shape[l-2]:s.shape[l-1],h=c?o.shape[u-1]:o.shape[u-2],p=i?s.shape[l-1]:s.shape[l-2],f=c?o.shape[u-2]:o.shape[u-1],m=s.shape.slice(0,-2),g=o.shape.slice(0,-2),y=r.util.sizeFromShape(m),b=r.util.sizeFromShape(g),v=r.broadcast_util.assertAndGetBroadcastShape(s.shape.slice(0,-2),o.shape.slice(0,-2)).concat([p,f]);r.util.assert(d===h,()=>"Error in matMul: inner shapes (".concat(d,") and (")+"".concat(h,") of Tensors with shapes ").concat(s.shape," and ")+"".concat(o.shape," and transposeA=").concat(i)+" and transposeB=".concat(c," must match."));const x=c?[b,f,h]:[b,h,f],w=rd({inputs:{x:s},backend:n,attrs:{shape:i?[y,d,p]:[y,p,d]}}),k=rd({inputs:{x:o},backend:n,attrs:{shape:x}}),S=i?w.shape[1]:w.shape[2],T=i?w.shape[2]:w.shape[1],N=c?k.shape[1]:k.shape[2],I=Math.max(y,b),C=n.data.get(w.dataId).values,E=n.data.get(k.dataId).values,A=r.util.computeStrides(w.shape),_=r.util.computeStrides(k.shape),[R,F,D]=i?[A[0],1,A[1]]:[A[0],A[1],1],[O,M,z]=c?[1,_[1],_[0]]:[_[1],1,_[0]],L=T*N,P=(0,r.buffer)([I,T,N],w.dtype),B=P.values,W=n.blockSize;for(let r=0;r<I;r++){const e=r%y,t=r%b;for(let n=0;n<T;n+=W){const a=Math.min(n+W,T);for(let s=0;s<N;s+=W){const o=Math.min(s+W,N);for(let i=0;i<S;i+=W){const c=Math.min(i+W,S);for(let l=n;l<a;l++)for(let n=s;n<o;n++){let a=0;for(let r=i;r<c;r++){a+=C[e*R+l*F+r*D]*E[r*O+n*M+t*z]}B[r*L+(l*N+n)]+=a}}}}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(v,P.dtype,P.values)}const id={kernelName:r.BatchMatMul,backendName:"cpu",kernelFunc:od};const cd={kernelName:r._FusedMatMul,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:d}=a;let h,p,f;const m=[];h=od({inputs:{a:r,b:s},attrs:{transposeA:c,transposeB:l},backend:n}),o&&(p=nd({inputs:{a:h,b:o},backend:n}),m.push(h),h=p),u&&(f=Gu(n,h,u,i,d),m.push(h),h=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return h}};function ld(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const ud={kernelName:r.Abs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;xu(t,"abs");let a=new Float32Array(r.util.sizeFromShape(t.shape));return a=ld(n.data.get(t.dataId).values),n.makeOutput(a,t.shape,t.dtype)}},dd=Tu(r.Acos,e=>Math.acos(e)),hd={kernelName:r.Acos,backendName:"cpu",kernelFunc:dd},pd=Tu(r.Acosh,e=>Math.acosh(e)),fd={kernelName:r.Acosh,backendName:"cpu",kernelFunc:pd};const md={kernelName:r.AddN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,a=t;xu(t,"addN");const s=a.map(e=>n.data.get(e.dataId).values),o=(0,r.buffer)(a[0].shape,a[0].dtype),i=o.values;for(let r=0;r<a.length;r++){const e=s[r];for(let t=0;t<i.length;t++)i[t]+=e[t]}return n.makeTensorInfo(o.shape,o.dtype,o.values)}};function gd(e,t,n,a,s){const o=t.length,i=r.util.sizeFromShape(t),c=r.util.computeStrides(t),l=r.util.computeStrides(s),u=r.util.getTypedArrayFromDType(n,r.util.sizeFromShape(s));for(let d=0;d<i;++d){const t=r.util.indexToLoc(d,o,c),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[a[e]];u[r.util.locToIndex(n,o,l)]=e[d]}return u}function yd(e){const{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{perm:s}=n;xu(r,"transpose");const o=r.shape.length,i=new Array(o);for(let l=0;l<i.length;l++)i[l]=r.shape[s[l]];const c=gd(a.data.get(r.dataId).values,r.shape,r.dtype,s,i);return{dataId:a.write(c,i,r.dtype),shape:i,dtype:r.dtype}}const bd={kernelName:r.Transpose,backendName:"cpu",kernelFunc:yd};const vd={kernelName:r.All,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o,keepDims:i}=a;xu(s,"all");const c=r.util.parseAxisParam(o,s.shape);let l=c;const u=r.backend_util.getAxesPermutation(l,s.shape.length);let d=s;null!=u&&(d=yd({inputs:{x:s},backend:n,attrs:{perm:u}}),l=r.backend_util.getInnerMostAxes(l.length,s.shape.length)),r.backend_util.assertAxesAreInnerMostDims("all",l,d.shape.length);const[h,p]=r.backend_util.computeOutAndReduceShapes(d.shape,l),f=r.util.sizeFromShape(p),m=r.util.makeZerosTypedArray(r.util.sizeFromShape(h),d.dtype),g=n.data.get(d.dataId).values;for(let r=0;r<m.length;++r){const e=r*f;let t=g[e];for(let n=0;n<f;++n){const a=g[e+n];t=t&&a}m[r]=t}null!=u&&n.disposeIntermediateTensorInfo(d);const y=n.makeTensorInfo(h,d.dtype,m);if(i){const e=rd({inputs:{x:y},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(h,c)}});return n.disposeIntermediateTensorInfo(y),e}return y}};const xd={kernelName:r.Any,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o,keepDims:i}=a;xu(s,"any");const c=r.util.parseAxisParam(o,s.shape);let l=c;const u=r.backend_util.getAxesPermutation(l,s.shape.length);let d=s;null!=u&&(d=yd({inputs:{x:s},backend:n,attrs:{perm:u}}),l=r.backend_util.getInnerMostAxes(l.length,s.shape.length)),r.backend_util.assertAxesAreInnerMostDims("any",l,d.shape.length);const[h,p]=r.backend_util.computeOutAndReduceShapes(d.shape,l),f=r.util.sizeFromShape(p),m=r.util.makeZerosTypedArray(r.util.sizeFromShape(h),d.dtype),g=n.data.get(d.dataId).values;for(let r=0;r<m.length;++r){const e=r*f;let t=g[e];for(let n=0;n<f;++n){const a=g[e+n];t=t||a}m[r]=t}null!=u&&n.disposeIntermediateTensorInfo(d);const y=n.makeTensorInfo(h,d.dtype,m);if(i){const e=rd({inputs:{x:y},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(h,c)}});return n.disposeIntermediateTensorInfo(y),e}return y}};const wd={kernelName:r.ArgMax,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o}=a;xu(s,"argMax");let i=r.util.parseAxisParam(o,s.shape);const c=r.backend_util.getAxesPermutation(i,s.shape.length);let l=s;const u=[];null!=c&&(l=yd({inputs:{x:s},backend:n,attrs:{perm:c}}),u.push(l),i=r.backend_util.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],r.backend_util.assertAxesAreInnerMostDims("argMax",i,l.shape.length);const[d,h]=r.backend_util.computeOutAndReduceShapes(l.shape,i),p=r.util.sizeFromShape(d),f=r.util.makeZerosTypedArray(p,"int32"),m=r.util.sizeFromShape(h),g=n.data.get(l.dataId).values;for(let r=0;r<f.length;++r){const e=r*m;let t=g[e],n=0;for(let a=0;a<m;++a){const r=g[e+a];r>t&&(t=r,n=a)}f[r]=n}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(d,"int32",f)}};const kd={kernelName:r.ArgMin,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o}=a;xu(s,"argMin");let i=r.util.parseAxisParam(o,s.shape);const c=r.backend_util.getAxesPermutation(i,s.shape.length);let l=s;const u=[];null!=c&&(l=yd({inputs:{x:s},backend:n,attrs:{perm:c}}),u.push(l),i=r.backend_util.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],r.backend_util.assertAxesAreInnerMostDims("argMin",i,l.shape.length);const[d,h]=r.backend_util.computeOutAndReduceShapes(l.shape,i),p=r.util.sizeFromShape(d),f=r.util.makeZerosTypedArray(p,"int32"),m=r.util.sizeFromShape(h),g=n.data.get(l.dataId).values;for(let r=0;r<f.length;++r){const e=r*m;let t=g[e],n=0;for(let a=0;a<m;++a){const r=g[e+a];r<t&&(t=r,n=a)}f[r]=n}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(d,"int32",f)}},Sd=Tu(r.Asin,e=>Math.asin(e)),Td={kernelName:r.Asin,backendName:"cpu",kernelFunc:Sd},Nd=Tu(r.Asinh,e=>Math.asinh(e)),Id={kernelName:r.Asinh,backendName:"cpu",kernelFunc:Nd},Cd=Tu(r.Atan,e=>Math.atan(e)),Ed={kernelName:r.Atan,backendName:"cpu",kernelFunc:Cd},Ad=Fu((e,t)=>Math.atan2(e,t)),_d=$u(r.Atan2,Ad),Rd={kernelName:r.Atan2,backendName:"cpu",kernelFunc:_d},Fd=Tu(r.Atanh,e=>Math.atanh(e)),Dd={kernelName:r.Atanh,backendName:"cpu",kernelFunc:Fd};function Od(e,t,n,a,s,o){const i=s.strideHeight,c=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,d=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=(0,r.buffer)(s.outShape,n),y=g.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],v=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let r=0;r<s.batchSize;++r){const t=r*b,n=r*a[0];for(let r=0;r<s.inChannels;++r)for(let g=0;g<s.outHeight;++g){const b=g*i-p,w=Math.max(0,b),k=Math.min(s.inHeight,d+b),S=t+g*v;for(let t=0;t<s.outWidth;++t){const i=t*c-f,d=Math.max(0,i),p=Math.min(s.inWidth,h+i);let g=m,b=0,v=0;for(let t=w;t<k;t+=l){const s=n+t*a[1];for(let t=d;t<p;t+=u){const n=e[s+t*a[2]+r];"max"===o&&n>g?g=n:"avg"===o&&(b+=n,v++)}if(isNaN(g))break}y[S+t*x+r]="avg"===o?b/v:g}}}return g}function Md(e,t,n,a){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=(0,r.buffer)(a.outShape,"int32"),c=a.strideHeight,l=a.strideWidth,u=a.dilationHeight,d=a.dilationWidth,h=a.effectiveFilterHeight,p=a.effectiveFilterWidth,f=a.padInfo.top,m=a.padInfo.left,g=(0,r.buffer)(t,n,e);for(let r=0;r<a.batchSize;++r)for(let e=0;e<a.inChannels;++e)for(let t=0;t<a.outHeight;++t){const n=t*c-f;let y=n;for(;y<0;)y+=u;const b=Math.min(a.inHeight,h+n);for(let c=0;c<a.outWidth;++c){const h=c*l-m;let f=h;for(;f<0;)f+=d;const v=Math.min(a.inWidth,p+h);let x=Number.NEGATIVE_INFINITY,w=-1;for(let t=y;t<b;t+=u){const i=t-n;for(let n=f;n<v;n+=d){const c=n-h,l=g.get(r,t,n,e);l>x&&(x=l,w=s?o?((r*a.inHeight+t)*a.inWidth+n)*a.inChannels+e:(t*a.inWidth+n)*a.inChannels+e:i*p+c)}}i.set(w,r,t,c,e)}}return i}function zd(e,t,n,a,s,o){const i=s.strideDepth,c=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,d=s.dilationHeight,h=s.dilationWidth,p=s.effectiveFilterDepth,f=s.effectiveFilterHeight,m=s.effectiveFilterWidth,g=s.padInfo.front,y=s.padInfo.top,b=s.padInfo.left,v="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=(0,r.buffer)(s.outShape,n),w=x.values,k=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],S=s.outShape[2]*s.outShape[3]*s.outShape[4],T=s.outShape[3]*s.outShape[4],N=s.outShape[4];for(let r=0;r<s.batchSize;++r){const t=r*k,n=r*a[0];for(let r=0;r<s.inChannels;++r)for(let x=0;x<s.outDepth;++x){const k=x*i-g;let I=k;for(;I<0;)I+=u;const C=Math.min(s.inDepth,p+k),E=t+x*S;for(let t=0;t<s.outHeight;++t){const i=t*c-y;let p=i;for(;p<0;)p+=d;const g=Math.min(s.inHeight,f+i),x=E+t*T;for(let t=0;t<s.outWidth;++t){const i=t*l-b;let c=i;for(;c<0;)c+=h;const f=Math.min(s.inWidth,m+i),y=x+t*N;let k=v,S=0,T=0;for(let t=I;t<C;t+=u){const s=n+t*a[1];for(let t=p;t<g;t+=d){const n=s+t*a[2];for(let t=c;t<f;t+=h){const s=e[n+t*a[3]+r];if("max"===o&&s>k?k=s:"avg"===o&&(S+=s,T++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[y+r]="avg"===o?S/Math.max(T,1):k}}}}return x}const Ld={kernelName:r.AvgPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;xu(s,"avgPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(i,1),()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'"));const u=r.backend_util.computePool2DInfo(s.shape,o,i,1,c,l);let d;if(1===u.filterWidth&&1===u.filterHeight&&r.util.arraysEqual(u.inShape,u.outShape))d=Eu({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=r.util.computeStrides(s.shape),a=Od(e,s.shape,s.dtype,t,u,"avg");d=n.makeTensorInfo(u.outShape,s.dtype,a.values)}return d}};const Pd={kernelName:r.AvgPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{filterSize:o,strides:i,pad:c,dimRoundingMode:l,dataFormat:u}=a;xu(s,"avgPool3d");const d=r.backend_util.computePool3DInfo(s.shape,o,i,1,c,l,u),h=zd(n.data.get(s.dataId).values,s.shape,s.dtype,r.util.computeStrides(s.shape),d,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const Bd={kernelName:r.AvgPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:o}=t,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=a;xu([s,o],"avgPool3DGrad");const d=r.backend_util.computePool3DInfo(o.shape,i,c,1,l,u),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,b=d.dilationDepth,v=d.dilationHeight,x=d.dilationWidth,w=d.effectiveFilterDepth,k=d.effectiveFilterHeight,S=d.effectiveFilterWidth,T=w-1-d.padInfo.front,N=S-1-d.padInfo.left,I=k-1-d.padInfo.top,C=(0,r.buffer)(o.shape,"float32"),E=1/(m*g*y),A=n.bufferSync(s);for(let r=0;r<d.batchSize;++r)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inDepth;++t)for(let n=0;n<d.inHeight;++n)for(let a=0;a<d.inWidth;++a){const s=t-T,o=n-I,i=a-N;let c=0;for(let t=0;t<w;t+=b){const n=(s+t)/h;if(!(n<0||n>=d.outDepth||Math.floor(n)!==n))for(let t=0;t<k;t+=v){const a=(o+t)/p;if(!(a<0||a>=d.outHeight||Math.floor(a)!==a))for(let t=0;t<S;t+=x){const s=(i+t)/f;if(s<0||s>=d.outWidth||Math.floor(s)!==s)continue;c+=A.get(r,n,a,s,e)}}}C.set(c*E,r,t,n,a,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};const Wd={kernelName:r.AvgPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:o}=t,i=o;xu([s,o],"avgPoolGrad");const{filterSize:c,strides:l,pad:u}=a,d=r.backend_util.computePool2DInfo(i.shape,c,l,1,u),h=d.strideHeight,p=d.strideWidth,f=d.filterHeight,m=d.filterWidth,g=d.dilationHeight,y=d.dilationWidth,b=d.effectiveFilterHeight,v=d.effectiveFilterWidth,x=v-1-d.padInfo.left,w=b-1-d.padInfo.top,k=(0,r.buffer)(i.shape,"float32"),S=1/(f*m),T=n.data.get(s.dataId).values,N=(0,r.buffer)(s.shape,"float32",T);for(let r=0;r<d.batchSize;++r)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){const a=t-w,s=n-x;let o=0;for(let t=0;t<b;t+=g){const n=(a+t)/h;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let t=0;t<v;t+=y){const a=(s+t)/p;if(a<0||a>=d.outWidth||Math.floor(a)!==a)continue;o+=N.get(r,n,a,e)}}k.set(o*S,r,t,n,e)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};const Vd={kernelName:r.FusedBatchNorm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,scale:o,offset:i,mean:c,variance:l}=t;r.util.assert(c.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),r.util.assert(null==i||c.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),r.util.assert(null==o||c.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),xu([s,c,l,o,i],"batchNorm");let{varianceEpsilon:u}=a;null==u&&(u=.001);const d=n.data.get(s.dataId).values,h=n.data.get(c.dataId).values,p=n.data.get(l.dataId).values,f=o?n.data.get(o.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(d.length),y=m.length,b=f.length,v=p.length,x=h.length;let w=0,k=0,S=0,T=0;for(let r=0;r<d.length;++r)g[r]=m[w++]+(d[r]-h[k++])*f[S++]/Math.sqrt(p[T++]+u),w>=y&&(w=0),k>=x&&(k=0),S>=b&&(S=0),T>=v&&(T=0);return n.makeTensorInfo(s.shape,s.dtype,g)}};function Ud(e,t,n,a,s){const o=r.slice_util.isSliceContinous(a,t,n),i=r.util.sizeFromShape(n),c=r.util.computeStrides(a);if(o){const n=r.slice_util.computeFlatOffset(t,c);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const l="string"===s?r.backend_util.fromUint8ToStringArray(e):e,u=(0,r.buffer)(a,s,l),d=(0,r.buffer)(n,s);for(let r=0;r<d.size;++r){const e=d.indexToLoc(r),n=e.map((e,n)=>e+t[n]);d.set(u.get(...n),...e)}return"string"===s?r.backend_util.fromStringArrayToUint8(d.values):d.values}function Gd(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{begin:o,size:i}=a;xu(s,"slice");const[c,l]=r.slice_util.parseSliceParams(s,o,i);r.slice_util.assertParamsValid(s,c,l);const u=Ud(n.data.get(s.dataId).values,c,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,u)}const Hd={kernelName:r.Slice,backendName:"cpu",kernelFunc:Gd};const jd={kernelName:r.BatchToSpaceND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:o,crops:i}=a;xu([s],"batchToSpaceND");const c=o.reduce((e,t)=>e*t),l=r.backend_util.getReshaped(s.shape,o,c),u=r.backend_util.getPermuted(l.length,o.length),d=r.backend_util.getReshapedPermuted(s.shape,o,c),h=r.backend_util.getSliceBeginCoords(i,o.length),p=r.backend_util.getSliceSize(d,i,o.length),f=rd({inputs:{x:s},backend:n,attrs:{shape:l}}),m=yd({inputs:{x:f},backend:n,attrs:{perm:u}}),g=rd({inputs:{x:m},backend:n,attrs:{shape:d}}),y=Gd({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}};function qd(e,t,n,a,s){const o=r.util.sizeFromShape(a),i=r.util.makeZerosTypedArray(s,n);for(let r=0;r<e.length;r++){const n=e[r];if(n<0)throw new Error("Input x must be non-negative!");n>=s||(i[n]+=o>0?t[r]:1)}return i}function Yd(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=e.shape[0],o=e.shape[1],i=(0,r.buffer)([s,n],t.dtype);for(let r=0;r<s;r++)for(let s=0;s<o;s++){const o=e.get(r,s);if(o<0)throw new Error("Input x must be non-negative!");o>=n||(a?i.set(1,r,o):t.size>0?i.set(i.get(r,o)+t.get(r,s),r,o):i.set(i.get(r,o)+1,r,o))}return i}const Kd={kernelName:r.Bincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o}=a,i=qd(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,i)}},Xd=Fu((e,t)=>e&t),Zd=$u(r.BitwiseAnd,Xd),Qd={kernelName:r.BitwiseAnd,backendName:"cpu",kernelFunc:Zd};const $d={kernelName:r.BroadcastArgs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:s}=t,o=n.data.get(a.dataId).values,i=n.data.get(s.dataId).values,c=r.backend_util.assertAndGetBroadcastShape(Array.from(o),Array.from(i));return n.makeTensorInfo([c.length],"int32",Int32Array.from(c))}},Jd=Su(e=>Math.ceil(e)),eh=Nu(r.Ceil,Jd),th={kernelName:r.Ceil,backendName:"cpu",kernelFunc:eh},nh=Tu(r.ClipByValue,(e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),ah={kernelName:r.ClipByValue,backendName:"cpu",kernelFunc:nh},rh={kernelName:r.ComplexAbs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(r.util.sizeFromShape(t.shape)),s=n.data.get(t.dataId),o=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,c=n.data.get(o.dataId).values,l=n.data.get(i.dataId).values;for(let r=0;r<c.length;r++){const e=c[r],t=l[r];a[r]=Math.hypot(e,t)}return n.makeOutput(a,t.shape,"float32")}};function sh(e,t,n,a){const s=r.util.getArrayFromDType(n,r.util.sizeFromShape(t));if(a&&"string"!==n){let t=0;e.forEach(e=>{const n=r.util.sizeFromShape(e.shape);s.set(e.vals,t),t+=n})}else{let a=0;e.forEach(e=>{const o="string"===n?r.backend_util.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const r=n*t[1]+a;for(let t=0;t<e.shape[1];++t)s[r+t]=o[i++]}a+=e.shape[1]})}return s}function oh(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.imag,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const ih={kernelName:r.Imag,backendName:"cpu",kernelFunc:oh};function ch(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a,o=r.util.parseAxisParam(s,t[0].shape)[0],i=t.map(e=>e.shape);r.backend_util.assertParamsConsistent(i,o);let c=r.backend_util.computeOutShape(t.map(e=>e.shape),o);if(0===r.util.sizeFromShape(c))return n.makeTensorInfo(c,t[0].dtype,[]);const l=t.filter(e=>r.util.sizeFromShape(e.shape)>0);if(1===l.length)return Eu({inputs:{x:l[0]},backend:n});if("complex64"===l[0].dtype){const e=l.map(e=>Yu({inputs:{input:e},backend:n})),t=l.map(e=>oh({inputs:{input:e},backend:n})),a=ch({inputs:e,backend:n,attrs:{axis:o}}),r=ch({inputs:t,backend:n,attrs:{axis:o}}),s=Hu({inputs:{real:a,imag:r},backend:n});return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),t.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),s}const u=l.map(e=>{const t=r.util.sizeFromShape(e.shape.slice(o));return rd({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}),d=u.map(e=>({vals:n.data.get(e.dataId).values,shape:e.shape}));c=r.backend_util.computeOutShape(u.map(e=>e.shape),1);const h=1===u[0].shape[0],p=sh(d,c,t[0].dtype,h),f=r.backend_util.computeOutShape(l.map(e=>e.shape),o),m=n.makeTensorInfo(f,t[0].dtype,p);return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),m}const lh={kernelName:r.Concat,backendName:"cpu",kernelFunc:ch};function uh(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:o}=t,{strides:i,pad:c,dataFormat:l,dilations:u,dimRoundingMode:d}=a;xu([s,o],"conv2d");const h=r.backend_util.convertConv2DDataFormat(l),p=r.backend_util.computeConv2DInfo(s.shape,o.shape,i,u,c,d,!1,h),f=p.filterHeight,m=p.filterWidth,g=p.dilationHeight,y=p.dilationWidth,b=p.padInfo.left,v=p.padInfo.top,x="channelsLast"===p.dataFormat,w=new r.TensorBuffer(p.outShape,s.dtype),k=r.util.computeStrides(s.shape),S=r.util.computeStrides(o.shape),T=k[0],N=x?k[1]:k[2],I=x?k[2]:1,C=x?1:k[1],E=w.strides[0],A=x?w.strides[1]:w.strides[2],_=x?w.strides[2]:1,R=x?1:w.strides[1],F=n.data.get(s.dataId).values,D=n.data.get(o.dataId).values,O=w.values;for(let r=0;r<p.batchSize;++r){const e=r*T,t=r*E;for(let n=0;n<p.outHeight;++n){const a=t+n*A,r=n*p.strideHeight-v;for(let t=0;t<f;++t){const n=r+t*g;if(n<0||n>=p.inHeight)continue;const s=t*S[0],o=e+n*N;for(let e=0;e<p.outWidth;++e){const t=a+e*_,n=e*p.strideWidth-b;for(let e=0;e<m;++e){const a=n+e*y;if(a<0||a>=p.inWidth)continue;const r=o+a*I;let i=s+e*S[1];for(let e=0;e<p.inChannels;++e){const n=F[r+e*C];for(let e=0;e<p.outChannels;++e)O[t+e*R]+=n*D[i+e];i+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,O)}const dh={kernelName:r.Conv2D,backendName:"cpu",kernelFunc:uh};const hh={kernelName:r.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:o}=t,{strides:i,pad:c,dataFormat:l,dimRoundingMode:u,filterShape:d}=a;xu([s,o],"conv2dBackpropFilter");const h=r.backend_util.convertConv2DDataFormat(l),p=r.backend_util.computeConv2DInfo(s.shape,d,i,1,c,u,!1,h),{strideHeight:f,strideWidth:m,filterHeight:g,filterWidth:y}=p,b="channelsLast"===p.dataFormat,v=new r.TensorBuffer(p.filterShape,"float32"),x=p.padInfo.left,w=p.padInfo.top,k=n.data.get(s.dataId).values,S=n.data.get(o.dataId).values,T=new r.TensorBuffer(s.shape,s.dtype,k),N=new r.TensorBuffer(o.shape,o.dtype,S);for(let r=0;r<g;++r){const e=Math.max(0,Math.ceil((w-r)/f)),t=Math.min(p.outHeight,(p.inHeight+w-r)/f);for(let n=0;n<y;++n){const a=Math.max(0,Math.ceil((x-n)/m)),s=Math.min(p.outWidth,(p.inWidth+x-n)/m);for(let o=0;o<p.inChannels;++o)for(let i=0;i<p.outChannels;++i){let c=0;for(let l=0;l<p.batchSize;++l)for(let u=e;u<t;++u){const e=r+u*f-w;for(let t=a;t<s;++t){const a=n+t*m-x;c+=b?T.get(l,e,a,o)*N.get(l,u,t,i):T.get(l,o,e,a)*N.get(l,i,u,t)}}v.set(c,r,n,o,i)}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const ph={kernelName:r.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:o}=t,{inputShape:i,strides:c,pad:l,dataFormat:u,dimRoundingMode:d}=a;xu([s,o],"conv2dBackpropInput");const h=r.util.computeStrides(o.shape),p=r.util.computeStrides(s.shape);let f=r.backend_util.convertConv2DDataFormat(u);const m=r.backend_util.computeConv2DInfo(i,o.shape,c,1,l,d,!1,f),g=new r.TensorBuffer(m.inShape,"float32"),y=g.values,b=n.data.get(s.dataId).values,v=n.data.get(o.dataId).values,[x,w,k]=h,{batchSize:S,filterHeight:T,filterWidth:N,inChannels:I,inHeight:C,inWidth:E,outChannels:A,outHeight:_,outWidth:R,strideHeight:F,strideWidth:D}=m;f=m.dataFormat;const O=T-1-m.padInfo.top,M=N-1-m.padInfo.left,z="channelsLast"===f,L=g.strides[0],P=z?g.strides[1]:g.strides[2],B=z?g.strides[2]:1,W=z?1:g.strides[1],V=p[0],U=z?p[1]:p[2],G=z?p[2]:1,H=z?1:p[1];for(let r=0;r<S;++r)for(let e=0;e<I;++e)for(let t=0;t<C;++t){const n=t-O,a=Math.max(0,Math.ceil(n/F)),s=Math.min(_,(T+n)/F);for(let o=0;o<E;++o){const i=o-M,c=Math.max(0,Math.ceil(i/D)),l=Math.min(R,(N+i)/D);let u=0;for(let t=a;t<s;++t){const a=t*F-n;for(let n=c;n<l;++n){const s=V*r+U*t+G*n,o=x*(T-1-a)+w*(N-1-(n*D-i))+k*e;for(let e=0;e<A;++e){u+=b[s+H*e]*v[o+e]}}}y[L*r+P*t+B*o+W*e]=u}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const fh={kernelName:r.Conv3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:o}=t,{strides:i,pad:c,dilations:l}=a;xu([s,o],"conv3d");const u=r.backend_util.computeConv3DInfo(s.shape,o.shape,i,l,c),{filterDepth:d,filterHeight:h,filterWidth:p,dilationDepth:f,dilationHeight:m,dilationWidth:g,padInfo:y}=u,b=y.front,v=y.left,x=y.top,w=new r.TensorBuffer(u.outShape,s.dtype),k=n.data.get(s.dataId).values,S=n.data.get(o.dataId).values,T=w.values,N=r.util.computeStrides(s.shape),I=r.util.computeStrides(o.shape);for(let r=0;r<u.batchSize;++r){const e=r*N[0],t=r*w.strides[0];for(let n=0;n<u.outDepth;++n){const a=t+n*w.strides[1],r=n*u.strideDepth-b;for(let t=0;t<d;++t){const n=r+t*f;if(n<0||n>=u.inDepth)continue;const s=t*I[0],o=e+n*N[1];for(let e=0;e<u.outHeight;++e){const t=a+e*w.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){const a=n+e*m;if(a<0||a>=u.inHeight)continue;const r=s+e*I[1],i=o+a*N[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,a=e*u.strideWidth-v;for(let e=0;e<p;++e){const t=a+e*g;if(t<0||t>=u.inWidth)continue;const s=r+e*I[2],o=i+t*u.inChannels;let c=s;for(let e=0;e<u.inChannels;++e){const t=k[o+e];for(let e=0;e<u.outChannels;++e)T[n+e]+=t*S[c+e];c+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const mh={kernelName:r.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:o}=t,{strides:i,pad:c,filterShape:l}=a;xu([s,o],"conv3dBackpropFilterV2");const u=r.util.computeStrides(s.shape),d=r.util.computeStrides(o.shape),h=r.backend_util.computeConv3DInfo(s.shape,l,i,1,c),p=h.strideDepth,f=h.strideHeight,m=h.strideWidth,g=h.filterDepth,y=h.filterHeight,b=h.filterWidth,v=new r.TensorBuffer(h.filterShape,"float32"),x=v.values,[w,k,S,T]=v.strides,N=n.data.get(o.dataId).values,[I,C,E,A]=d,_=n.data.get(s.dataId).values,[R,F,D,O]=u,M=h.padInfo.front,z=h.padInfo.left,L=h.padInfo.top;for(let r=0;r<g;++r){const e=Math.max(0,Math.ceil((M-r)/p)),t=Math.min(h.outDepth,(h.inDepth+M-r)/p),n=r*w;for(let a=0;a<y;++a){const s=Math.max(0,Math.ceil((L-a)/f)),o=Math.min(h.outHeight,(h.inHeight+L-a)/f),i=a*k+n;for(let n=0;n<b;++n){const c=Math.max(0,Math.ceil((z-n)/m)),l=Math.min(h.outWidth,(h.inWidth+z-n)/m),u=n*S+i;for(let i=0;i<h.inChannels;++i){const d=i*T+u;for(let u=0;u<h.outChannels;++u){let g=0;for(let d=0;d<h.batchSize;++d){const h=d*R,y=d*I;for(let d=e;d<t;++d){const e=(r+d*p-M)*F+h,t=d*C+y;for(let r=s;r<o;++r){const s=(a+r*f-L)*D+e,o=r*E+t;for(let e=c;e<l;++e){const t=e*A+o;g+=_[(n+e*m-z)*O+s+i]*N[t+u]}}}}x[d+u]=g}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const gh={kernelName:r.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:o}=t,{pad:i,strides:c,inputShape:l}=a;xu([s],"conv3dBackpropInputV2");const u=r.util.computeStrides(s.shape),d=r.util.computeStrides(o.shape),h=r.backend_util.computeConv3DInfo(l,o.shape,c,1,i),p=new r.TensorBuffer(h.inShape,"float32"),f=p.values,[m,g,y,b]=p.strides,v=n.data.get(s.dataId).values,[x,w,k,S]=u,T=n.data.get(o.dataId).values,[N,I,C,E]=d,{batchSize:A,filterDepth:_,filterHeight:R,filterWidth:F,inChannels:D,inDepth:O,inHeight:M,inWidth:z,outChannels:L,outDepth:P,outHeight:B,outWidth:W,strideDepth:V,strideHeight:U,strideWidth:G}=h,H=_-1-h.padInfo.front,j=R-1-h.padInfo.top,q=F-1-h.padInfo.left;for(let r=0;r<A;++r)for(let e=0;e<D;++e)for(let t=0;t<O;++t){const n=t-H,a=Math.max(0,Math.ceil(n/V)),s=Math.min(P,(_+n)/V);for(let o=0;o<M;++o){const i=o-j,c=Math.max(0,Math.ceil(i/U)),l=Math.min(B,(R+i)/U);for(let u=0;u<z;++u){const d=u-q,h=Math.max(0,Math.ceil(d/G)),p=Math.min(W,(F+d)/G);let A=0;for(let t=a;t<s;++t){const a=t*V-n;for(let n=c;n<l;++n){const s=n*U-i;for(let o=h;o<p;++o){const i=x*r+w*t+k*n+S*o,c=N*(_-1-a)+I*(R-1-s)+C*(F-1-(o*G-d))+E*e;for(let e=0;e<L;++e){A+=v[i+e]*T[c+e]}}}}f[m*r+g*t+y*o+b*u+e]=A}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},yh=Tu(r.Cos,e=>Math.cos(e)),bh={kernelName:r.Cos,backendName:"cpu",kernelFunc:yh},vh=Tu(r.Cosh,e=>Math.cosh(e)),xh={kernelName:r.Cosh,backendName:"cpu",kernelFunc:vh};const wh={kernelName:r.CropAndResize,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:s,boxes:o,boxInd:i}=t,{cropSize:c,method:l,extrapolationValue:u}=a,[d,h,p,f]=s.shape,m=o.shape[0],[g,y]=c,b=(0,r.buffer)([m,g,y,f],"float32"),v=n.data.get(o.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(s.dataId).values,k=r.util.computeStrides(s.shape),S=r.util.computeStrides(b.shape);for(let r=0;r<m;r++){const e=4*r,t=v[e],n=v[e+1],a=v[e+2],s=v[e+3],o=x[r];if(o>=d)continue;const i=g>1?(a-t)*(h-1)/(g-1):0,c=y>1?(s-n)*(p-1)/(y-1):0;for(let d=0;d<g;d++){const e=g>1?t*(h-1)+d*i:.5*(t+a)*(h-1);if(e<0||e>h-1)for(let t=0;t<y;t++)for(let e=0;e<f;e++){const n=e+t*S[2]+d*S[1]+r*S[0];b.values[n]=u}else if("bilinear"===l){const t=Math.floor(e),a=Math.ceil(e),i=e-t;for(let e=0;e<y;e++){const l=y>1?n*(p-1)+e*c:.5*(n+s)*(p-1);if(l<0||l>p-1){for(let t=0;t<f;t++){const n=t+e*S[2]+d*S[1]+r*S[0];b.values[n]=u}continue}const h=Math.floor(l),m=Math.ceil(l),g=l-h;for(let n=0;n<f;n++){let s=n+h*k[2]+t*k[1]+o*k[0];const c=w[s];s=n+m*k[2]+t*k[1]+o*k[0];const l=w[s];s=n+h*k[2]+a*k[1]+o*k[0];const u=w[s];s=n+m*k[2]+a*k[1]+o*k[0];const p=c+(l-c)*g,f=u+(w[s]-u)*g;s=n+e*S[2]+d*S[1]+r*S[0],b.values[s]=p+(f-p)*i}}}else for(let t=0;t<y;++t){const a=y>1?n*(p-1)+t*c:.5*(n+s)*(p-1);if(a<0||a>p-1){for(let e=0;e<f;e++){const n=e+t*S[2]+d*S[1]+r*S[0];b.values[n]=u}continue}const i=Math.round(a),l=Math.round(e);for(let e=0;e<f;e++){const n=e+i*k[2]+l*k[1]+o*k[0],a=e+t*S[2]+d*S[1]+r*S[0];b.values[a]=w[n]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const kh={kernelName:r.Cumprod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o,exclusive:i,reverse:c}=a;xu(s,"cumprod");const l=r.backend_util.getAxesPermutation([o],s.shape.length);let u=s;null!=l&&(u=yd({inputs:{x:s},backend:n,attrs:{perm:l}}));const d=r.backend_util.getInnerMostAxes(1,s.shape.length)[0];if(d!==u.shape.length-1)throw new Error("backend.cumprod in CPU expects an inner-most "+"axis=".concat(u.shape.length-1," but got axis=").concat(d));const h=(0,r.upcastType)(u.dtype,"int32"),p=r.util.makeOnesTypedArray(r.util.sizeFromShape(u.shape),h),f=n.data.get(u.dataId).values,m=u.shape[u.shape.length-1],g=c?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let r=0;r<f.length;r+=m)for(let e=0;e<m;e++){const t=g(r,e);if(0===e)p[t]=i?1:f[t];else{const n=g(r,e-1);p[t]=i?f[n]*p[n]:f[t]*p[n]}}const y=n.makeTensorInfo(u.shape,h,p);if(null!=l){const e=yd({inputs:{x:y},backend:n,attrs:{perm:r.backend_util.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(u),e}return y}};const Sh={kernelName:r.Cumsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o,exclusive:i,reverse:c}=a;xu(s,"cumsum");const l=r.backend_util.getAxesPermutation([o],s.shape.length);let u=s;null!=l&&(u=yd({inputs:{x:s},backend:n,attrs:{perm:l}}));const d=r.backend_util.getInnerMostAxes(1,s.shape.length)[0];if(d!==u.shape.length-1)throw new Error("backend.cumsum in CPU expects an inner-most "+"axis=".concat(u.shape.length-1," but got axis=").concat(d));const h=(0,r.upcastType)(u.dtype,"int32"),p=r.util.makeZerosTypedArray(r.util.sizeFromShape(u.shape),h),f=n.data.get(u.dataId).values,m=u.shape[u.shape.length-1],g=c?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let r=0;r<f.length;r+=m)for(let e=0;e<m;e++){const t=g(r,e);if(0===e)p[t]=i?0:f[t];else{const n=g(r,e-1);p[t]=i?f[n]+p[n]:f[t]+p[n]}}const y=n.makeTensorInfo(u.shape,h,p);if(null!=l){const e=yd({inputs:{x:y},backend:n,attrs:{perm:r.backend_util.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(u),e}return y}};const Th={kernelName:r.DenseBincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o,binaryOutput:i}=a;if(1===r.shape.length){const e=qd(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,e)}if(2===r.shape.length){const e=Yd(n.bufferSync(r),n.bufferSync(s),o,i);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};const Nh={kernelName:r.DepthToSpace,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockSize:o,dataFormat:i}=a;r.util.assert("NHWC"===i,()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got ".concat(i));const c=s.shape[0],l=s.shape[1],u=s.shape[2],d=s.shape[3],h=l*o,p=u*o,f=d/(o*o),m=n.data.get(s.dataId).values,g=new Float32Array(c*h*p*f);let y=0;for(let r=0;r<c;++r)for(let e=0;e<h;++e){const t=Math.floor(e/o),n=e%o;for(let e=0;e<p;++e){const a=Math.floor(e/o),s=(n*o+e%o)*f;for(let e=0;e<f;++e){const n=e+s+d*(a+u*(t+l*r));g[y++]=m[n]}}}return n.makeTensorInfo([c,h,p,f],s.dtype,g)}};function Ih(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:o}=t,{strides:i,pad:c,dilations:l,dimRoundingMode:u}=a;xu([s,o],"depthwiseConv2DNative");const d=r.util.computeStrides(s.shape),h=r.util.computeStrides(o.shape);let p=l;null==p&&(p=[1,1]),r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(i,p),()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(i," and dilations '").concat(p,"'"));const f=r.backend_util.computeConv2DInfo(s.shape,o.shape,i,p,c,u,!0),{filterHeight:m,filterWidth:g,dilationHeight:y,dilationWidth:b,padInfo:v}=f,x=v.left,w=v.top,k=f.outChannels/f.inChannels,S=new r.TensorBuffer(f.outShape,s.dtype),T=n.data.get(s.dataId).values,N=n.data.get(o.dataId).values,I=S.values;for(let r=0;r<f.batchSize;++r){const e=r*d[0],t=r*S.strides[0];for(let n=0;n<f.outHeight;++n){const a=t+n*S.strides[1],r=n*f.strideHeight-w;for(let t=0;t<m;++t){const n=r+t*y;if(n<0||n>=f.inHeight)continue;const s=t*h[0],o=e+n*d[1];for(let e=0;e<f.outWidth;++e){const t=a+e*S.strides[2],n=e*f.strideWidth-x;for(let e=0;e<g;++e){const a=n+e*b;if(a<0||a>=f.inWidth)continue;const r=s+e*h[1],i=o+a*f.inChannels;let c=t,l=r;for(let e=0;e<f.inChannels;++e){const t=T[i+e];for(let e=0;e<k;++e)I[c+e]+=t*N[l+e];c+=k,l+=k}}}}}}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const Ch={kernelName:r.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:Ih};const Eh={kernelName:r.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:o}=t,{strides:i,dilations:c,pad:l,dimRoundingMode:u,filterShape:d}=a;xu([s,o],"depthwiseConv2dNativeBackpropFilter");const h=r.backend_util.computeConv2DInfo(s.shape,d,i,c,l,u,!0),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,y=new r.TensorBuffer(h.filterShape,"float32"),b=h.padInfo.left,v=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(s.dataId).values,k=new r.TensorBuffer(s.shape,s.dtype,w),S=n.data.get(o.dataId).values,T=new r.TensorBuffer(o.shape,o.dtype,S);for(let r=0;r<m;++r){const e=Math.max(0,Math.ceil((v-r)/p)),t=Math.min(h.outHeight,(h.inHeight+v-r)/p);for(let n=0;n<g;++n){const a=Math.max(0,Math.ceil((b-n)/f)),s=Math.min(h.outWidth,(h.inWidth+b-n)/f);for(let o=0;o<h.outChannels;++o){const i=Math.trunc(o/x),c=o%x;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=e;c<t;++c){const e=r+c*p-v;for(let t=a;t<s;++t){const a=n+t*f-b;l+=k.get(u,e,a,i)*T.get(u,c,t,o)}}y.set(l,r,n,i,c)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const Ah={kernelName:r.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:o}=t,{strides:i,dilations:c,pad:l,dimRoundingMode:u,inputShape:d}=a;xu([s,o],"depthwiseConv2DNativeBackpropInput");const h=r.util.computeStrides(s.shape),p=r.util.computeStrides(o.shape),f=r.backend_util.computeConv2DInfo(d,o.shape,i,c,l,u,!0),m=new r.TensorBuffer(f.inShape,"float32"),g=m.values,[y,b,v]=m.strides,x=n.data.get(s.dataId).values,[w,k,S]=h,T=n.data.get(o.dataId).values,[N,I,C]=p,{batchSize:E,filterHeight:A,filterWidth:_,inChannels:R,inHeight:F,inWidth:D,outChannels:O,outHeight:M,outWidth:z,strideHeight:L,strideWidth:P}=f,B=A-1-f.padInfo.top,W=_-1-f.padInfo.left,V=O/R;for(let r=0;r<E;++r)for(let e=0;e<R;++e)for(let t=0;t<F;++t){const n=t-B,a=Math.max(0,Math.ceil(n/L)),s=Math.min(M,(A+n)/L);for(let o=0;o<D;++o){const i=o-W,c=Math.max(0,Math.ceil(i/P)),l=Math.min(z,(_+i)/P);let u=0;for(let t=a;t<s;++t){const a=t*L-n;for(let n=c;n<l;++n){const s=w*r+k*t+S*n,o=N*(A-1-a)+I*(_-1-(n*P-i))+C*e;for(let t=0;t<V;++t){u+=x[s+(e*V+t)]*T[o+t]}}}g[y*r+b*t+v*o+e]=u}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const _h={kernelName:r.Diag,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,s=r.util.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,i=(0,r.buffer)([s,s],a.dtype),c=i.values;for(let r=0;r<o.length;r++)c[r*s+r]=o[r];const l=[...a.shape,...a.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},Rh={kernelName:r.Dilation2D,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:s,filter:o}=t,{strides:i,pad:c,dilations:l}=a,u=n,d=u.data.get(s.dataId).values,h=s.shape.length,p=u.data.get(o.dataId).values,f=o.shape.length,{batchSize:m,inHeight:g,inWidth:y,inChannels:b,outHeight:v,outWidth:x,padInfo:w,strideHeight:k,strideWidth:S,filterHeight:T,filterWidth:N,dilationHeight:I,dilationWidth:C,outShape:E}=r.backend_util.computeDilation2DInfo(s.shape,o.shape,i,c,"NHWC",l),A=r.util.sizeFromShape(E),_=E.length,R=r.util.getArrayFromDType(s.dtype,A);for(let F=0;F<m;++F)for(let e=0;e<v;++e){const t=e*k-w.top;for(let n=0;n<x;++n){const a=n*S-w.left;for(let i=0;i<b;++i){let c=Number.MIN_SAFE_INTEGER;for(let e=0;e<T;++e){const n=t+e*I;if(n>=0&&n<g)for(let t=0;t<N;++t){const l=a+t*C;if(l>=0&&l<y){const a=r.util.locToIndex([F,n,l,i],h,r.util.computeStrides(s.shape)),u=r.util.locToIndex([e,t,i],f,r.util.computeStrides(o.shape)),m=d[a]+p[u];m>c&&(c=m)}}}R[r.util.locToIndex([F,e,n,i],_,r.util.computeStrides(E))]=c}}}return{dataId:u.write(r.util.toTypedArray(R,s.dtype),E,s.dtype),shape:E,dtype:s.dtype}}},Fh={kernelName:r.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:s,filter:o,dy:i}=t,{strides:c,pad:l,dilations:u}=a,d=n,h=r.util.toNestedArray(s.shape,d.data.get(s.dataId).values),p=r.util.toNestedArray(o.shape,d.data.get(o.dataId).values),{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:v,padInfo:x,strideHeight:w,strideWidth:k,filterHeight:S,filterWidth:T,dilationHeight:N,dilationWidth:I,outShape:C}=r.backend_util.computeDilation2DInfo(s.shape,o.shape,c,l,"NHWC",u);r.util.assert(i.rank===C.length,()=>"Error in ".concat(r.Dilation2DBackpropFilter,", dy ")+"must have the same rank as output ".concat(C.length,", but got ")+"".concat(i.rank));const E=r.util.toNestedArray(C,d.data.get(i.dataId).values),A=r.util.makeZerosNestedTypedArray(o.shape,o.dtype);for(let r=0;r<f;++r)for(let e=0;e<b;++e){const t=e*w-x.top;for(let n=0;n<v;++n){const a=n*k-x.left;for(let s=0;s<y;++s){let o=Number.MIN_SAFE_INTEGER,i=0,c=0;for(let e=0;e<S;++e){const n=t+e*N;if(n>=0&&n<m)for(let t=0;t<T;++t){const l=a+t*I;if(l>=0&&l<g){const a=h[r][n][l][s]+p[e][t][s];a>o&&(o=a,i=e,c=t)}}}A[i][c][s]+=E[r][e][n][s]}}}return{dataId:d.write(r.util.toTypedArray(A,s.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}},Dh={kernelName:r.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:s,filter:o,dy:i}=t,{strides:c,pad:l,dilations:u}=a,d=n,h=r.util.toNestedArray(s.shape,d.data.get(s.dataId).values),p=r.util.toNestedArray(o.shape,d.data.get(o.dataId).values),{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:v,padInfo:x,strideHeight:w,strideWidth:k,filterHeight:S,filterWidth:T,dilationHeight:N,dilationWidth:I,outShape:C}=r.backend_util.computeDilation2DInfo(s.shape,o.shape,c,l,"NHWC",u);r.util.assert(i.rank===C.length,()=>"Error in ".concat(r.Dilation2DBackpropInput,", dy ")+"must have the same rank as output ".concat(C.length,", but got ")+"".concat(i.rank));const E=r.util.toNestedArray(C,d.data.get(i.dataId).values),A=r.util.makeZerosNestedTypedArray(s.shape,s.dtype);for(let r=0;r<f;++r)for(let e=0;e<b;++e){const t=e*w-x.top;for(let n=0;n<v;++n){const a=n*k-x.left;for(let s=0;s<y;++s){let o=Number.MIN_SAFE_INTEGER,i=t<0?0:t,c=a<0?0:a;for(let e=0;e<S;++e){const n=t+e*N;if(n>=0&&n<m)for(let t=0;t<T;++t){const l=a+t*I;if(l>=0&&l<g){const a=h[r][n][l][s]+p[e][t][s];a>o&&(o=a,i=n,c=l)}}}A[r][i][c][s]+=E[r][e][n][s]}}}return{dataId:d.write(r.util.toTypedArray(A,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};const Oh={kernelName:r.Draw,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{canvas:s,options:o}=a,{contextOptions:i,imageOptions:c}=o||{},l=(null===c||void 0===c?void 0:c.alpha)||1,u=(null===i||void 0===i?void 0:i.contextType)||"2d";if("2d"!==u)throw new Error("Context type ".concat(i.contextType," is not supported by the CPU backend."));const d=s.getContext(u,(null===i||void 0===i?void 0:i.contextAttributes)||{});if(null==d)throw new Error("Could not get the context with ".concat(u," type."));const[h,p]=r.shape.slice(0,2),f=2===r.shape.length?1:r.shape[2],m=n.data.get(r.dataId).values,g="float32"===r.dtype?255:1,y=new Uint8ClampedArray(p*h*4);for(let v=0;v<h*p;++v){const e=[0,0,0,255*l];for(let n=0;n<f;n++){const t=m[v*f+n];if("float32"===r.dtype){if(t<0||t>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(t,"."))}else if("int32"===r.dtype&&(t<0||t>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(t,"."));1===f?(e[0]=t*g,e[1]=t*g,e[2]=t*g):e[n]=t*g}const t=4*v;y[t+0]=Math.round(e[0]),y[t+1]=Math.round(e[1]),y[t+2]=Math.round(e[2]),y[t+3]=Math.round(e[3])}s.width=p,s.height=h;const b=new ImageData(y,p,h);return d.putImageData(b,0,0),r}},Mh=Fu((e,t)=>e*t),zh=Ju((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n})),Lh=$u(r.Multiply,Mh,zh),Ph={kernelName:r.Multiply,backendName:"cpu",kernelFunc:Lh};function Bh(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o,keepDims:i}=a;let c;xu(s,"sum"),c="bool"===s.dtype?Zu({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):Eu({inputs:{x:s},backend:n});const l=c.shape.length,u=r.util.parseAxisParam(o,c.shape),d=r.backend_util.getAxesPermutation(u,l);let h=u,p=c;null!=d&&(p=yd({inputs:{x:c},backend:n,attrs:{perm:d}}),h=r.backend_util.getInnerMostAxes(h.length,l)),r.backend_util.assertAxesAreInnerMostDims("sum",h,p.shape.length);const[f,m]=r.backend_util.computeOutAndReduceShapes(p.shape,h);let g=qu(n,f,r.backend_util.upcastType(p.dtype,"int32"));const y=r.util.sizeFromShape(m),b=n.data.get(g.dataId).values,v=n.data.get(p.dataId).values;for(let r=0;r<b.length;++r){const e=r*y;let t=0;for(let n=0;n<y;++n)t+=v[e+n];b[r]=t}if(i){const e=g;g=rd({inputs:{x:g},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(g.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(c),null!=d&&n.disposeIntermediateTensorInfo(p),g}const Wh={kernelName:r.Sum,backendName:"cpu",kernelFunc:Bh};const Vh={kernelName:r.Einsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:s}=a,o=t,{allDims:i,summedDims:c,idDims:l}=r.backend_util.decodeEinsumEquation(s,o.length);r.backend_util.checkEinsumDimSizes(i.length,l,o);const{path:u,steps:d}=r.backend_util.getEinsumComputePath(c,l),h=d.length;let p=null,f=i.length;const m=[];for(let g=0;g<h;++g){for(const e of d[g]){const{permutationIndices:t,expandDims:a}=r.backend_util.getEinsumPermutation(f,l[e]);let s;r.backend_util.isIdentityPermutation(t)?s=o[e]:(s=yd({inputs:{x:o[e]},backend:n,attrs:{perm:t}}),m.push(s));const i=s.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);r.util.arraysEqual(s.shape,i)||(s=rd({inputs:{x:s},backend:n,attrs:{shape:i}}),m.push(s)),null===p?p=s:(p=Lh({inputs:{a:s,b:p},backend:n}),m.push(p))}g<h-1&&(u[g]>=0&&(p=Bh({inputs:{x:p},backend:n,attrs:{axis:u[g]-(i.length-f),keepDims:!1}}),m.push(p)),f--)}for(const r of m)r!==p&&n.disposeIntermediateTensorInfo(r);return p}};const Uh={kernelName:r.EluGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:a,y:s}=t;xu([a,s],"eluGrad");const o=new Float32Array(r.util.sizeFromShape(s.shape)),i=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values;for(let r=0;r<i.length;++r){const e=i[r];o[r]=e>=0?c[r]:c[r]*(e+1)}return n.makeTensorInfo(s.shape,"float32",o)}},Gh=Fu((e,t)=>e===t?1:0),Hh=$u(r.Equal,Gh,null,"bool"),jh={kernelName:r.Equal,backendName:"cpu",kernelFunc:Hh},qh=r.backend_util.ERF_P,Yh=r.backend_util.ERF_A1,Kh=r.backend_util.ERF_A2,Xh=r.backend_util.ERF_A3,Zh=r.backend_util.ERF_A4,Qh=r.backend_util.ERF_A5,$h=Tu(r.Erf,e=>{const t=Math.sign(e),n=Math.abs(e),a=1/(1+qh*n);return t*(1-((((Qh*a+Zh)*a+Xh)*a+Kh)*a+Yh)*a*Math.exp(-n*n))}),Jh={kernelName:r.Erf,backendName:"cpu",kernelFunc:$h},ep=Su(e=>Math.exp(e)),tp=Nu(r.Exp,ep,"float32"),np={kernelName:r.Exp,backendName:"cpu",kernelFunc:tp};function ap(e){const{inputs:t,backend:n,attrs:a}=e,{input:s}=t,{dim:o}=a,i=s.shape.length,c=s.shape.slice();let l=o;return o<0&&(r.util.assert(-(i+1)<=o,()=>"Axis must be in the interval [".concat(-(i+1),", ").concat(i,"]")),l=i+o+1),c.splice(l,0,1),rd({inputs:{x:s},backend:n,attrs:{shape:c}})}const rp={kernelName:r.ExpandDims,backendName:"cpu",kernelFunc:ap},sp=Su(e=>Math.expm1(e)),op=Nu(r.Expm1,sp),ip={kernelName:r.Expm1,backendName:"cpu",kernelFunc:op},cp=Fu((e,t)=>e/t),lp=$u(r.RealDiv,cp),up={kernelName:r.RealDiv,backendName:"cpu",kernelFunc:lp},dp=Fu((e,t)=>e-t),hp=Ju((e,t,n,a)=>({real:e-n,imag:t-a})),pp=$u(r.Sub,dp,hp),fp={kernelName:r.Sub,backendName:"cpu",kernelFunc:pp};function mp(e,t,n){const a=e.shape,s=a[0],o=a[1],i=n.data.get(e.dataId),c=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[s,o],d=r.util.sizeFromShape(u),h=r.util.getTypedArrayFromDType("float32",d),p=r.util.getTypedArrayFromDType("float32",d);for(let y=0;y<s;y++){const e=Gd({inputs:{x:c},backend:n,attrs:{begin:[y,0],size:[1,o]}}),a=Gd({inputs:{x:l},backend:n,attrs:{begin:[y,0],size:[1,o]}}),s=Hu({inputs:{real:e,imag:a},backend:n}),{real:i,imag:u}=gp(s,t,n),d=r.backend_util.mergeRealAndImagArrays(i,u);for(let t=0;t<o;t++){const e=r.backend_util.getComplexWithIndex(d,t);h[y*o+t]=e.real,p[y*o+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s)}const f=n.makeTensorInfo(u,"float32",h),m=n.makeTensorInfo(u,"float32",p),g=Hu({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function gp(e,t,n){const a=r.util.sizeFromShape(e.shape),s=n.data.get(e.dataId),o=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0===((c=a)&c-1)){const s=yp(o,i,a,t,n),c=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(c,"float32",s.real),t=n.makeTensorInfo(c,"float32",s.imag),o=n.makeTensorInfo([],"float32",r.util.createScalarValue(a,"float32")),i=Eu({inputs:{x:o},backend:n}),l=up.kernelFunc({inputs:{a:e,b:o},backend:n}),u=up.kernelFunc({inputs:{a:t,b:i},backend:n}),d=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:d,imag:h}}return s}{const e=function(e,t,n){const a=new Float32Array(2*t);for(let s=0;s<t;s++){let o=0,i=0;for(let a=0;a<t;a++){const c=r.backend_util.exponent(s*a,t,n),l=r.backend_util.getComplexWithIndex(e,a);o+=l.real*c.real-l.imag*c.imag,i+=l.real*c.imag+l.imag*c.real}n&&(o/=t,i/=t),r.backend_util.assignToTypedArray(a,o,i,s)}return a}(r.backend_util.mergeRealAndImagArrays(o,i),a,t);return r.backend_util.splitRealAndImagArrays(e)}var c}function yp(e,t,n,a,s){if(1===n)return{real:e,imag:t};const o=r.backend_util.mergeRealAndImagArrays(e,t),i=n/2,c=r.backend_util.complexWithEvenIndex(o),l=c.real,u=c.imag,d=[l.length],h=s.makeTensorInfo(d,"float32",l),p=s.makeTensorInfo(d,"float32",u),f=Hu({inputs:{real:h,imag:p},backend:s}),m=r.backend_util.complexWithOddIndex(o),g=m.real,y=m.imag,b=[g.length],v=s.makeTensorInfo(b,"float32",g),x=s.makeTensorInfo(b,"float32",y),w=Hu({inputs:{real:v,imag:x},backend:s}),k=yp(l,u,i,a,s),S=k.real,T=k.imag,N=[S.length],I=s.makeTensorInfo(N,"float32",S),C=s.makeTensorInfo(N,"float32",T),E=Hu({inputs:{real:I,imag:C},backend:s}),A=yp(g,y,i,a,s),_=A.real,R=A.imag,F=[_.length],D=s.makeTensorInfo(F,"float32",_),O=s.makeTensorInfo(F,"float32",R),M=Hu({inputs:{real:D,imag:O},backend:s}),z=r.backend_util.exponents(n,a),L=[z.real.length],P=s.makeTensorInfo(L,"float32",z.real),B=s.makeTensorInfo(L,"float32",z.imag),W=Hu({inputs:{real:P,imag:B},backend:s}),V=Lh({inputs:{a:W,b:M},backend:s}),U=nd({inputs:{a:E,b:V},backend:s}),G=pp({inputs:{a:E,b:V},backend:s}),H=Yu({inputs:{input:U},backend:s}),j=Yu({inputs:{input:G},backend:s}),q=oh({inputs:{input:U},backend:s}),Y=oh({inputs:{input:G},backend:s}),K=ch({inputs:[H,j],backend:s,attrs:{axis:0}}),X=ch({inputs:[q,Y],backend:s,attrs:{axis:0}}),Z=s.data.get(K.dataId).values,Q=s.data.get(X.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(I),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(E),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(Y),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(X),{real:Z,imag:Q}}const bp={kernelName:r.FFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,s=r.util.sizeFromShape(a.shape),o=a.shape[a.shape.length-1],i=rd({inputs:{x:a},backend:n,attrs:{shape:[s/o,o]}}),c=mp(i,!1,n),l=rd({inputs:{x:c},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),l}};function vp(e){const{backend:t,attrs:n}=e,{shape:a,value:s,dtype:o}=n,i=o||r.util.inferDtype(s),c=r.util.getArrayFromDType(i,r.util.sizeFromShape(a));return function(e,t){e.fill(t)}(c,s),t.makeTensorInfo(a,i,c)}const xp={kernelName:r.Fill,backendName:"cpu",kernelFunc:vp};const wp={kernelName:r.FlipLeftRight,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:s}=t,o=a,i=r.util.getTypedArrayFromDType(s.dtype,r.util.sizeFromShape(s.shape)),[c,l,u,d]=s.shape,h=o.data.get(s.dataId).values;for(let r=0;r<c;r++){const e=r*u*l*d;for(let t=0;t<l;t++){const n=t*(u*d);for(let t=0;t<u;t++){const a=t*d;for(let r=0;r<d;r++){const s=Math.round(u-t-1),o=e+n+a+r;let c=h[o];if(s>=0&&s<u){c=h[e+n+s*d+r]}i[o]=c}}}}return{dataId:o.write(i,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},kp=Su(e=>Math.floor(e)),Sp=Nu(r.Floor,kp),Tp={kernelName:r.Floor,backendName:"cpu",kernelFunc:Sp},Np=Fu((e,t)=>Math.floor(e/t)),Ip=$u(r.FloorDiv,Np,null,"int32"),Cp={kernelName:r.FloorDiv,backendName:"cpu",kernelFunc:Ip};const Ep={kernelName:r.FusedConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=a;let m=uh({inputs:{x:r,filter:s},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h}});if(o){const e=m;if("NCHW"===u&&1===o.shape.length&&1!==o.shape[0]){const e=rd({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=nd({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=nd({inputs:{a:m,b:o},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===u&&"prelu"===p&&1===i.shape.length&&1!==i.shape[0]){const e=rd({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=Gu(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=Gu(n,m,p,i,f);n.disposeIntermediateTensorInfo(e)}return m}};const Ap={kernelName:r.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=a;let m=Ih({inputs:{x:r,filter:s},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h}});if(o){const e=m;m=nd({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=Gu(n,m,p,i,f),n.disposeIntermediateTensorInfo(e)}return m}};function _p(e,t,n,a,s,o,i,c,l){const u=(0,r.buffer)([a,o],n);for(let r=0;r<a;r++){const n=[];let a=0;for(let t=0;t<s;t++){const o=e[r*s+t];a+=o*i[t],n.push(o)}if(a<0||a>=l/o)throw new Error("Invalid indices: ".concat(n," does not index into ").concat(c));for(let e=0;e<o;e++)u.values[r*o+e]=t.get(...t.indexToLoc(a*o+e))}return u}const Rp={kernelName:r.GatherNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:s}=t,o=r.util.sizeFromShape(a.shape),i=s.shape,c=i[i.length-1],[l,u,d,h]=r.backend_util.prepareAndValidate(a,s);if(0===u)return n.makeTensorInfo(l,a.dtype,[]);const p=_p(n.data.get(s.dataId).values,n.bufferSync(a),a.dtype,u,c,d,h,a.shape,o);return n.makeTensorInfo(l,a.dtype,p.values)}};function Fp(e,t,n){const a=(0,r.buffer)(n,e.dtype);for(let r=0;r<a.size;++r){const n=a.indexToLoc(r).slice(),s=n[0],o=n[2],i=t.locToIndex([s,o]);n[2]=t.values[i];const c=e.locToIndex(n);0<=c&&c<e.values.length&&(a.values[r]=e.values[c])}return a}const Dp={kernelName:r.GatherV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,indices:o}=t,{axis:i,batchDims:c}=a;xu([s,o],"gatherV2");const l=r.util.parseAxisParam(i,s.shape)[0],u=n.data.get(o.dataId).values,d=s.shape[l];for(let x=0;x<u.length;++x){const e=u[x];r.util.assert(e<=d-1&&e>=0,()=>"GatherV2: the index value ".concat(e," is not in [0, ").concat(d-1,"]"))}let h=c;null==c&&(h=0);const p=r.util.sizeFromShape(o.shape),f=r.backend_util.segment_util.collectGatherOpShapeInfo(s,o,l,h),m=rd({inputs:{x:s},backend:n,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),g=rd({inputs:{x:o},backend:n,attrs:{shape:[f.batchSize,p/f.batchSize]}}),y=[f.batchSize,f.outerSize,p/f.batchSize,f.sliceSize],b=n.bufferSync(g),v=Fp(n.bufferSync(m),b,y);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(f.outputShape,v.dtype,v.values)}},Op=Fu((e,t)=>e>t?1:0),Mp=$u(r.Greater,Op,null,"bool"),zp={kernelName:r.Greater,backendName:"cpu",kernelFunc:Mp},Lp=Fu((e,t)=>e>=t?1:0),Pp=$u(r.GreaterEqual,Lp,null,"bool"),Bp={kernelName:r.GreaterEqual,backendName:"cpu",kernelFunc:Pp};const Wp={kernelName:r.IFFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,s=r.util.sizeFromShape(a.shape),o=a.shape[a.shape.length-1],i=rd({inputs:{x:a},backend:n,attrs:{shape:[s/o,o]}}),c=mp(i,!0,n),l=rd({inputs:{x:c},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),l}},Vp=Tu(r.IsFinite,e=>Number.isFinite(e)?1:0,"bool"),Up={kernelName:r.IsFinite,backendName:"cpu",kernelFunc:Vp},Gp=Tu(r.IsInf,e=>Math.abs(e)===1/0?1:0,"bool"),Hp={kernelName:r.IsInf,backendName:"cpu",kernelFunc:Gp},jp=Tu(r.IsNan,e=>Number.isNaN(e)?1:0,"bool"),qp={kernelName:r.IsNan,backendName:"cpu",kernelFunc:jp},Yp=Fu((e,t)=>e<t?1:0),Kp=$u(r.Less,Yp,null,"bool"),Xp={kernelName:r.Less,backendName:"cpu",kernelFunc:Kp},Zp=Fu((e,t)=>e<=t?1:0),Qp=$u(r.LessEqual,Zp,null,"bool"),$p={kernelName:r.LessEqual,backendName:"cpu",kernelFunc:Qp};function Jp(e,t,n){const a=(t-e)/(n-1),s=r.util.makeZerosTypedArray(n,"float32");s[0]=e;for(let r=1;r<s.length;r++)s[r]=s[r-1]+a;return s}const ef={kernelName:r.LinSpace,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,o=Jp(a,r,s);return t.makeTensorInfo([o.length],"float32",o)}},tf=Su(e=>Math.log(e)),nf=Nu(r.Log,tf),af={kernelName:r.Log,backendName:"cpu",kernelFunc:nf},rf=Tu(r.Log1p,e=>Math.log1p(e)),sf={kernelName:r.Log1p,backendName:"cpu",kernelFunc:rf},of=Fu((e,t)=>e&&t),cf=$u(r.LogicalAnd,of,null,"bool"),lf={kernelName:r.LogicalAnd,backendName:"cpu",kernelFunc:cf},uf=Tu(r.LogicalNot,e=>e?0:1,"bool"),df={kernelName:r.LogicalNot,backendName:"cpu",kernelFunc:uf},hf=Fu((e,t)=>e||t),pf=$u(r.LogicalOr,hf,null,"bool"),ff={kernelName:r.LogicalOr,backendName:"cpu",kernelFunc:pf};const mf={kernelName:r.LRN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{depthRadius:o,bias:i,alpha:c,beta:l}=a;xu(s,"LRN");const u=s.shape[3],d=u-1,h=n.data.get(s.dataId).values,p=r.util.sizeFromShape(s.shape),f=new Float32Array(p);function m(e){const t=e%u;let n=e-t+Math.max(0,t-o);const a=e-t+Math.min(t+o,d);let r=0;for(;n<=a;n++){const e=h[n];r+=e*e}return r}for(let r=0;r<p;r++){const e=m(r),t=h[r]*Math.pow(i+c*e,-l);f[r]=t}return n.makeTensorInfo(s.shape,s.dtype,f)}};const gf={kernelName:r.LRNGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,y:o,dy:i}=t,{depthRadius:c,bias:l,alpha:u,beta:d}=a;xu(i,"LRNGrad");const h=r.util.sizeFromShape(i.shape),p=i.shape[3],f=n.data.get(i.dataId).values,m=n.data.get(s.dataId).values,g=n.data.get(o.dataId).values,y=new Float32Array(h),b=h;for(let r=0;r<b;r++){const e=r%p,t=r-e+Math.max(0,e-c),n=r-e+Math.min(p,e+c+1);let a=0;for(let r=t;r<n;r++)a+=Math.pow(m[r],2);a=u*a+l;for(let s=t;s<n;s++){let e=-2*u*d*m[s]*g[r]/a;r===s&&(e+=Math.pow(a,-d)),e*=f[r],y[s]+=e}}return n.makeTensorInfo(i.shape,s.dtype,y)}};function yf(e,t,n,a){const s=r.util.getTypedArrayFromDType(a,r.util.sizeFromShape(n));for(let r=0;r<s.length;++r){const n=r*t;let a=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>a)&&(a=t)}s[r]=a}return s}function bf(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{reductionIndices:o,keepDims:i}=a,c=n;let l=s.shape;const u=l.length,d=r.util.parseAxisParam(o,l);let h=d;const p=r.backend_util.getAxesPermutation(h,u);let f=c.data.get(s.dataId).values;if(null!=p){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[p[t]];f=gd(f,l,s.dtype,p,e),h=r.backend_util.getInnerMostAxes(h.length,u),l=e}xu(s,"max"),r.backend_util.assertAxesAreInnerMostDims("max",h,u);const[m,g]=r.backend_util.computeOutAndReduceShapes(l,h),y=yf(f,r.util.sizeFromShape(g),m,s.dtype),b=c.write(y,m,s.dtype);let v=m;if(i){v=r.backend_util.expandShapeToKeepDim(m,d)}return{dataId:b,shape:v,dtype:s.dtype}}const vf={kernelName:r.Max,backendName:"cpu",kernelFunc:bf},xf=Fu((e,t)=>Math.max(e,t)),wf=$u(r.Maximum,xf),kf={kernelName:r.Maximum,backendName:"cpu",kernelFunc:wf};const Sf={kernelName:r.MaxPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;xu(s,"maxPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(i,1),()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'"));const u=r.backend_util.computePool2DInfo(s.shape,o,i,1,c,l);let d;if(1===u.filterWidth&&1===u.filterHeight&&r.util.arraysEqual(u.inShape,u.outShape))d=Eu({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=r.util.computeStrides(s.shape),a=Od(e,s.shape,s.dtype,t,u,"max");d=n.makeTensorInfo(u.outShape,s.dtype,a.values)}return d}};const Tf={kernelName:r.MaxPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{filterSize:o,strides:i,pad:c,dimRoundingMode:l,dataFormat:u}=a;xu(s,"maxPool3d");const d=r.backend_util.computePool3DInfo(s.shape,o,i,1,c,l,u),h=zd(n.data.get(s.dataId).values,s.shape,s.dtype,r.util.computeStrides(s.shape),d,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const Nf={kernelName:r.MaxPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:o}=t,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=a;xu([s,o],"maxPool3DGrad");const d=r.backend_util.computePool3DInfo(o.shape,i,c,1,l,u),h=function(e,t){const n=(0,r.buffer)(t.outShape,"int32"),a=t.strideDepth,s=t.strideHeight,o=t.strideWidth,i=t.dilationDepth,c=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let r=0;r<t.batchSize;++r)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*a-p;let v=b;for(;v<0;)v+=i;const x=Math.min(t.inDepth,u+b);for(let a=0;a<t.outHeight;++a){const u=a*s-f;let p=u;for(;p<0;)p+=c;const w=Math.min(t.inHeight,d+u);for(let s=0;s<t.outWidth;++s){const f=s*o-m;let k=f;for(;k<0;)k+=l;const S=Math.min(t.inWidth,h+f);let T=Number.NEGATIVE_INFINITY,N=-1;for(let t=v;t<x;t+=i){const n=t-b;for(let a=p;a<w;a+=c){const s=a-u;for(let o=k;o<S;o+=l){const i=o-f,c=e.get(r,t,a,o,g);c>=T&&(T=c,N=n*d*h+s*d+i)}}}n.set(N,r,y,a,s,g)}}}return n}(n.bufferSync(o),d),p=d.strideDepth,f=d.strideHeight,m=d.strideWidth,g=d.dilationDepth,y=d.dilationHeight,b=d.dilationWidth,v=d.effectiveFilterDepth,x=d.effectiveFilterHeight,w=d.effectiveFilterWidth,k=v-1-d.padInfo.front,S=w-1-d.padInfo.left,T=x-1-d.padInfo.top,N=(0,r.buffer)(o.shape,"float32"),I=n.bufferSync(s);for(let r=0;r<d.batchSize;++r)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inDepth;++t)for(let n=0;n<d.inHeight;++n)for(let a=0;a<d.inWidth;++a){const s=t-k,o=n-T,i=a-S;let c=0;for(let t=0;t<v;t+=g){const n=(s+t)/p;if(!(n<0||n>=d.outDepth||Math.floor(n)!==n))for(let a=0;a<x;a+=y){const s=(o+a)/f;if(!(s<0||s>=d.outHeight||Math.floor(s)!==s))for(let o=0;o<w;o+=b){const l=(i+o)/m;if(l<0||l>=d.outWidth||Math.floor(l)!==l)continue;const u=v*x*w-1-h.get(r,n,s,l,e)===t*x*w+a*w+o?1:0;if(0===u)continue;c+=I.get(r,n,s,l,e)*u}}}N.set(c,r,t,n,a,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};const If={kernelName:r.MaxPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:o,output:i}=t,c=o;xu([o,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:d,dimRoundingMode:h}=a,p=r.backend_util.computePool2DInfo(c.shape,l,u,1,d,h),f=n.data.get(c.dataId).values,m=(0,r.buffer)(p.outShape,c.dtype,Md(f,c.shape,c.dtype,p).values),g=p.strideHeight,y=p.strideWidth,b=p.dilationHeight,v=p.dilationWidth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,k=w-1-p.padInfo.left,S=x-1-p.padInfo.top,T=(0,r.buffer)(c.shape,"float32"),N=n.data.get(s.dataId).values,I=(0,r.buffer)(s.shape,"float32",N);for(let r=0;r<p.batchSize;++r)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inHeight;++t)for(let n=0;n<p.inWidth;++n){const a=t-S,s=n-k;let o=0;for(let t=0;t<x;t+=b){const n=(a+t)/g;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let a=0;a<w;a+=v){const i=(s+a)/y;if(i<0||i>=p.outWidth||Math.floor(i)!==i)continue;const c=x*w-1-m.get(r,n,i,e)===t*w+a?1:0;if(0===c)continue;o+=I.get(r,n,i,e)*c}}T.set(o,r,t,n,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};const Cf={kernelName:r.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:s}=t,{filterSize:o,strides:i,pad:c,includeBatchInIndex:l}=n,u=a;xu(s,"MaxPoolWithArgmax");const d=u.data.get(s.dataId).values,h=r.backend_util.computePool2DInfo(s.shape,o,i,[1,1],c),[p,f]=function(e,t,n,a,s){const o=Od(e,0,n,r.util.computeStrides(t),s,"max"),i=Md(e,t,n,s,!0,a);return[o.values,i.values]}(d,s.shape,s.dtype,l,h),m=u.write(p,h.outShape,s.dtype),g=u.write(f,h.outShape,s.dtype);return[{dataId:m,shape:h.outShape,dtype:s.dtype},{dataId:g,shape:h.outShape,dtype:"int32"}]}};const Ef={kernelName:r.Mean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o,keepDims:i}=a,c=r.util.parseAxisParam(o,s.shape),l=r.backend_util.computeOutAndReduceShapes(s.shape,c)[1],u=r.util.sizeFromShape(l),d=[],h=n.makeTensorInfo([],"float32",new Float32Array([u]));d.push(h);const p=Zu({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});d.push(p);const f=lp({inputs:{a:p,b:h},backend:n});d.push(f);const m=Bh({inputs:{x:f},backend:n,attrs:{axis:o,keepDims:i}});return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),m}};const Af={kernelName:r.Min,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o,keepDims:i}=a;xu(s,"min");const c=r.util.parseAxisParam(o,s.shape);let l=c;const u=r.backend_util.getAxesPermutation(l,s.shape.length);let d=s;null!=u&&(d=yd({inputs:{x:s},backend:n,attrs:{perm:u}}),l=r.backend_util.getInnerMostAxes(l.length,s.shape.length)),r.backend_util.assertAxesAreInnerMostDims("min",l,d.shape.length);const[h,p]=r.backend_util.computeOutAndReduceShapes(d.shape,l),f=r.util.sizeFromShape(p),m=r.util.makeZerosTypedArray(r.util.sizeFromShape(h),d.dtype),g=n.data.get(d.dataId).values;for(let r=0;r<m.length;++r){const e=r*f;let t=g[e];for(let n=0;n<f;++n){const a=g[e+n];(Number.isNaN(a)||a<t)&&(t=a)}m[r]=t}null!=u&&n.disposeIntermediateTensorInfo(d);const y=n.makeTensorInfo(h,d.dtype,m);if(i){const e=rd({inputs:{x:y},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(h,c)}});return n.disposeIntermediateTensorInfo(y),e}return y}},_f=Fu((e,t)=>Math.min(e,t)),Rf=$u(r.Minimum,_f),Ff={kernelName:r.Minimum,backendName:"cpu",kernelFunc:Rf};const Df={kernelName:r.MirrorPad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{paddings:o,mode:i}=a;xu(s,"mirrorPad");const c=o.map((e,t)=>e[0]+s.shape[t]+e[1]),l=o.map(e=>e[0]),u=o.map((e,t)=>e[0]+s.shape[t]),d="reflect"===i?0:1,h=n.data.get(s.dataId).values,p=s.shape.length,f=r.util.computeStrides(s.shape),m=r.util.sizeFromShape(c),g=c.length,y=r.util.computeStrides(c),b=r.util.getTypedArrayFromDType(s.dtype,m);for(let v=0;v<m;v++){let e=r.util.indexToLoc(v,g,y);for(let n=0;n<g;n++)e[n]<l[n]?e[n]=2*l[n]-e[n]-d:e[n]>=u[n]&&(e[n]=2*(u[n]-1)-e[n]+d);e=e.map((e,t)=>e-l[t]);const t=r.util.locToIndex(e,p,f);b[v]=h[t]}return{dataId:n.write(b,c,s.dtype),shape:c,dtype:s.dtype}}},Of=Fu((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),Mf=$u(r.Mod,Of),zf={kernelName:r.Mod,backendName:"cpu",kernelFunc:Mf};function Lf(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{dim:o}=a,i=s.shape.length;let c=o;if(-1===c&&(c=i-1),c!==i-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(i," and dim was ").concat(c));const l=r.util.parseAxisParam([c],s.shape),u=bf({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),d=r.backend_util.expandShapeToKeepDim(u.shape,l),h=rd({inputs:{x:u},backend:n,attrs:{shape:d}}),p=pp({inputs:{a:s,b:h},backend:n}),f=tp({inputs:{x:p},backend:n}),m=Bh({inputs:{x:f},backend:n,attrs:{axis:l,keepDims:!1}}),g=rd({inputs:{x:m},backend:n,attrs:{shape:d}}),y=lp({inputs:{a:f,b:g},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}const Pf={kernelName:r.Softmax,backendName:"cpu",kernelFunc:Lf};const Bf={kernelName:r.Multinomial,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{numSamples:o,seed:i,normalized:c}=a;xu(s,"multinomial");const l=c?s:Lf({inputs:{logits:s},backend:n,attrs:{dim:-1}}),u=l.shape[0],d=l.shape[1],h=n.data.get(l.dataId).values,p=[u,o],f=r.util.makeZerosTypedArray(r.util.sizeFromShape(p),"int32");for(let r=0;r<u;++r){const e=r*d,t=new Float32Array(d-1);t[0]=h[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+h[e+r];const n=Gl.alea(i.toString()),a=r*o;for(let r=0;r<o;++r){const e=n();f[a+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){f[a+r]=n;break}}}return c||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",f)}};function Wf(e,t,n){const a=r.util.createScalarValue(-1,n);return Mh([],t,a,e,n)}const Vf={kernelName:r.Neg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;xu(a,"neg");const r=n.data.get(a.dataId).values,[s,o]=Wf(r,a.shape,a.dtype);return n.makeTensorInfo(o,a.dtype,s)}},Uf=r.kernel_impls.nonMaxSuppressionV3Impl;const Gf={kernelName:r.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=a;xu(r,"NonMaxSuppression");const l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,{selectedIndices:d}=Uf(l,u,o,i,c);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},Hf=r.kernel_impls.nonMaxSuppressionV4Impl;const jf={kernelName:r.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=a;xu(r,"NonMaxSuppressionPadded");const u=n.data.get(r.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:h,validOutputs:p}=Hf(u,d,o,i,c,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},qf=r.kernel_impls.nonMaxSuppressionV5Impl;const Yf={kernelName:r.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=a;xu(r,"NonMaxSuppressionWithScore");const u=n.data.get(r.dataId).values,d=n.data.get(s.dataId).values,h=o,p=i,f=c,m=l,{selectedIndices:g,selectedScores:y}=qf(u,d,h,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},Kf=Fu((e,t)=>e!==t?1:0),Xf=$u(r.NotEqual,Kf,null,"bool"),Zf={kernelName:r.NotEqual,backendName:"cpu",kernelFunc:Xf};const Qf={kernelName:r.OneHot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:s}=t,{dtype:o,depth:i,onValue:c,offValue:l}=a;xu(s,"oneHot");const u=r.util.sizeFromShape(s.shape),d=new Float32Array(u*i);d.fill(l);const h=n.data.get(s.dataId).values;for(let r=0;r<u;++r)h[r]>=0&&h[r]<i&&(d[r*i+h[r]]=c);return n.makeTensorInfo([...s.shape,i],o,d)}};function $f(e){const{inputs:t,backend:n}=e,{x:a}=t;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){const e=Yu({inputs:{input:a},backend:n}),t=$f({inputs:{x:e},backend:n}),r=oh({inputs:{input:a},backend:n}),s=$f({inputs:{x:r},backend:n}),o=Hu({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}return vp({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}const Jf={kernelName:r.ZerosLike,backendName:"cpu",kernelFunc:$f};const em={kernelName:r.OnesLike,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=Yu({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=oh({inputs:{input:r},backend:a}),o=$f({inputs:{x:s},backend:a}),i=Hu({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}return vp({backend:a,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function tm(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a;if(1===t.length)return ap({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const o=t[0].shape,i=t[0].dtype;t.forEach(e=>{r.util.assertShapesMatch(o,e.shape,"All tensors passed to stack must have matching shapes"),r.util.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const c=[],l=ch({inputs:t.map(e=>{const t=ap({inputs:{input:e},backend:n,attrs:{dim:s}});return c.push(t),t}),backend:n,attrs:{axis:s}});return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}const nm={kernelName:r.Pack,backendName:"cpu",kernelFunc:tm};const am={kernelName:r.PadV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{paddings:o,constantValue:i}=a;xu(s,"pad");const c=o.map((e,t)=>e[0]+s.shape[t]+e[1]),l=o.map(e=>e[0]),u=n.data.get(s.dataId).values,d=r.util.sizeFromShape(s.shape),h=s.shape.length,p=r.util.computeStrides(s.shape),f=r.util.sizeFromShape(c),m=c.length,g=r.util.computeStrides(c),y=r.util.getTypedArrayFromDType(s.dtype,f);0!==i&&y.fill(i);for(let b=0;b<d;b++){const e=r.util.indexToLoc(b,h,p).map((e,t)=>e+l[t]);y[r.util.locToIndex(e,m,g)]=u[b]}return{dataId:n.write(y,c,s.dtype),shape:c,dtype:s.dtype}}},rm=Fu((e,t)=>Math.pow(e,t)),sm=$u(r.Pow,rm),om={kernelName:r.Pow,backendName:"cpu",kernelFunc:sm};function im(e,t,n,a){const[s,o]=r.backend_util.computeOutAndReduceShapes(e,a),i=(0,r.upcastType)(t,"int32"),c=r.util.makeZerosTypedArray(r.util.sizeFromShape(s),i),l=r.util.sizeFromShape(o);for(let r=0;r<c.length;++r){const e=r*l;let t=1;for(let a=0;a<l;++a)t*=n[e+a];c[r]=t}return{outVals:c,outShape:s,outDtype:i}}const cm={kernelName:r.Prod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o,keepDims:i}=a;xu(s,"prod");const c=s.shape.length,l=r.util.parseAxisParam(o,s.shape),u=r.backend_util.getAxesPermutation(l,c);let d=l,h=s;const p=[];null!=u&&(h=yd({inputs:{x:s},backend:n,attrs:{perm:u}}),p.push(h),d=r.backend_util.getInnerMostAxes(d.length,c));const f=n.data.get(h.dataId).values,{outVals:m,outShape:g,outDtype:y}=im(h.shape,h.dtype,f,d);let b=g;return i&&(b=r.backend_util.expandShapeToKeepDim(g,l)),p.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(b,y,m)}};function lm(e,t,n,a){const r=[];let s=0;const o=t.length-1+n.length,i=new Array(o).fill(null).map(()=>[0]);!function(e,t){for(let n=0;n<e.length;++n){const a=e[n],r=n===e.length-1?t:e[n+1].length;if(0===a.length)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<a.length;++e)if(a[e-1]>a[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,a);let c=1;for(let l=0;l<t.length-1;++l){c*=t[l];const e=t[l+1];for(let t=1;t<c+1;++t)i[l].push(t*e)}for(let l=0;l<e.length;++l){let a=e[l],o=e[l]+1;for(let e=0;e<n.length;++e){const r=n[e],s=e+t.length-1;if(s>=0){const e=i[s],t=e[e.length-1]-r[a];for(let n=a;n<o;++n)i[s].push(r[n+1]+t)}a=r[a],o=r[o]}o!==a&&(r.push([a,o]),s+=o-a)}return{outSplits:i,valueSlices:r,numValues:s}}function um(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let a=t;a<e.length;a++)n[t-1]*=e[a];return n}function dm(e,t,n,a,s){const o=t.slice();o[0]=s;const i=r.util.getArrayFromDType(n,r.util.sizeFromShape(o)),c=e.length;return function(e,t,n,a,r,s){const o=um(t,2)[1],i=um(s,2)[1];let c=0;for(const l of n)for(let t=l[0];t<l[1];++t){for(let n=0;n<a;++n)r[c*i+n]=e[t*o+n];++c}}(e,t,a,0===c?0:c/t[0],i,o),[i,o]}function hm(e,t,n,a,s,o,i,c){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach((e,a)=>{if(e<0||e>=n){const s=r.util.indexToLoc(a,t.length,r.util.computeStrides(t)).join(",");throw new Error("indices[".concat(s,"] = ").concat(e," is not in [0, ").concat(n,")"))}})}(o,i,t[0][0]-1),0===a.length)throw new Error("params.rank must be nonzero");const l=a[0],{outSplits:u,valueSlices:d,numValues:h}=lm(o,i,e,l),p=function(e){const t=[];for(let n=0;n<e.length;++n){const a=e[n].length,s=r.util.getArrayFromDType("int32",a);t.push(s),e[n].forEach((e,t)=>s[t]=e)}return t}(u),f=dm(n,a,s,d,h);return[p,f[0],f[1]]}const pm={kernelName:r.RaggedGather,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:o}=t,{outputRaggedRank:i}=a,c=r.map(e=>n.data.get(e.dataId).values),l=r.map(e=>e.shape),u=n.data.get(s.dataId).values,d=n.data.get(o.dataId).values,[h,p,f]=hm(c,l,u,s.shape,s.dtype,d,o.shape),m=h.map(e=>n.makeTensorInfo([e.length],"int32",e)),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}},fm=2147483647;function mm(e,t,n,a,s,o,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const c=0===t.length,l=0===s.length,u=0===i.length,d=[];c||d.push(t[0]),l||d.push(s[0]),u||d.push(i[0]);for(let r=1;r<d.length;++r)if(d[r]!==d[r-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===d.length?1:d[0],p=r.util.getArrayFromDType("int32",h+1);p[0]=0;for(let r=0;r<h;++r){const t=c?e[0]:e[r],n=l?a[0]:a[r],s=u?o[0]:o[r];if(0===s)throw new Error("Requires delta != 0");let i;if(s>0&&n<t||s<0&&n>t)i=0;else if(i=Math.ceil(Math.abs((n-t)/s)),i>fm)throw new Error("Requires ((limit - start) / delta) <= ".concat(fm));p[r+1]=p[r]+i}const f=p[h],m=r.util.getArrayFromDType(n,f);let g=0;for(let r=0;r<h;++r){const t=p[r+1]-p[r];let n=c?e[0]:e[r];const a=u?o[0]:o[r];for(let e=0;e<t;++e)m[g++]=n,n+=a}return[p,m]}const gm={kernelName:r.RaggedRange,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=mm(o,a.shape,a.dtype,i,r.shape,c,s.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};var ym=r.backend_util.RowPartitionType;class bm{constructor(e,t,n,a,s,o,i,c,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=a,this.valuesDType=s,this.defaultValue=o,this.defaultValueShape=i,this.rowPartitionValues=c,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=r.backend_util.getRowPartitionTypesHelper(u),this.raggedRank=r.backend_util.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===ym.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===ym.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case ym.VALUE_ROWIDS:return bm.getMaxWidthValueRowID(t);case ym.ROW_SPLITS:return bm.getMaxWidthRowSplit(t);default:throw new Error("Cannot handle partition type ".concat(ym[this.getRowPartitionTypeByDimension(e-1)]))}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let a=0;a<t-1;++a){const t=e[a+1]-e[a];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,a=e[0],r=0;for(let s=1;s<t;++s){const t=e[s];t!==a&&(a=t,r=Math.max(s-n,r),n=s)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return xm(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;r.backend_util.validateDefaultValueShape(n,t);const a=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=r.backend_util.combineRaggedTensorToTensorShapes(this.raggedRank,a,t);s[0]<0&&(s[0]=e);for(let r=1;r<=this.raggedRank;++r)s[r]<0&&(s[r]=this.getMaxWidth(r));return s}calculateFirstParentOutputIndex(e,t,n){const a=Math.min(e,n),s=[];let o=0;for(let r=0;r<a;++r,o+=t)s.push(o);for(let r=a;r<e;++r)s.push(-1);return r.util.assert(s.length===e,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(e,t,n,a){const r=e.length,s=[];for(let o=0;o<r-1;++o){const r=e[o+1]-e[o];let i=Math.min(a,r),c=t[o];-1===c&&(i=0);for(let e=0;e<i;++e)s.push(c),c+=n;for(let e=0;e<r-i;++e)s.push(-1)}if(r>0&&s.length!==e[r-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,a){const r=e.length,s=[];if(0===r)return[];let o=0,i=e[0];if(i>=t.length)throw new Error("Got currentValueRowId=".concat(i,", which is not less than ").concat(t.length));let c=t[i];s.push(c);for(let l=1;l<r;++l){const r=e[l];if(r===i)c>=0&&(++o,o<a?c+=n:c=-1);else{if(o=0,i=r,r>=t.length)throw new Error("Got nextValueRowId=".concat(r," which is not less than ").concat(t.length));c=t[r]}s.push(c)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,a){const r=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case ym.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,a);case ym.ROW_SPLITS:if(r.length-1>t.length)throw new Error("Row partition size is greater than output size: ".concat(r.length-1," > ").concat(t.length));return this.calculateOutputIndexRowSplit(r,t,n,a);default:throw new Error("Unsupported partition type: ".concat(ym[s]))}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case ym.FIRST_DIM_SIZE:return e[0];case ym.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case ym.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error("Cannot handle type ".concat(ym[t]))}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let r=n.length-2;r>=0;--r)n[r]=n[r+1]*t[r+1];const a=xm(t,!1),s=r.util.getArrayFromDType(this.valuesDType,r.util.sizeFromShape(a));if(n[0]*t[0]>0){let r=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){r=this.calculateOutputIndex(e-1,r,n[e],t[e])}this.setOutput(this.raggedRank,r,s,a)}return[a,s]}setOutput(e,t,n,a){if(0===n.length)return;const s=this.values,o=n;let i=a.slice();i=i.slice(e+1);const c=r.util.sizeFromShape(i),l=t.length;let u=this.defaultValue;if(u.length!==c&&1!==u.length){const e=this.defaultValueShape;(0,r.tidy)(()=>{const t=(0,r.reshape)(u,e),n=(0,r.broadcastTo)(t,i);u=n.dataSync()})}let d=0,h=0,p=0;for(let r=0;r<=l;++r){let e=r<l?t[r]:-1;if(e!==p){if(h<p){const e=s.subarray(d*c);vm(o.subarray(h*c),e,(p-h)*c)}if(r>=l){const t=n.length;e=Math.floor(t/c)}if(e>p)if(1===this.defaultValue.length)o.subarray(p*c,e*c).fill(this.defaultValue[0]),p=e;else for(;e>p;){vm(o.slice(p*c),u,c),++p}e<0?(d=r+1,h=p):(d=r,h=p,p=h+1)}else++p}}}function vm(e,t,n){for(let a=0;a<n;a++)e[a]=t[a]}function xm(e,t){const n=[];for(let a of e){if(a<0){if(!t)throw new Error("Dimension ".concat(a," must be >= 0"));if(a<-1)throw new Error("Dimension ".concat(a," must be >= -1"));a=-1}n.push(a)}return n}function wm(e,t,n,a,r,s,o,i,c,l){return new bm(e,t,n,a,r,s,o,i,c,l).compute()}const km={kernelName:r.RaggedTensorToTensor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:c}=a,l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,d=n.data.get(o.dataId).values,h=i.map(e=>n.data.get(e.dataId).values),p=i.map(e=>e.shape),[f,m]=wm(l,r.shape,u,s.shape,s.dtype,d,o.shape,h,p,c);return n.makeTensorInfo(f,s.dtype,m)}};function Sm(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return r.util.makeZerosTypedArray(0,a);const s=Math.abs(Math.ceil((t-e)/n)),o=r.util.makeZerosTypedArray(s,a);t<e&&1===n&&(n=-1),o[0]=e;for(let r=1;r<o.length;r++)o[r]=o[r-1]+n;return o}const Tm={kernelName:r.Range,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,dtype:s,step:o}=n,i=Sm(a,r,o,s);return t.makeTensorInfo([i.length],s,i)}},Nm=Tu(r.Reciprocal,e=>1/e),Im={kernelName:r.Reciprocal,backendName:"cpu",kernelFunc:Nm};const Cm={kernelName:r.ResizeBilinear,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s}=t,{alignCorners:o,halfPixelCenters:i,size:c}=a;xu(s,"resizeBilinear");const l=r.util.computeStrides(s.shape),[u,d]=c,[h,p,f,m]=s.shape,g=n.data.get(s.dataId).values,y=new Float32Array(r.util.sizeFromShape([h,u,d,m])),b=[o&&u>1?p-1:p,o&&d>1?f-1:f],v=[o&&u>1?u-1:u,o&&d>1?d-1:d];let x=0;const w=b[0]/v[0],k=b[1]/v[1];for(let r=0;r<h;r++)for(let e=0;e<u;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),a=t-n,s=Math.min(p-1,Math.ceil(t)),o=r*l[0]+n*l[1],c=r*l[0]+s*l[1];for(let e=0;e<d;e++){let t;t=i?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(f-1,Math.ceil(t)),u=o+n*l[2],d=c+n*l[2],h=o+s*l[2],p=c+s*l[2];for(let e=0;e<m;e++){const t=g[u+e],n=g[d+e],s=t+(g[h+e]-t)*r,o=s+(n+(g[p+e]-n)*r-s)*a;y[x++]=o}}}return n.makeTensorInfo([h,u,d,m],"float32",y)}};const Em={kernelName:r.ResizeBilinearGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s,dy:o}=t,{alignCorners:i}=a;xu([o,s],"resizeBilinearGrad");const c=r.util.computeStrides(s.shape),[l,u,d,h]=s.shape,[,p,f]=o.shape,m=new Float32Array(l*u*d*h),g=[i&&p>1?u-1:u,i&&f>1?d-1:d],y=[i&&p>1?p-1:p,i&&f>1?f-1:f],b=g[0]/y[0],v=g[1]/y[1],x=n.data.get(o.dataId).values;let w=0;for(let r=0;r<l;r++){const e=r*c[0];for(let t=0;t<p;t++){const n=t*b,a=Math.floor(n),r=Math.min(Math.ceil(n),u-1),s=e+a*c[1],o=e+r*c[1],i=n-a,l=1-i;for(let e=0;e<f;e++){const t=e*v,n=Math.floor(t),a=Math.min(Math.ceil(t),d-1),r=t-n,u=1-r,p=s+n*c[2],f=s+a*c[2],g=o+n*c[2],y=o+a*c[2],b=l*u,k=l*r,S=i*u,T=i*r;for(let e=0;e<h;e++){const t=x[w++];m[p+e]+=t*b,m[f+e]+=t*k,m[g+e]+=t*S,m[y+e]+=t*T}}}}return n.makeTensorInfo([l,d,u,h],"float32",m)}};const Am={kernelName:r.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s}=t,{alignCorners:o,halfPixelCenters:i,size:c}=a;xu(s,"resizeNearestNeighbor");const l=r.util.computeStrides(s.shape),[u,d]=c,[h,p,f,m]=s.shape,g=n.data.get(s.dataId).values,y=new Float32Array(h*u*d*m),b=[o&&u>1?p-1:p,o&&d>1?f-1:f],v=[o&&u>1?u-1:u,o&&d>1?d-1:d],x=b[0]/v[0],w=b[1]/v[1];let k=0;for(let r=0;r<h;r++){const e=r*l[0];for(let t=0;t<u;t++){const n=i?x*(t+.5):x*t;let a=Math.min(p-1,o?Math.round(n):Math.floor(n));i&&(a=Math.max(0,a));const r=e+a*l[1];for(let e=0;e<d;e++){const t=i?w*(e+.5):w*e;let n=Math.min(f-1,o?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const a=r+n*l[2];for(let e=0;e<m;e++){const t=g[a+e];y[k++]=t}}}}return n.makeTensorInfo([h,u,d,m],s.dtype,y)}};const _m={kernelName:r.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s,dy:o}=t,{alignCorners:i}=a;xu([o,s],"resizeNearestNeighborGrad");const c=r.util.computeStrides(s.shape),l=r.util.computeStrides(o.shape),[u,d,h,p]=s.shape,[,f,m]=o.shape,g=new Float32Array(u*d*h*p),y=n.data.get(o.dataId).values,b=[i&&f>1?d-1:d,i&&m>1?h-1:h],v=[i&&f>1?f-1:f,i&&m>1?m-1:m],x=b[0]/v[0],w=b[1]/v[1],k=1/x,S=1/w,T=2*Math.ceil(k)+2,N=2*Math.ceil(S)+2;for(let r=0;r<u;r++){const e=r*c[0];for(let t=0;t<d;t++){const n=e+t*c[1],a=Math.floor(t*k),r=Math.floor(a-T/2);for(let s=0;s<h;s++){const a=n+s*c[2],o=Math.floor(s*S),u=Math.floor(o-N/2);for(let n=0;n<p;n++){let o=0;for(let a=0;a<T;a++){const c=a+r;if(c<0||c>=f)continue;const p=e+c*l[1],g=c*x;if(t===Math.min(d-1,i?Math.round(g):Math.floor(g)))for(let e=0;e<N;e++){const t=e+u;if(t<0||t>=m)continue;const a=p+t*l[2],r=t*w;s===Math.min(h-1,i?Math.round(r):Math.floor(r))&&(o+=y[a+n])}}g[a+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,g)}};const Rm={kernelName:r.Reverse,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{dims:o}=a;xu(s,"reverse");const i=s.shape.length,c=r.util.parseAxisParam(o,s.shape);if(0===i)return Eu({inputs:{x:s},backend:n});const l=new r.TensorBuffer(s.shape,s.dtype),u=n.bufferSync(s);for(let r=0;r<l.size;r++){const e=l.indexToLoc(r),t=e.slice();c.forEach(e=>t[e]=s.shape[e]-1-t[e]),l.set(u.get(...t),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},Fm={kernelName:r.RotateWithOffset,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:s}=t,{radians:o,fillValue:i,center:c}=n,l=a,u=r.util.getTypedArrayFromDType(s.dtype,r.util.sizeFromShape(s.shape)),[d,h,p,f]=s.shape,[m,g]=r.backend_util.getImageCenter(c,h,p),y=Math.sin(o),b=Math.cos(o),v=l.data.get(s.dataId).values;for(let r=0;r<d;r++){const e=r*p*h*f;for(let t=0;t<h;t++){const n=t*(p*f);for(let a=0;a<p;a++){const r=a*f;for(let s=0;s<f;s++){const o=[d,t,a,s],c=o[2],l=o[1];let x=(c-m)*b-(l-g)*y,w=(c-m)*y+(l-g)*b;x=Math.round(x+m),w=Math.round(w+g);let k=i;if("number"!==typeof i&&(k=3===s?255:i[s]),x>=0&&x<p&&w>=0&&w<h){k=v[e+w*(p*f)+x*f+s]}u[e+n+r+s]=k}}}}return{dataId:l.write(u,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Dm=Tu(r.Round,e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),Om={kernelName:r.Round,backendName:"cpu",kernelFunc:Dm},Mm=Su(e=>1/Math.sqrt(e)),zm=Nu(r.Rsqrt,Mm),Lm={kernelName:r.Rsqrt,backendName:"cpu",kernelFunc:zm};function Pm(e,t,n,a,s,o,i,c,l,u){const d=[a/s,s],h=e.values,p=t.values;if(0===a)return(0,r.buffer)(n,t.dtype);const f=l instanceof r.TensorBuffer?l:(0,r.buffer)(d,t.dtype);"string"===typeof l||"number"===typeof l?f.values.fill(l):"boolean"===typeof l&&f.values.fill(+l);for(let r=0;r<o;r++){const e=[];let o=0;for(let t=0;t<i;t++){const n=h[r*i+t];e.push(n),o+=n*c[t]}if(o<0||o>=a/s)throw new Error("Invalid indices: ".concat(e," does not index into ").concat(n));for(let n=0;n<s;n++)u?f.values[o*s+n]+=p[r*s+n]:f.values[o*s+n]=0===t.rank?p[0]:p[r*s+n]}return f}const Bm={kernelName:r.ScatterNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:s,updates:o}=t,{shape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=r.backend_util.calculateShapes(o,s,i),p=Pm(n.bufferSync(s),n.bufferSync(o),i,h,u,l,c,d,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}};function Wm(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<t?n=r+1:a=r;return a}function Vm(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<=t?n=r+1:a=r;return a}const Um={kernelName:r.SearchSorted,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:s,values:o}=t,{side:i}=a,c=function(e,t,n,a,s,o){const i=r.util.getArrayFromDType("int32",n*s);for(let r=0;r<n;++r){const n=e.slice(r*a,(r+1)*a),c=r*s;for(let e=0;e<s;++e)i[c+e]="left"===o?Wm(n,t[e+c]):Vm(n,t[e+c])}return i}(n.data.get(s.dataId).values,n.data.get(o.dataId).values,s.shape[0],s.shape[1],o.shape[1],i);return n.makeTensorInfo(o.shape,"int32",c)}};const Gm={kernelName:r.Select,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:s,e:o}=t;xu([a,s,o],"select");const i=a.shape.length,c=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values,d=(0,r.upcastType)(s.dtype,o.dtype),h=r.util.makeZerosTypedArray(r.util.sizeFromShape(s.shape),d);let p=0;const f=0===i||i>1||1===s.shape.length?1:r.util.sizeFromShape(s.shape.slice(1));for(let r=0;r<c.length;r++)for(let e=0;e<f;e++)1===c[r]?h[p++]=l[r]:h[p++]=u[r];return n.makeTensorInfo(s.shape,d,h)}},Hm=r.backend_util.SELU_SCALEALPHA,jm=r.backend_util.SELU_SCALE,qm=Tu(r.Selu,e=>e>=0?jm*e:Hm*(Math.exp(e)-1)),Ym={kernelName:r.Selu,backendName:"cpu",kernelFunc:qm},Km=Tu(r.Sign,e=>e<0?-1:e>0?1:0),Xm={kernelName:r.Sign,backendName:"cpu",kernelFunc:Km},Zm=Tu(r.Sin,e=>Math.sin(e)),Qm={kernelName:r.Sin,backendName:"cpu",kernelFunc:Zm},$m=Tu(r.Sinh,e=>Math.sinh(e)),Jm={kernelName:r.Sinh,backendName:"cpu",kernelFunc:$m},eg=Math.log(1.1920928955078125e-7)+2,tg=Tu(r.Softplus,e=>{const t=e>-eg,n=e<eg,a=Math.exp(e);let r;return r=n?a:t?e:Math.log(1+a),r}),ng={kernelName:r.Softplus,backendName:"cpu",kernelFunc:tg};const ag={kernelName:r.SpaceToBatchND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:o,paddings:i}=a;xu([s],"spaceToBatchND");const c=r.util.sizeFromShape(o),l=[[0,0]];l.push(...i);for(let r=1+o.length;r<s.shape.length;++r)l.push([0,0]);const u=am.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),d=r.backend_util.getReshaped(u.shape,o,c,!1),h=r.backend_util.getPermuted(d.length,o.length,!1),p=r.backend_util.getReshapedPermuted(u.shape,o,c,!1),f=rd({inputs:{x:u},backend:n,attrs:{shape:d}}),m=yd({inputs:{x:f},backend:n,attrs:{perm:h}}),g=rd({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function rg(e,t,n,a,s,o,i){const c=t[0],l=o[0],u=new Array(l),d=new Array(c),h=t[1];if(0===l){if(0!==c)throw new Error(r.backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(c));return[r.util.getArrayFromDType(n,0),[0,h],r.util.getArrayFromDType(s,0),u,d]}let p=!0,f=0;const m=new Array(l).fill(0);for(let y=0;y<c;++y){const t=e[y*h];if(t<0)throw new Error(r.backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(y,t));if(t>=l)throw new Error(r.backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(y,t,l));++m[t],p=p&&t>=f,f=t}let g=!0;for(let r=0;r<l;++r){const e=0===m[r];u[r]=e,g=g&&!e,m[r]=Math.max(m[r],1),r>0&&(m[r]+=m[r-1])}if(g&&p){const t=e,n=a;for(let e=0;e<c;++e)d[e]=e;return[t,[c,h],n,u,d]}{const t=m[l-1],o=r.util.getArrayFromDType(n,t*h),p=r.util.getArrayFromDType(s,t),f=new Array(l).fill(0);for(let n=0;n<c;++n){const t=e[n*h],r=f[t],s=(0===t?0:m[t-1])+r;f[t]++;for(let a=0;a<h;++a)o[s*h+a]=e[n*h+a];p[s]=a[n],d[n]=s}for(let e=0;e<l;++e){if(0===f[e]){const t=0===e?0:m[e-1];o[t*h+0]=e;for(let e=1;e<h;++e)o[t*h+e]=0;p[t]=i}}return[o,[t,h],p,u,d]}}const sg={kernelName:r.SparseFillEmptyRows,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n        ".concat(s.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n        ".concat(r.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values[0],[d,h,p,f,m]=rg(i,a.shape,a.dtype,c,r.dtype,l,u);return[n.makeTensorInfo(h,a.dtype,d),n.makeTensorInfo([h[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};function og(e,t,n,a,s){const o=r.util.sizeFromShape(a),i=t[0],c=s.length,l=[];let u=1,d=-1;for(let g=0;g<c;++g){const e=s[g];if(-1===e){if(-1!==d)throw new Error(r.backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,g));d=g,l.push(1)}else{if(e<0)throw new Error(r.backend_util.getSparseReshapeNegativeOutputDimErrorMessage(g,e));u*=e,l.push(e)}}if(-1!==d){if(u<=0)throw new Error(r.backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(o/u);if(u*e!==o)throw new Error(r.backend_util.getSparseReshapeInputOutputMultipleErrorMessage(a,l));l[d]=e}if(r.util.sizeFromShape(l)!==o)throw new Error(r.backend_util.getSparseReshapeInputOutputMismatchErrorMessage(a,l));const h=a.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*a[e+1]}const f=[];if(c>0){f[c-1]=1;for(let e=c-2;e>=0;--e)f[e]=f[e+1]*l[e+1]}const m=r.util.getArrayFromDType(n,i*c);for(let r=0;r<i;++r){let t=0;for(let n=0;n<h;++n)t+=e[r*h+n]*p[n];for(let e=0;e<c;++e)m[r*c+e]=Math.trunc(t/f[e]),t%=f[e]}return[m,[i,c],l]}const ig={kernelName:r.SparseReshape,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape\n        ".concat(r.shape));if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(s.shape));const o=Array.from(n.data.get(r.dataId).values),i=n.data.get(a.dataId).values,c=Array.from(n.data.get(s.dataId).values),[l,u,d]=og(i,a.shape,a.dtype,o,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};function cg(e,t,n,a,s){let o=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const c=a.length,l=[t[0],e.length/t[0]],u=l[1],d=c>0?s[c-1]+1:0;if(d<0)throw new Error(r.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const h=t.slice();h[0]=d;const p=h.reduce((e,t)=>e*t,1),f=r.util.getArrayFromDType(n,p);if(0===c)return d>0&&f.fill(i),[f,h];if(d<=0)throw new Error(r.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,y=0,b=s[m];for(;;){let t=0;if(g<c){if(t=s[g],b===t){++g;continue}if(b>=t)throw new Error(r.backend_util.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(b<0||b>=d)throw new Error(r.backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b,d));b>y&&f.fill(i,y*u,b*u);for(let n=m;n<g;++n){const t=a[n];if(t<0||t>=l[0])throw new Error(r.backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,a[n],l[0]));for(let n=0;n<u;n++)f[b*u+n]+=e[t*u+n]}if(o)for(let e=0;e<u;e++)f[b*u+e]/=g-m;if(m=g,++g,y=b+1,b=t,g>c)break}return y<d&&f.fill(i,y*u,d*u),[f,h]}const lg={kernelName:r.SparseSegmentMean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n          ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n          ".concat(s.shape));if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=cg(o,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const ug={kernelName:r.SparseSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n         ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n         ".concat(s.shape));if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=cg(o,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const dg={kernelName:r.SparseToDense,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:s,sparseValues:o,defaultValue:i}=t,{outputShape:c}=a,{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:p}=r.backend_util.calculateShapes(o,s,c),f=!1,m=n.bufferSync(s);let g;switch(o.dtype){case"bool":g=Pm(m,n.bufferSync(o),c,p,d,u,l,h,Boolean(n.data.get(i.dataId).values[0]),f);break;case"float32":g=Pm(m,n.bufferSync(o),c,p,d,u,l,h,n.data.get(i.dataId).values[0],f);break;case"int32":g=Pm(m,n.bufferSync(o),c,p,d,u,l,h,n.data.get(i.dataId).values[0],f);break;case"string":g=Pm(m,n.bufferSync(o),c,p,d,u,l,h,r.util.decodeString(n.data.get(i.dataId).values[0]),f);break;default:throw new Error("Unsupported type ".concat(o.dtype))}return n.makeTensorInfo(c,g.dtype,g.values)}};const hg={kernelName:r.SplitV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{numOrSizeSplits:o,axis:i}=a,c=r.util.parseAxisParam(i,s.shape)[0],l=r.backend_util.prepareSplitSize(s,o,c),u=new Array(s.shape.length).fill(0),d=s.shape.slice();return l.map(e=>{const t=[...d];t[c]=e;const a=Gd({inputs:{x:s},backend:n,attrs:{begin:u,size:t}});return u[c]+=e,a})}},pg=Su(e=>Math.sqrt(e)),fg=Tu(r.Sqrt,e=>Math.sqrt(e)),mg={kernelName:r.Sqrt,backendName:"cpu",kernelFunc:fg},gg={kernelName:r.Square,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:a}=t,r=n;xu(a,"square");const s=r.data.get(a.dataId).values,o=new Float32Array(s.length);for(let i=0;i<s.length;++i){const e=s[i];o[i]=e*e}return{dataId:r.write(o,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},yg=Fu((e,t)=>{const n=e-t;return n*n}),bg=$u(r.SquaredDifference,yg),vg={kernelName:r.SquaredDifference,backendName:"cpu",kernelFunc:bg},xg=Su((e,t)=>{const{pattern:n,replaceGlobal:a,rewrite:r}=t;return e.replace(new RegExp(n,a?"g":""),r)}),wg=Nu(r.StaticRegexReplace,xg),kg={kernelName:r.StaticRegexReplace,backendName:"cpu",kernelFunc:wg},Sg=Tu(r.Step,(e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),Tg={kernelName:r.Step,backendName:"cpu",kernelFunc:Sg};function Ng(e,t,n,a){const s=(0,r.buffer)(e,t.dtype);for(let r=0;r<s.size;r++){const e=s.indexToLoc(r),o=new Array(e.length);for(let t=0;t<o.length;t++)o[t]=e[t]*n[t]+a[t];s.set(t.get(...o),...e)}return s}const Ig={kernelName:r.StridedSlice,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{begin:o,end:i,strides:c,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=a;xu(s,"stridedSlice");const{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:v,end:x,strides:w}=r.slice_util.sliceInfo(s.shape,o,i,c,l,u,d,h,p);let k;if(g)k=rd({inputs:{x:s},backend:n,attrs:{shape:m}});else if(y||b){r.util.assert(s.shape.length>=1,()=>"Input must have rank at least 1, got: ".concat(s.shape.length));const e=r.slice_util.computeOutShape(v,x,w),t=Gd({inputs:{x:s},backend:n,attrs:{begin:v,size:e}});k=rd({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{const e=Ng(f,n.bufferSync(s),w,v);k=n.makeTensorInfo(m,e.dtype,e.values)}return k}};class Cg{constructor(e,t,n,a,s,o){this.separator=r.util.encodeString(e),this.nGramWidths=t,this.leftPad=r.util.encodeString(n),this.rightPad=r.util.encodeString(a),this.padWidth=s,this.preserveShort=o}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,a,r,s){for(let o=0;o<r;++o){const i=this.getPadWidth(s),c=Math.max(0,i-o),l=Math.max(0,i-(r-(o+1))),u=s-(c+l),d=t+(c>0?0:o-i);let h=0;h+=c*this.leftPad.length;for(let t=0;t<u;++t)h+=e[d+t].length;h+=l*this.rightPad.length;h+=(c+l+u-1)*this.separator.length,n[a+o]=new Uint8Array(h);const p=n[a+o];let f=0;const m=e=>e.forEach(e=>p[f++]=e);for(let e=0;e<c;++e)m(this.leftPad),m(this.separator);for(let t=0;t<u-1;++t)m(e[d+t]),m(this.separator);if(u>0){m(e[d+u-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error("First split value must be 0, got ".concat(e));for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error("Invalid split value ".concat(t[r],", must be in [").concat(e,", ").concat(n,"]"));e=t[r]}if(e!==n)throw new Error("Last split value must be data size. Expected ".concat(n,", got ").concat(e))}const s=a-1,o=r.util.getArrayFromDType("int32",a);if(0===n||0===a){const e=new Array(n);for(let t=0;t<=s;++t)o[t]=0;return[e,o]}o[0]=0;for(let r=1;r<=s;++r){const e=t[r]-t[r-1];let n=0;this.nGramWidths.forEach(t=>{n+=this.getNumNGrams(e,t)}),this.preserveShort&&e>0&&0===n&&(n=1),o[r]=o[r-1]+n}const i=new Array(o[s]);for(let r=0;r<s;++r){const n=t[r];let a=o[r];if(this.nGramWidths.forEach(s=>{const o=t[r+1]-t[r],c=this.getNumNGrams(o,s);this.createNGrams(e,n,i,a,c,s),a+=c}),this.preserveShort&&a===o[r]){const s=t[r+1]-t[r];if(0===s)continue;const o=s+2*this.padWidth,c=1;this.createNGrams(e,n,i,a,c,o)}}return[i,o]}}function Eg(e,t,n,a,r,s,o,i){return new Cg(n,a,r,s,o,i).compute(e,t)}const Ag={kernelName:r.StringNGrams,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:d}=t,h=n.data.get(u.dataId).values,p=n.data.get(d.dataId).values,[f,m]=Eg(h,p,r,s,o,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};function _g(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let s=e.indexOf(r);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||a.push(t),s=(e=e.subarray(s+1)).indexOf(r)}return void(n&&0===e.length||a.push(e))}let r=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(r,s);n&&0===t.length||a.push(t),r=s+1}}function Rg(e,t,n){const a=e.length,s=[];let o=0,i=0;const c=new Array(a);for(let r=0;r<a;++r){const a=s.length;_g(e[r],t,n,s);const l=s.length-a;c[r]=l,o+=l,i=Math.max(i,l)}const l=r.util.getArrayFromDType("int32",2*o),u=new Array(o),d=[a,i];let h=0;for(let r=0;r<a;++r)for(let e=0;e<c[r];++e)l[2*h]=r,l[2*h+1]=e,u[h]=s[h],++h;return[l,u,d]}const Fg={kernelName:r.StringSplit,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: ".concat(s.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values[0],[l,u,d]=Rg(i,c,r),h=u.length;return[n.makeTensorInfo([h,2],"int32",l),n.makeTensorInfo([h],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};function Dg(e,t){const n=r.util.getArrayFromDType("int32",e.length);for(let a=0;a<e.length;++a)n[a]=r.util.fingerPrint64(e[a]).modulo(t).getLowBitsUnsigned();return n}const Og={kernelName:r.StringToHashBucketFast,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=Dg(n.data.get(s.dataId).values,r);return n.makeTensorInfo(s.shape,"int32",o)}},Mg=Tu(r.Tan,e=>Math.tan(e)),zg={kernelName:r.Tan,backendName:"cpu",kernelFunc:Mg},Lg=Tu(r.Tanh,e=>Math.tanh(e)),Pg={kernelName:r.Tanh,backendName:"cpu",kernelFunc:Lg};const Bg={kernelName:r.TensorScatterUpdate,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:a,indices:s,updates:o}=t,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:d}=r.backend_util.calculateShapes(o,s,a.shape),h=n.bufferSync(s),p=n.bufferSync(o),f=n.bufferSync(a),m=Pm(h,p,a.shape,d,l,c,i,u,f,!1);return n.makeTensorInfo(a.shape,m.dtype,m.values)}};function Wg(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const a=(0,r.buffer)(n,e.dtype);for(let r=0;r<a.values.length;++r){const t=a.indexToLoc(r),n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=t[a]%e.shape[a];const s=e.locToIndex(n);a.values[r]=e.values[s]}return a}const Vg={kernelName:r.Tile,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;xu(r,"tile");const o=Wg(n.bufferSync(r),s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}},Ug=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function Gg(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;a>n;){if(a-n>600){const r=a-n+1,s=t-n+1,o=Math.log(r),i=.5*Math.exp(2*o/3),c=.5*Math.sqrt(o*i*(r-i)/r)*Math.sign(s-r/2);Gg(e,t,Math.max(n,Math.floor(t-s*i/r+c)),Math.min(a,Math.floor(t+(r-s)*i/r+c)))}const s=e[t];let o=n,i=a;for(r.util.swap(e,n,t),Ug(e[a],s)>0&&r.util.swap(e,n,a);o<i;){for(r.util.swap(e,o,i),o++,i--;Ug(e[o],s)<0;)o+=1;for(;Ug(e[i],s)>0;)i-=1}0===Ug(e[n],s)?r.util.swap(e,n,i):(i+=1,r.util.swap(e,i,a)),i<=t&&(n=i+1),t<=i&&(a=i-1)}}function Hg(e,t,n,a,s){const o=t[t.length-1],[i,c]=[e.length/o,o],l=r.util.getTypedArrayFromDType(n,i*a),u=r.util.getTypedArrayFromDType("int32",i*a);for(let r=0;r<i;r++){const t=r*c,n=e.subarray(t,t+c);let o=new Array(n.length);n.forEach((e,t)=>o[t]={value:e,index:t}),a<o.length&&(Gg(o,a),o=o.slice(0,a)),s&&o.sort(Ug);const i=r*a,d=l.subarray(i,i+a),h=u.subarray(i,i+a);for(let e=0;e<a;e++)d[e]=o[e].value,h[e]=o[e].index}const d=t.slice();return d[d.length-1]=a,[(0,r.buffer)(d,n,l),(0,r.buffer)(d,"int32",u)]}const jg={kernelName:r.TopK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:o}=a;xu(r,"topk");const i=n.data.get(r.dataId).values,[c,l]=Hg(i,r.shape,r.dtype,s,o);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};const qg={kernelName:r.Transform,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:s,transforms:o}=t,{interpolation:i,fillMode:c,fillValue:l,outputShape:u}=n,[d,h,p,f]=s.shape,[m,g]=null!=u?u:[h,p],y=[d,m,g,f],b=r.util.computeStrides(s.shape),v=b[0],x=b[1],w=b[2],k=r.util.computeStrides(y),S=k[0],T=k[1],N=k[2],I=r.util.getTypedArrayFromDType(s.dtype,r.util.sizeFromShape(y));I.fill(l);const C=a.data.get(s.dataId).values,E=a.data.get(o.dataId).values;for(let r=0;r<d;++r){const e=1===o.shape[0]?E:E.subarray(8*r,8*r+8);for(let t=0;t<m;++t)for(let n=0;n<g;++n)for(let a=0;a<f;++a){let s;const o=e[6]*n+e[7]*t+1;if(0===o)continue;const u=(e[0]*n+e[1]*t+e[2])/o,d=(e[3]*n+e[4]*t+e[5])/o,f=Yg(u,p,c),m=Yg(d,h,c);switch(i){case"nearest":s=Xg(C,h,p,v,x,w,r,m,f,a,l);break;case"bilinear":s=Zg(C,h,p,v,x,w,r,m,f,a,l);break;default:throw new Error("Error in Transform: Expect 'nearest' or "+"'bilinear', but got ".concat(i))}I[r*S+t*T+n*N+a]=s}return a.makeTensorInfo(y,s.dtype,I)}return{dataId:a.write(I,y,s.dtype),shape:s.shape,dtype:s.dtype}}};function Yg(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return r.util.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return r.util.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return r.util.clamp(0,e,t-1)}(e,t);default:return function(e){return e}(e)}}function Kg(e,t,n,a,r,s,o,i,c,l,u){return 0<=i&&i<t&&0<=c&&c<n?e[o*a+i*r+c*s+l]:u}function Xg(e,t,n,a,r,s,o,i,c,l,u){return Kg(e,t,n,a,r,s,o,Math.round(i),Math.round(c),l,u)}function Zg(e,t,n,a,r,s,o,i,c,l,u){const d=Math.floor(i),h=Math.floor(c),p=d+1,f=h+1;return(p-i)*((f-c)*Kg(e,t,n,a,r,s,o,d,h,l,u)+(c-h)*Kg(e,t,n,a,r,s,o,d,f,l,u))+(i-d)*((f-c)*Kg(e,t,n,a,r,s,o,p,h,l,u)+(c-h)*Kg(e,t,n,a,r,s,o,p,f,l,u))}function Qg(e,t,n,a){const s=r.util.parseAxisParam(t,n)[0],o=[1,n[0],1];for(let r=0;r<s;r++)o[0]*=n[r];o[1]=n[s];for(let r=s+1;r<n.length;r++)o[2]*=n[r];const i=new Map,c=new Int32Array(n[s]),l=new r.TensorBuffer(o,a,e),u=[],d=1===o[0]&&1===o[2];for(let r=0;r<n[s];r++){let t;if(d)t=e[r].toString();else{const e=[];for(let t=0;t<o[0];t++)for(let n=0;n<o[2];n++)e.push(l.get(t,r,n));t=e.join(",")}const n=i.get(t);if(null!=n)c[r]=n;else{const e=i.size;i.set(t,e),c[r]=e,u.push(r)}}const h=o.slice();h[1]=i.size;const p=new r.TensorBuffer(h,a);u.forEach((e,t)=>{for(let n=0;n<o[0];n++)for(let a=0;a<o[2];a++)p.set(l.get(n,e,a),n,t,a)});const f=n.slice();return f[s]=h[1],{outputValues:p.values,outputShape:f,indices:c}}const $g={kernelName:r.Unique,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;xu(s,"unique");const o=a.data.get(s.dataId).values,{outputValues:i,outputShape:c,indices:l}=Qg(o,r,s.shape,s.dtype);return[a.makeTensorInfo(c,s.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const Jg={kernelName:r.Unpack,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const o=r.shape.length,i=r.shape[s],c=new Array(o-1);let l=0;for(let p=0;p<o;p++)p!==s&&(c[l++]=r.shape[p]);const u=new Array(o).fill(0),d=r.shape.slice();d[s]=1;const h=new Array(i);for(let p=0;p<h.length;p++){u[s]=p;const e=Gd({inputs:{x:r},backend:n,attrs:{begin:u,size:d}});h[p]=rd({inputs:{x:e},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(e)}return h}};const ey={kernelName:r.UnsortedSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,segmentIds:o}=t,{numSegments:i}=a;xu(s,"unsortedSegmentSum");const c=[],l=[],u=s.shape.length-o.shape.length;let d=o;for(let r=0;r<u;++r){const e=ap({inputs:{input:d},backend:n,attrs:{dim:r+1}});d=e,l.push(e)}for(let p=0;p<i;++p){const e=r.util.createScalarValue(p,"int32"),t=n.makeTensorInfo([],"int32",e),a=Hh({inputs:{a:t,b:d},backend:n}),o=Zu({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),i=Lh({inputs:{a:o,b:s},backend:n}),u=Bh({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}});c.push(u),l.push(t),l.push(a),l.push(o),l.push(i),l.push(u)}const h=tm({inputs:c,backend:n,attrs:{axis:0}});return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}},ty=[cd,ud,hd,fd,ad,md,vd,xd,wd,kd,Td,Id,Ed,Rd,Dd,Ld,Pd,Bd,Wd,id,Vd,jd,Kd,Qd,$d,Qu,th,ah,ju,rh,lh,dh,hh,ph,fh,mh,gh,bh,xh,wh,kh,Sh,Th,Nh,Ch,Eh,Ah,_h,Rh,Fh,Dh,Oh,Vh,Cu,Uh,jh,Jh,np,rp,ip,bp,xp,wp,Tp,Cp,Ep,Ap,Rp,Dp,zp,Bp,Au,Wp,ih,Up,Hp,qp,Ru,Xp,$p,ef,af,sf,lf,df,ff,mf,gf,vf,kf,Sf,Tf,Nf,If,Cf,Ef,Af,Ff,Df,zf,Bf,Ph,Vf,Gf,jf,Yf,Zf,Qf,em,nm,am,om,Mu,cm,pm,gm,km,Tm,Ku,up,Im,Lu,Bu,sd,Cm,Em,Am,_m,Rm,Fm,Om,Lm,Bm,Um,Gm,Ym,Uu,Xm,Qm,Jm,Hd,Pf,ng,ag,sg,ig,lg,ug,dg,hg,mg,gg,vg,kg,Tg,Ig,Ag,Fg,Og,fp,Wh,zg,Pg,Bg,Vg,jg,qg,bd,$g,Jg,ey,Jf];for(const n of ty)(0,r.registerKernel)(n);const ny={},ay={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function ry(e,t){if(!(e in ny)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if((0,r.env)().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete ny[e]},!1),(0,r.env)().getBool("SOFTWARE_WEBGL_ENABLED")&&(ay.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",ay)||n.getContext("experimental-webgl",ay);return n.getContext("webgl2",ay)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;ny[e]=n}const n=ny[e];return null==n||n.isContextLost()?(delete ny[e],ry(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),ny[e])}var sy,oy,iy;function cy(e,t){return[t,e]}function ly(e){const t=r.util.sizeFromShape(e),n=Math.ceil(t/4);return r.util.sizeToSquarishShape(n)}function uy(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function dy(e,t){const n=e;let a,s,o,i,c,l,u,d,h,p;return 2===(0,r.env)().getNumber("WEBGL_VERSION")?(a=n.R32F,s=n.R16F,o=n.RGBA16F,i=n.RGBA32F,c=n.RED,u=4,d=1,h=n.HALF_FLOAT,p=n.FLOAT,l=n.RGBA8):(a=e.RGBA,s=e.RGBA,o=e.RGBA,i=n.RGBA,c=e.RGBA,u=4,d=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,l=e.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:c,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:d,textureTypeHalfFloat:h,textureTypeFloat:p}}function hy(e,t){const n=t();return(0,r.env)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code ".concat(t)}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(sy||(sy={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(oy||(oy={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(iy||(iy={}));function py(e){return!!((0,r.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function fy(e,t){return Sy(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}const my=/ERROR: [0-9]+:([0-9]+):/g;function gy(e,t){const n=my.exec(t);if(null==n)return console.log("Couldn't parse line number in error: ".concat(t)),void console.log(e);const a=+n[1],s=e.split("\n"),o=s.length.toString().length+2,i=s.map((e,t)=>r.util.rightPad((t+1).toString(),o)+e);let c=0;for(let r=0;r<i.length;r++)c=Math.max(i[r].length,c);const l=i.slice(0,a-1),u=i.slice(a-1,a),d=i.slice(a);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log("%c ".concat(r.util.rightPad(u[0],c)),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function yy(e,t){if(hy(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function by(e,t,n,a,r,s,o){const i=e.getAttribLocation(t,n);return-1!==i&&(hy(e,()=>e.bindBuffer(e.ARRAY_BUFFER,a)),hy(e,()=>e.vertexAttribPointer(i,r,e.FLOAT,!1,s,o)),hy(e,()=>e.enableVertexAttribArray(i)),!0)}function vy(e,t,n,a){hy(e,()=>function(e,t,n){Ty(e,n),hy(e,()=>e.activeTexture(e.TEXTURE0+n)),hy(e,()=>e.bindTexture(e.TEXTURE_2D,t))}(e,t,a)),hy(e,()=>e.uniform1i(n,a))}function xy(e,t,n){hy(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),hy(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function wy(e,t){hy(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),hy(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function ky(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error ".concat(t)}}(e,t))}function Sy(e,t,n){const a=hy(e,()=>t());if(null==a)throw new Error(n);return a}function Ty(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n){const e="[gl.TEXTURE0, gl.TEXTURE".concat(n,"]");throw new Error("textureUnit must be in ".concat(e,"."))}}function Ny(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return r.util.sizeFromShape(e.slice(0,e.length-t))}function Iy(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Cy(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[Ny(e),...Iy(e)]),t}function Ey(e){return e%2===0}function Ay(e,t){if(e=e.slice(-2),t=t.slice(-2),r.util.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],a=t[t.length-1];if(n===a)return!0;if(Ey(n)&&Ey(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Ey(e[0])&&Ey(t[0])}let _y,Ry;function Fy(e,t){return null!=e.getExtension(t)}function Dy(e){try{if(null!=ry(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function Oy(e){if(0===e)return!1;const t=ry(e);if(1!==e){if(Fy(t,"EXT_color_buffer_float"))return My(t);const e="EXT_color_buffer_half_float";if(Fy(t,e)){const n=t.getExtension(e);return function(e,t){const n=dy(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a);const r=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(o),i}(t,n)}return!1}if(!Fy(t,"OES_texture_float"))return!1;if(!Fy(t,"WEBGL_color_buffer_float"))return!1;return My(t)}function My(e){const t=dy(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),r}function zy(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&r.util.assert("complex64"!==e.dtype,()=>"".concat(t," does not support complex64 tensors ")+"in the WebGL backend.")})}const Ly=(0,r.env)();function Py(){let e,t,n,a,s,o,i,c,l,u;return 2===(0,r.env)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",s="texture",o="outputColor",i="out vec4 outputColor;",c=(0,r.env)().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",s="texture2D",o="gl_FragColor",i="",c="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:s,output:o,defineOutput:i,defineSpecialNaN:c,defineSpecialInf:l,defineRound:u}}function By(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=r.util.computeStrides(t);return a.map((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / ").concat(t),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(t):"index -= ".concat(e[r]," * ").concat(t);return"".concat(s,"; ").concat(o,";")}).join("")}function Wy(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=r.util.computeStrides(t);return a.map((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / outShapeStrides[").concat(r,"]"),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * outShapeStrides[").concat(r,"]"):"index -= ".concat(e[r]," * outShapeStrides[").concat(r,"]");return"".concat(s,"; ").concat(o,";")}).join("")}function Vy(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=function(e,t){const n=e.length,a=e.map(e=>"".concat(t,"[").concat(e,"]")),r=new Array(n-1);r[n-2]=a[n-1];for(let s=n-3;s>=0;--s)r[s]="(".concat(r[s+1]," * ").concat(a[s+1],")");return r}(e.map((e,t)=>t),t);return a.map((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / ").concat(a[r]),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(a[r]):"index -= ".concat(e[r]," * ").concat(a[r]);return"".concat(s,"; ").concat(o,";")}).join("")}function Uy(e){const t=r.util.computeStrides(e).map(e=>e.toString());return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ".concat(t[0]," + coords.y * ").concat(t[1]," + coords.z;\n  }\n")}Ly.registerFlag("HAS_WEBGL",()=>Ly.getNumber("WEBGL_VERSION")>0),Ly.registerFlag("WEBGL_VERSION",()=>Dy(2)?2:Dy(1)?1:0),Ly.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),Ly.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===Ly.get("WEBGL_VERSION")),Ly.registerFlag("WEBGL_CPU_FORWARD",()=>!0),Ly.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),Ly.registerFlag("WEBGL_PACK",()=>Ly.getBool("HAS_WEBGL")),Ly.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ly.getBool("WEBGL_PACK")),Ly.registerFlag("WEBGL_PACK_CLIP",()=>Ly.getBool("WEBGL_PACK")),Ly.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Ly.getBool("WEBGL_PACK")),Ly.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ly.getBool("WEBGL_PACK")),Ly.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ly.getBool("WEBGL_PACK")),Ly.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ly.getBool("WEBGL_PACK")),Ly.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ly.getBool("WEBGL_PACK")),Ly.registerFlag("WEBGL_PACK_REDUCE",()=>Ly.getBool("WEBGL_PACK")),Ly.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ly.getBool("WEBGL_PACK")),Ly.registerFlag("WEBGL_CONV_IM2COL",()=>Ly.getBool("WEBGL_PACK")),Ly.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Ly.getBool("WEBGL_PACK")),Ly.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(e){if(null==_y){const t=ry(e);_y=t.getParameter(t.MAX_TEXTURE_SIZE)}return _y}(Ly.getNumber("WEBGL_VERSION"))),Ly.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(e){if(null==Ry){const t=ry(e);Ry=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Ry)}(Ly.getNumber("WEBGL_VERSION"))),Ly.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const e=Ly.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=ry(e);return t=Fy(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:Fy(n,"EXT_disjoint_timer_query")?1:0,t}(e)}),Ly.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ly.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!r.device_util.isMobile()),Ly.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(e){if(0===e)return!1;const t=ry(e);if(1===e){if(!Fy(t,"OES_texture_float"))return!1}else if(!Fy(t,"EXT_color_buffer_float"))return!1;return My(t)}(Ly.getNumber("WEBGL_VERSION"))),Ly.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!Ly.getBool("WEBGL_FORCE_F16_TEXTURES")&&Ly.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),Ly.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>Oy(Ly.getNumber("WEBGL_VERSION"))),Ly.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(e=Ly.getNumber("WEBGL_VERSION"))&&null!=ry(e).fenceSync;var e}),Ly.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ly.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),Ly.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if("number"!==typeof e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but "+"got ".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+"delete) or at least 0, but got ".concat(e,"."))}),Ly.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>r.device_util.isMobile()?1:-1,e=>{if("number"!==typeof e)throw new Error("WEBGL_FLUSH_THRESHOLD must be a number but got "+"".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_FLUSH_THRESHOLD must be -1 (indicating never "+"manual flush) or at least 0, but got ".concat(e,"."))}),Ly.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),Ly.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),Ly.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),Ly.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),Ly.registerFlag("WEBGL_EXP_CONV",()=>!1),Ly.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Ly.getBool("IS_TEST")),Ly.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),Ly.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),Ly.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),Ly.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);const Gy="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:Hy}=r.backend_util;function jy(e,t,n){const a=[];if(e.forEach(e=>{const t=r.util.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push("uniform float ".concat(e.name).concat(t>1?"[".concat(t,"]"):"",";")):(a.push("uniform sampler2D ".concat(e.name,";")),a.push("uniform int offset".concat(e.name,";"))),n.enableShapeUniforms){const{uniformShape:t}=tb(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push("uniform int ".concat(e.name,"Shape;"));break;case 2:a.push("uniform ivec2 ".concat(e.name,"Shape;"));break;case 3:a.push("uniform ivec3 ".concat(e.name,"Shape;"));break;case 4:a.push("uniform ivec4 ".concat(e.name,"Shape;"))}a.push("uniform ivec2 ".concat(e.name,"TexShape;"))}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(e=>{a.push("uniform ".concat(e.type," ").concat(e.name).concat(e.arrayIndex?"[".concat(e.arrayIndex,"]"):"",";"))});const s=a.join("\n"),o=e.map(e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3?arguments[3]:void 0,s="";s+=n?Yy(e,a):qy(e,a);const o=e.shapeInfo.logicalShape,i=t.logicalShape;o.length<=i.length&&(s+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),s="get"+a+"AtOutCoords",o=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,c=Hy(e.shapeInfo.logicalShape,t.logicalShape),l=eb(i),u=i-o;let d;const h=["x","y","z","w","u","v"];d=0===o?"":i<2&&c.length>=1?"coords = 0;":c.map(e=>"coords.".concat(h[e+u]," = 0;")).join("\n");let p="";p=i<2&&o>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords.".concat(h[t+u])).join(", ");let f="return outputValue;";const m=1===r.util.sizeFromShape(e.shapeInfo.logicalShape),g=r.util.sizeFromShape(t.logicalShape),y=1===g;if(1!==o||m||y){if(m&&!y)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(c.length){const e=o-2,t=o-1;c.indexOf(e)>-1&&c.indexOf(t)>-1?f="return vec4(outputValue.x);":c.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":c.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 ".concat(s,"() {\n      ").concat(l," coords = getOutputCoords();\n      ").concat(d,"\n      vec4 outputValue = get").concat(a,"(").concat(p,");\n      ").concat(f,"\n    }\n  ")}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),s="get"+a+"AtOutCoords",o=t.texShape,i=e.shapeInfo.texShape,c=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&c===l&&null==e.shapeInfo.flatOffset&&r.util.arraysEqual(i,o))return"\n      float ".concat(s,"() {\n        return sampleTexture(").concat(n,", resultUV);\n      }\n    ");const u=eb(l),d=Hy(e.shapeInfo.logicalShape,t.logicalShape),h=l-c;let p;const f=["x","y","z","w","u","v"];p=0===c?"":l<2&&d.length>=1?"coords = 0;":d.map(e=>"coords.".concat(f[e+h]," = 0;")).join("\n");let m="";m=l<2&&c>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords.".concat(f[t+h])).join(", ");return"\n    float ".concat(s,"() {\n      ").concat(u," coords = getOutputCoords();\n      ").concat(p,"\n      return get").concat(a,"(").concat(m,");\n    }\n  ")}(e,t));return s}(e,t,n.packedInputs,n.enableShapeUniforms)).join("\n"),i=t.texShape,c=Py(),l=function(e){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ".concat(e.texture2D,"(textureSampler, uv).r;\n    }\n  ")}(c);let u,d,h=function(e){const t="".concat(e.version,"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ").concat(e.varyingFs," vec2 resultUV;\n    ").concat(e.defineOutput,"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ").concat(e.defineSpecialNaN,"\n    ").concat(e.defineSpecialInf,"\n    ").concat(e.defineRound,"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ").concat(Ky,"\n    ").concat(Xy,"\n    ").concat(Zy,"\n  ");return t}(c);t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===a[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ".concat(a[1],".0);\n      }\n    ");if(1===a[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ".concat(a[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      return 2 * (resTexRC.x * ").concat(a[1]," + resTexRC.y);\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(r.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(".concat(a[0],", ").concat(a[1],"));\n      }\n    ");const s=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n      int r = 2 * (index / ").concat(s,");\n      int c = imod(index, ").concat(s,") * 2;\n\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      int b = index / ").concat(s,";\n      index -= b * ").concat(s,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ")}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let o=s,i="",c="b, r, c";for(let l=2;l<e.length-1;l++)o*=e[e.length-l-1],i="\n      int b".concat(l," = index / ").concat(o,";\n      index -= b").concat(l," * ").concat(o,";\n    ")+i,c="b".concat(l,", ")+c;return"\n    ivec".concat(e.length," getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(").concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      ").concat(i,"\n\n      int b = index / ").concat(s,";\n      index -= b * ").concat(s,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec").concat(e.length,"(").concat(c,");\n    }\n  ")}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),d=function(e){return"\n    void setOutput(vec4 val) {\n      ".concat(e.output," = val;\n    }\n  ")}(c)):(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.x * ".concat(t[1],".0);\n      }\n    ");if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.y * ".concat(t[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      return resTexRC.x * ").concat(t[1]," + resTexRC.y;\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){if(r.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(".concat(t[0],", ").concat(t[1],"));\n      }\n    ");if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ");if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ");if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      int r = index / ").concat(e[1],";\n      int c = index - r * ").concat(e[1],";\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n){const t=Wy(["r","c","d"],e);return"\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ".concat(t,"\n    return ivec3(r, c, d);\n  }\n")}const a=By(["r","c","d"],e);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec3(r, c, d);\n    }\n  ")}(e,t,n);case 4:return function(e,t,n){if(n){const t=Wy(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ".concat(t,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}const a=By(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}(e,t,n);case 5:return function(e,t){const n=By(["r","c","d","d2","d3"],e);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(".concat(t[0],",\n                             ").concat(t[1],"));\n\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  ")}(e,t);case 6:return function(e,t){const n=By(["r","c","d","d2","d3","d4"],e);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  ")}(e,t);default:throw new Error("".concat(e.length,"-D output sampling is not yet supported"))}}(t.logicalShape,i,n.enableShapeUniforms),d=function(e){return"\n    void setOutput(float val) {\n      ".concat(e.output," = vec4(val, 0, 0, 0);\n    }\n  ")}(c)),n.packedInputs&&(h+=Qy);return[h,l,d,s,u,o,n.userCode].join("\n")}function qy(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"float ".concat(a,"() {return ").concat(n,";}");const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return"\n      float ".concat(a,"() {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const o=$y(n);if(t)return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");const[i,c]=e.shapeInfo.texShape;return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(i,", ").concat(c,", ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int index) {\n        ").concat(Jy(e),"\n      }\n    ");const r=e.shapeInfo.texShape,s=r[0],o=r[1];if(1===o&&1===s)return"\n      float ".concat(a,"(int index) {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const i=$y(n);if(1===o)return t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[0]));\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / ").concat(s,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(1===s)return t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / ").concat(o,".0, 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(t)return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(s,", ").concat(o,", index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),o=e.shapeInfo.texShape;if(null!=o&&r.util.arraysEqual(n,o)){if(t)return"\n      float ".concat(s,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const e=o[0],n=o[1];return"\n    float ".concat(s,"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(n,".0, ").concat(e,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}const{newShape:i,keptDims:c}=r.util.squeezeShape(n),l=i;if(l.length<n.length){const n=nb(e,l),a=["row","col"];return"\n      ".concat(qy(n,t),"\n      float ").concat(s,"(int row, int col) {\n        return ").concat(s,"(").concat(ab(a,c),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(s,"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(").concat(n[1],", 1)));\n        ").concat(Jy(e),"\n      }\n    ");const u=o[0],d=o[1],h=$y(a);if(1===d)return t?"\n      float ".concat(s,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(").concat(a,"TexShape[0]));\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(s,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ").concat(u,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(1===u)return t?"\n      float ".concat(s,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(").concat(a,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(s,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2((index + 0.5) / ").concat(d,".0, 0.5);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(t)return"\n      float ".concat(s,"(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(a,"Shape[1] + col + ").concat(h,";\n        vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");return"\n  float ".concat(s,"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ").concat(n[1]," + col + ").concat(h,";\n    vec2 uv = uvFromFlat(").concat(u,", ").concat(d,", index);\n    return sampleTexture(").concat(a,", uv);\n  }\n")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),o=n[1]*n[2],i=n[2],{newShape:c,keptDims:l}=r.util.squeezeShape(n),u=c;if(u.length<n.length){const n=nb(e,u),a=["row","col","depth"];return"\n        ".concat(qy(n,t),"\n        float ").concat(s,"(int row, int col, int depth) {\n          return ").concat(s,"(").concat(ab(a,l),");\n        }\n      ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(s,"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(").concat(o,", ").concat(i,", 1)));\n        ").concat(Jy(e),"\n      }\n    ");const d=e.shapeInfo.texShape,h=d[0],p=d[1],f=e.shapeInfo.flatOffset;if(p===o&&null==f)return t?"\n      float ".concat(s,"(int row, int col, int depth) {\n        int stride1 = ").concat(a,"Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n        float ".concat(s,"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(").concat(i,", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(").concat(p,".0, ").concat(h,".0);\n          return sampleTexture(").concat(a,", uv);\n        }\n      ");if(p===i&&null==f)return t?"\n      float ".concat(s,"(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(").concat(a,"Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(s,"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(").concat(n[1],", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(p,".0, ").concat(h,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");const m=$y(a);if(t)return"\n    float ".concat(s,"(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ").concat(a,"Shape[1] * ").concat(a,"Shape[2];\n      int stride1 = ").concat(a,"Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n      return sampleTexture(").concat(a,", uv);\n    }\n    ");return"\n      float ".concat(s,"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(o," + col * ").concat(i," + depth + ").concat(m,";\n        vec2 uv = uvFromFlat(").concat(h,", ").concat(p,", index);\n        return sampleTexture(").concat(a,", uv);\n      }\n  ")}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),o=n[3],i=n[2]*o,c=n[1]*i,{newShape:l,keptDims:u}=r.util.squeezeShape(n);if(l.length<n.length){const n=nb(e,l),a=["row","col","depth","depth2"];return"\n      ".concat(qy(n,t),"\n      float ").concat(s,"(int row, int col, int depth, int depth2) {\n        return ").concat(s,"(").concat(ab(a,u),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(s,"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(").concat(c,", ").concat(i,", ").concat(o,", 1)));\n        ").concat(Jy(e),"\n      }\n    ");const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1],m="int stride2 = ".concat(a,"Shape[3];"),g="int stride1 = ".concat(a,"Shape[2] * stride2;"),y="int stride0 = ".concat(a,"Shape[1] * stride1;");if(f===c&&null==d)return t?"\n      float ".concat(s,"(int row, int col, int depth, int depth2) {\n        ").concat(m,"\n        ").concat(g,"\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(s,"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(").concat(i,", ").concat(o,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");if(f===o&&null==d)return t?"\n      float ".concat(s,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(a,"Shape[1] * ").concat(a,"Shape[2], ").concat(a,"Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(s,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(n[1]*n[2],", ").concat(n[2],", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const b=$y(a);if(t)return"\n    float ".concat(s,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ").concat(m,"\n      ").concat(g,"\n      ").concat(y,"\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index + ").concat(b,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");return"\n    float ".concat(s,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(c," + col * ").concat(i," +\n          depth * ").concat(o," + depth2;\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(f,", index + ").concat(b,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],o=t[3]*s,i=t[2]*o,c=t[1]*i,{newShape:l,keptDims:u}=r.util.squeezeShape(t);if(l.length<t.length){const t=nb(e,l),n=["row","col","depth","depth2","depth3"];return"\n      ".concat(qy(t),"\n      float ").concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        return ").concat(a,"(").concat(ab(n,u),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(c,", ").concat(i,", ").concat(o,", ").concat(s,")) +\n          depth3;\n        ").concat(Jy(e),"\n      }\n    ");const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1];if(f===c&&null==d)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(").concat(i,", ").concat(o,", ").concat(s,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(f===s&&null==d)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3],",\n               ").concat(t[2]*t[3],", ").concat(t[3],", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const m=$y(n);return"\n    float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(c," + col * ").concat(i," + depth * ").concat(o," +\n          depth2 * ").concat(s," + depth3 + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(f,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:o}=r.util.squeezeShape(t);if(s.length<t.length){const t=nb(e,s),n=["row","col","depth","depth2","depth3","depth4"];return"\n      ".concat(qy(t),"\n      float ").concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ").concat(a,"(").concat(ab(n,o),");\n      }\n    ")}const i=t[5],c=t[4]*i,l=t[3]*c,u=t[2]*l,d=t[1]*u;if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(d,", ").concat(u,", ").concat(l,", ").concat(c,")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(").concat(i,", 1)));\n        ").concat(Jy(e),"\n      }\n    ");const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,f=p[0],m=p[1];if(m===d&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(").concat(u,", ").concat(l,", ").concat(c,", ").concat(i,")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(m,".0, ").concat(f,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(m===i&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3]*t[4],",\n               ").concat(t[2]*t[3]*t[4],",\n               ").concat(t[3]*t[4],",\n               ").concat(t[4],")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(m,".0, ").concat(f,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const g=$y(n);return"\n    float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(d," + col * ").concat(u," + depth * ").concat(l," +\n          depth2 * ").concat(c," + depth3 * ").concat(i," + depth4 + ").concat(g,";\n      vec2 uv = uvFromFlat(").concat(f,", ").concat(m,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);default:throw new Error("".concat(n.length,"-D input sampling")+" is not yet supported")}}function Yy(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),a=Py();return"\n    vec4 ".concat(n,"() {\n      return ").concat(a.texture2D,"(").concat(t,", halfCR);\n    }\n  ")}(e);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,s=Py();if(t)return"\n    vec4 ".concat(a,"(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ");const o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return"\n    vec4 ".concat(a,"(int index) {\n      vec2 uv = packedUVfrom1D(\n        ").concat(o[0],", ").concat(o[1],", index);\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),o=e.shapeInfo.texShape,i=o[0],c=o[1],l=Py();if(null!=o&&r.util.arraysEqual(n,o))return t?"\n      vec4 ".concat(s,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n\n        return ").concat(l.texture2D,"(").concat(a,", uv);\n      }\n    "):"\n      vec4 ".concat(s,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(c,".0, ").concat(i,".0);\n\n        return ").concat(l.texture2D,"(").concat(a,", uv);\n      }\n    ");if(t)return"\n    vec4 ".concat(s,"(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ").concat(l.texture2D,"(").concat(a,", uv);\n    }\n  ");const u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],d=Math.ceil(n[1]/2);return"\n    vec4 ".concat(s,"(int row, int col) {\n      vec2 uv = packedUVfrom2D(").concat(d,", ").concat(u[0],", ").concat(u[1],", row, col);\n      return ").concat(l.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const a=[1,2],s=nb(e,n.slice(1)),o=["b","row","col"];return"\n        ".concat(Yy(s,t),"\n        vec4 ").concat(r,"(int b, int row, int col) {\n          return ").concat(r,"(").concat(ab(o,a),");\n        }\n      ")}const i=Py();if(t)return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ");const c=o[0],l=o[1],u=Math.ceil(n[2]/2),d=u*Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ").concat(c,", ").concat(l,", ").concat(d,", ").concat(u,", b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);default:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=Py();if(t)return"\n    vec4 ".concat(a,"(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(").concat(n,"Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(n,"Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ").concat(n,"Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ");const s=e.shapeInfo.logicalShape,o=s.length,i=e.shapeInfo.texShape,c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=c[0],u=c[1],d=Math.ceil(s[o-1]/2);let h=d*Math.ceil(s[o-2]/2),p="int b, int row, int col",f="b * ".concat(h," + (row / 2) * ").concat(d," + (col / 2)");for(let m=2;m<o-1;m++)p="int b".concat(m,", ")+p,h*=s[o-m-1],f="b".concat(m," * ").concat(h," + ")+f;return"\n    vec4 ".concat(a,"(").concat(p,") {\n      int index = ").concat(f,";\n      int texR = index / ").concat(u,";\n      int texC = index - texR * ").concat(u,";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(u,", ").concat(l,");\n      return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t)}}const Ky="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Xy="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Zy="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Qy="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function $y(e){return"offset".concat(e)}function Jy(e){const t=e.name,n=r.util.sizeFromShape(e.shapeInfo.logicalShape);return n<2?"return ".concat(t,";"):"\n    for (int i = 0; i < ".concat(n,"; i++) {\n      if (i == index) {\n        return ").concat(t,"[i];\n      }\n    }\n  ")}function eb(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error("GPU for rank ".concat(e," is not yet supported"))}function tb(e,t,n){const{newShape:a,keptDims:s}=r.util.squeezeShape(t),o=t.length,i=e&&3===o&&1===t[0],c=i?t.slice(1):a,l=!e&&o>1&&!r.util.arraysEqual(t,n)&&a.length<o||i;return{useSqueezeShape:l,uniformShape:l?c:t,keptDims:s}}function nb(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function ab(e,t){return t.map(t=>e[t]).join(", ")}function rb(e,t,n,a){const s=n.map((e,n)=>{const a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}}),o=s.map(e=>e.shapeInfo),i={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},c=jy(s,i,t),l=function(e,t){const n=Sy(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(hy(e,()=>e.shaderSource(n,t)),hy(e,()=>e.compileShader(n)),(0,r.env)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw gy(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,c),u=e.createProgram(l);return(0,r.env)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:c,webGLProgram:u,inShapeInfos:o,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:c,webGLProgram:u,inShapeInfos:o,outShapeInfo:i},sb(e,t,u)))}function sb(e,t,n){const a=[],s=[];let o,i,c,l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===(0,r.env)().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));const d=!1;for(const r of t.variableNames){const s={name:r,uniform:e.getUniformLocation(n,r,d),offset:e.getUniformLocation(n,"offset".concat(r),d)};t.enableShapeUniforms&&(s.shape=e.getUniformLocation(n,"".concat(r,"Shape"),d),s.texShape=e.getUniformLocation(n,"".concat(r,"TexShape"),d)),a.push(s)}if(t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",d),c=e.getUniformLocation(n,"outShapeStrides",d),i=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms)for(const r of t.customUniforms)s.push(e.getUniformLocation(n,r.name,d));return{variablesLocations:a,customUniformLocations:s,infLoc:l,nanLoc:u,outShapeLocation:o,outShapeStridesLocation:c,outTexShapeLocation:i}}function ob(e,t){if(e.length!==t.length)throw Error("Binary was compiled with ".concat(e.length," inputs, but ")+"was executed with ".concat(t.length," inputs"));e.forEach((e,n)=>{const a=e.logicalShape,s=t[n],o=s.shape;if(!r.util.arraysEqual(a,o))throw Error("Binary was compiled with different shapes than "+"the current args. Shapes ".concat(a," and ").concat(o," must match"));if(e.isUniform&&s.isUniform)return;const i=e.texShape,c=s.isUniform?null:s.texData.texShape;if(!r.util.arraysEqual(i,c))throw Error("Binary was compiled with different texture shapes than the"+" current args. Shape ".concat(i," and ").concat(c," must match"))})}function ib(e){return(0,r.env)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class cb{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=sy.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Py();this.outputShape=e,this.enableShapeUniforms=ib(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?Wy(["r","c","d"],e):By(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class lb{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=sy.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Py();this.outputShape=e,this.enableShapeUniforms=ib(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?Wy(["r","c","d"],e):By(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class ub{constructor(e){this.variableNames=["A"],this.outTexUsage=oy.DOWNLOAD;const t=Py();this.outputShape=e,this.userCode="\n      ".concat(Gy,"\n\n      void main() {\n        float x = getAAtOutCoords();\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}class db{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=oy.DOWNLOAD;const t=Py();this.outputShape=e,this.userCode="\n      ".concat(Gy,"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}const hb={R:0,G:1,B:2,A:3};class pb{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=Py();this.outputShape=e,this.enableShapeUniforms=ib(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let s="";for(let o=0;o<n.length;o++){const e=n[o];s+="\n          if(offset == ".concat(o,") {\n            result = values[").concat(hb[e],"];\n          }")}this.userCode="\n      ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Uy(e),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ").concat(n.length,");\n\n        flatIndex = idiv(flatIndex, ").concat(n.length,", 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ").concat(a.texture2D,"(A, uv);\n          ").concat(s,"\n        }\n        ").concat(a.output," = vec4(").concat(r,", 0., 0., 0.);\n      }\n    ")}}class fb{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Py();this.outputShape=e,this.enableShapeUniforms=ib(this.outputShape.length);let a="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let t=0;t<=1;t++){const r=2*s+t;a+="\n          localCoords = coords;\n          if(localCoords[2] + ".concat(t," < ").concat(this.enableShapeUniforms?"outShape[2]":"".concat(e[2]),") {\n          localCoords[2] += ").concat(t,";\n          if (localCoords[1] + ").concat(s," < ").concat(this.enableShapeUniforms?"outShape[1]":"".concat(e[1]),") {\n            localCoords[1] += ").concat(s,";\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ").concat(n.texture2D,"(A, uv);\n\n            if (offset == 0) {\n              result[").concat(r,"] = values[0];\n            } else if (offset == 1) {\n              result[").concat(r,"] = values[1];\n            } else if (offset == 2) {\n              result[").concat(r,"] = values[2];\n            } else {\n              result[").concat(r,"] = values[3];\n            }\n          }\n        }\n        ")}this.userCode="\n        ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Uy(e),"\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ").concat(a,"\n\n          ").concat(n.output," = ").concat(r,";\n        }\n    ")}}function mb(e){const t=Py();return function(e,t){const n=Sy(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(hy(e,()=>e.shaderSource(n,t)),hy(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,"".concat(t.version,"\n    precision highp float;\n    ").concat(t.attribute," vec3 clipSpacePos;\n    ").concat(t.attribute," vec2 uv;\n    ").concat(t.varyingVs," vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"))}function gb(e){return function(e,t){const n=Sy(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return hy(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),hy(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function yb(e){return function(e,t){const n=Sy(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return hy(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),hy(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Uint16Array([0,1,2,2,1,3]))}function bb(e,t,n,a,s,o){!function(e,t){const n=(0,r.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const n="[".concat(e,"x").concat(t,"]");throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){const a="[".concat(e,"x").concat(t,"]"),r="[".concat(n,"x").concat(n,"]");throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+r+".")}}(t,n);const i=function(e){return Sy(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}(e),c=e.TEXTURE_2D;return hy(e,()=>e.bindTexture(c,i)),hy(e,()=>e.texParameteri(c,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),hy(e,()=>e.texParameteri(c,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),hy(e,()=>e.texParameteri(c,e.TEXTURE_MIN_FILTER,e.NEAREST)),hy(e,()=>e.texParameteri(c,e.TEXTURE_MAG_FILTER,e.NEAREST)),1===(0,r.env)().getNumber("WEBGL_VERSION")?hy(e,()=>e.texImage2D(c,0,a,t,n,0,s,o,null)):hy(e,()=>e.texStorage2D(c,1,a,t,n)),hy(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[n,t]}}function vb(e){return e.internalFormatFloat}function xb(e){return e.internalFormatHalfFloat}function wb(e){return e.downloadTextureFormat}function kb(e){return e.internalFormatPackedFloat}function Sb(e){return e.internalFormatPackedHalfFloat}function Tb(e,t,n,a,r,s,o,i){const c=e,l=new Float32Array(function(e,t){const[n,a]=uy(e,t);return n*a*4}(s,o));return c.bindBuffer(c.PIXEL_PACK_BUFFER,t),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,l),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),l}class Nb{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=(0,r.env)().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){ny[e]=t}(t,e)):this.gl=ry(t),e=this.gl,2===(0,r.env)().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>hy(t,()=>t.createVertexArray()),this.bindVertexArray=e=>hy(t,()=>t.bindVertexArray(e)),this.deleteVertexArray=e=>hy(t,()=>t.deleteVertexArray(e)),this.getVertexArray=()=>hy(t,()=>t.getParameter(t.VERTEX_ARRAY_BINDING))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>hy(e,()=>t.createVertexArrayOES()),this.bindVertexArray=n=>hy(e,()=>t.bindVertexArrayOES(n)),this.deleteVertexArray=n=>hy(e,()=>t.deleteVertexArrayOES(n)),this.getVertexArray=()=>hy(e,()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES))}let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,r.env)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=fy(this.gl,e),Fy(this.gl,t))this.textureHalfFloatExtension=fy(this.gl,t);else if((0,r.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Fy(this.gl,a))this.colorBufferHalfFloatExtension=fy(this.gl,a);else if((0,r.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Fy(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Fy(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=gb(this.gl),this.indexBuffer=yb(this.gl),this.framebuffer=function(e){return Sy(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=dy(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,r.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;hy(e,()=>e.finish()),hy(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),hy(e,()=>e.deleteFramebuffer(this.framebuffer)),hy(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),hy(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),hy(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=cy(t,n);return bb(e,r,s,vb(a),a.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=cy(t,n);return bb(e,r,s,xb(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=cy(t,n);return bb(e,r,s,wb(a),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){hy(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?2===(0,r.env)().getNumber("WEBGL_VERSION")?hy(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):hy(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):2===(0,r.env)().getNumber("WEBGL_VERSION")?hy(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):hy(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),hy(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),function(e,t,n,a,s,o){let i,c,l;hy(e,()=>e.bindTexture(e.TEXTURE_2D,t)),s instanceof Uint8Array?(i=new Uint8Array(n*a*4),c=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*a*4),c=e.FLOAT,l=o.internalFormatPackedFloat),i.set(s),2===(0,r.env)().getNumber("WEBGL_VERSION")?hy(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,c,i)):hy(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,a,0,e.RGBA,c,i)),hy(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=uy(t,n);return bb(e,r,s,Sb(a),e.RGBA,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=uy(t,n);return bb(e,r,s,kb(a),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(wy(this.gl,this.framebuffer),this.outputTexture=null),hy(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n,a){const[r,s]=cy(t,n),o=new Uint8Array(t*n*4);return hy(e,()=>e.readPixels(0,0,r,s,a.downloadTextureFormat,e.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,a,r,s){return Tb(this.gl,e,0,0,0,r,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const a=e,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const a=function(e,t,n){const a=e.createBuffer();hy(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));const r=16*t*n;return hy(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,r,e.STREAM_READ)),hy(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),hy(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,r.env)().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=a.clientWaitSync(r,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=r}else(0,r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n){const a=new Float32Array(t*n*4);return hy(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a)),a}(this.gl,t,n))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=mb(t));const n=function(e){return Sy(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}(t);hy(t,()=>t.attachShader(n,this.vertexShader)),hy(t,()=>t.attachShader(n,e)),function(e,t){if(hy(e,()=>e.linkProgram(t)),!(0,r.env)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const a=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&yy(t,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;hy(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),function(e,t,n){hy(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),by(e,t,"clipSpacePos",n,3,20,0)&&by(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(hy(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&yy(this.gl,this.program),hy(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(e,t,n){return Sy(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),hy(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),vy(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[a,r]=uy(t,n);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&yy(this.gl,this.program),ky(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}hy(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),hy(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=fy(this.gl,2===(0,r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await r.util.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,(0,r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,(0,r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in(0,r.env)().platform&&(n=(0,r.env)().platform.setTimeoutCustom.bind((0,r.env)().platform)),r.util.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),xy(this.gl,e,this.framebuffer),this.debug&&ky(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(xy(this.gl,this.outputTexture,this.framebuffer),this.debug&&ky(this.gl)):wy(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const a=this.gl;xy(a,e,this.framebuffer),this.debug&&ky(a),this.outputTexture=e,hy(a,()=>a.viewport(0,0,t,n)),hy(a,()=>a.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),hy(this.gl,()=>this.gl.scissor(e,t,n,a))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{mx:Ib,XI:Cb,Nk:Eb,f6:Ab,ct:_b,YG:Rb,hH:Fb,z3:Db,sG:Ob,uM:Mb,vS:zb,qB:Lb,GG:Pb,rq:Bb,lg:Wb,WR:Vb,cu:Ub,GE:Gb,px:Hb,jC:jb,He:qb,hE:Yb,BF:Kb,Dk:Xb,cl:Zb,_B:Qb,ub:$b,_f:Jb,Ku:ev,qy:tv,Zy:nv,bu:av,zv:rv,dH:sv,HS:ov,yH:iv,l3:cv,z9:lv,x6:uv,_m:dv,eW:hv,GK:pv,SP:fv,yr:mv,dl:gv,Dw:yv,xT:bv,_X:vv,wz:xv}=e;function wv(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>"".concat(e,".").concat(t))}function kv(e,t){return 1===t?[e]:wv(e,t)}class Sv{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=ib(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=kv("rc",this.rank),t=eb(this.rank),n=this.getOutOfBoundsCondition(e),a=this.getSetup(e),r=this.getOutput(e);this.userCode="\n        void main() {\n          ".concat(t," rc = getOutputCoords();\n\n          if(").concat(n,") {\n            setOutput(vec4(0));\n          } else {\n            ").concat(a,"\n\n            setOutput(vec4(").concat(r,"));\n          }\n        }\n      ")}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let r="".concat(0===n?"r":"rp1",", ").concat(0===a?"c":"cp1");for(let t=2;t<this.rank;t++)r="".concat(e[e.length-1-t],",")+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return"rc > ".concat(this.enableShapeUniforms?"outShape":this.outputShape[0]);let t="";for(let n=this.rank-2;n<this.rank;n++)t+="".concat(e[n]," >= ").concat(this.enableShapeUniforms?"outShape[".concat(n,"]"):this.outputShape[n]),n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?"outShape[".concat(this.rank," - 1]"):this.outputShape[this.rank-1],a=this.enableShapeUniforms?"outShape[".concat(this.rank," - 2]"):this.outputShape[this.rank-2];return"\n      int r = ".concat(t[0],";\n      int c = ").concat(t[1],";\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ").concat(n,";\n      bool rEdge = rp1 >= ").concat(a,";\n    ")}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){const e=this.enableShapeUniforms?"outShape":this.outputShape[0];return"getA(rc), (rc + 1 >= ".concat(e," ? 0. : getA(rc + 1)), 0, 0")}return"getA(".concat(t[0],"),\n            cEdge ? 0. : getA(").concat(t[1],"),\n            rEdge ? 0. : getA(").concat(t[2],"),\n            rEdge || cEdge ? 0. : getA(").concat(t[3],")")}}class Tv{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=ib(this.outputShape.length);let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2===1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+="\n        ".concat(e,"\n        ").concat(a>0?"if(thisRC.y < rows && thisRC.z < cols){":"","\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[").concat(a,"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ").concat(a>0?"}":"","\n      ")}this.userCode="\n      ".concat(function(e,t){const n=t?Vy(["r","c","d"],"inputShape"):By(["r","c","d"],e);return"\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ".concat(n,"\n      return ivec3(r, c, d);\n    }\n  ")}(t,this.enableShapeUniforms),"\n      ").concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Uy(e),"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ").concat(this.enableShapeUniforms?"outShape[1]":e[1],";\n        int cols = ").concat(this.enableShapeUniforms?"outShape[2]":e[2],";\n\n        ").concat(n,"\n\n        setOutput(result);\n      }\n    ")}}class Nv{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const a=Cv(t,n),r=Ev(e,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const s=Iv(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[r].pop();return this.usedTextures[r].push(e),e}let o;return a===iy.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===iy.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===iy.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===iy.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===iy.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),o}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;const s=Cv(n,a),o=Ev(t,s,a);o in this.freeTextures||(this.freeTextures[o]=[]);const i=Iv(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,a),c=(0,r.env)().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==c&&this._numBytesAllocated>c?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[o].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[o],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used","".concat(this.numFreeTextures," / ").concat(this.numUsedTextures),"(".concat(e,")"));const t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: ".concat(this._numBytesAllocated)),console.log("Bytes unused: ".concat(this._numBytesFree," (").concat(Math.round(100*t),"%)"))}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Iv(e,t,n,a,r){const s=function(e,t){switch(e){case iy.PACKED_2X2_FLOAT32:return kb(t);case iy.PACKED_2X2_FLOAT16:return Sb(t);case iy.UNPACKED_FLOAT32:return vb(t);case iy.UNPACKED_FLOAT16:return xb(t);case iy.PACKED_4X1_UNSIGNED_BYTE:return wb(t);default:throw new Error("Unknown physical texture type ".concat(e))}}(t,a);let o;if(r){const[t,n]=uy(e[0],e[1]);o=t*n}else{const[t,n]=cy(e[0],e[1]);o=t*n}const i=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error("Unknown internal format ".concat(t))}(n,s);return o*i}function Cv(e,t){if(e===oy.UPLOAD)return iy.PACKED_2X2_FLOAT32;if(e===oy.RENDER||null==e)return function(e){return(0,r.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?iy.PACKED_2X2_FLOAT32:iy.UNPACKED_FLOAT32:e?iy.PACKED_2X2_FLOAT16:iy.UNPACKED_FLOAT16}(t);if(e===oy.DOWNLOAD||e===oy.PIXELS)return iy.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type ".concat(e))}function Ev(e,t,n){return"".concat(e[0],"_").concat(e[1],"_").concat(t,"_").concat(n)}class Av{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=ib(this.outputShape.length),this.userCode="\n      float unaryOperation(float x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}const _v="if (isnan(x)) return x;",Rv="return abs(x);";const Fv=_v+"\n  return (x < 0.0) ? 0.0 : x;\n",Dv=_v+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",Ov="return x;";class Mv{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=ib(this.outputShape.length),this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}class zv{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=ib(this.outputShape.length);const t=e.length,n=kv("rc",t),a=eb(t),r=function(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),o=t<=1?"rc":"vec2(".concat(s.join(","),")");this.userCode="\n      void main() {\n        ".concat(a," rc = getOutputCoords();\n        vec4 packedInput = getA(").concat(r,");\n\n        setOutput(getChannel(packedInput, ").concat(o,"));\n      }\n    ")}}const Lv=r.kernel_impls.whereImpl,Pv={};const Bv=(0,r.env)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Wv extends r.KernelBackend{nextDataId(){return Wv.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,r.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof Nb)t=e;else{const n=ry((0,r.env)().getNumber("WEBGL_VERSION"),e);t=new Nb(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=ry((0,r.env)().getNumber("WEBGL_VERSION"));t=new Nb(e),this.binaryCache=((n=(0,r.env)().getNumber("WEBGL_VERSION"))in Pv||(Pv[n]={}),Pv[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Nv(this.gpgpu),this.numMBBeforeWarning=null==(0,r.env)().global.screen?1024:(0,r.env)().global.screen.height*(0,r.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new r.DataStorage(this,(0,r.engine)())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,a,r,s){const o=this.makeTensorInfo(t,n),i=this.texData.get(o.dataId);i.isPacked=!1,i.texture={texture:e,texShape:[a,r]},i.texShape=[a,r];const c=Cy(t),l=new pb(c,!1,s),u=this.runWebGLProgram(l,[o],n,[[a,r]]);return u.shape=t,i.texture=null,this.disposeIntermediateTensorInfo(o),u.dataId}write(e,t,n){if(((0,r.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,r.env)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:oy.UPLOAD,refCount:1}),a}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,a,s){if((0,r.env)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:oy.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:s,slice:o,shape:i,isPacked:c}=t;if(null!=o){let t;t=c?new Mv(i,Ov):new Av(i,Ov);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const l=null!=this.activeTimers;let u,d;if(l&&(u=r.util.now()),"complex64"===a){const e=this.readSync(s.real.dataId),t=this.readSync(s.imag.dataId);d=r.backend_util.mergeRealAndImagArrays(e,t)}else d=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=r.util.now()-u),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}const t=this.texData.get(e),{values:n,shape:a,slice:s,dtype:o,complexTensorInfos:i,isPacked:c}=t;if(null!=s){let t;t=c?new Mv(a,Ov):new Av(a,Ov);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:o}],o),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if((0,r.env)().getBool("DEBUG")&&!(0,r.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,r.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,d=null;if("complex64"!==o&&(0,r.env)().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);d=this.gpgpu.createBufferFromTexture(t.texture.texture,...ly(a))}if(this.pendingRead.set(e,[]),"complex64"!==o&&await this.gpgpu.createAndWaitForFence(),"complex64"===o){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];u=r.backend_util.mergeRealAndImagArrays(t,n)}else if(null==d)u=this.getValuesFromTexture(e);else{const e=r.util.sizeFromShape(a);u=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=d){const e=this.gpgpu.gl;hy(e,()=>e.deleteBuffer(d))}const h=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(e=>e(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,r.engine)().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(e),{values:a,shape:s,slice:o,dtype:i,isPacked:c,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=o){let n;n=c?new Mv(s,Ov):new Av(s,Ov);const a=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:i}],i),r=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),r}if(null==l)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),d=(0,r.engine)().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:d},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map(e=>r.util.decodeString(e));return(0,r.buffer)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,r.buffer)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!py(n)){if((0,r.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value ".concat(n," cannot be represented with your ")+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value ".concat(n," cannot be represented on this device."))}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),s=r.util.sizeFromShape(t);if((0,r.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),a=this.texData.get(n.dataId),r=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...ly(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),r}const o=(0,r.env)().getBool("WEBGL_PACK")&&!0===a,i=o?Cy(t):t,c=o?new db(i):new ub(i),l=this.runWebGLProgram(c,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),d}timerAvailable(){return(0,r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=r.util.flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),o=r.util.flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,a&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=r.util.sum(e),i.getExtraProfileInfo=()=>e.map((e,t)=>({name:o[t],ms:e})).map(e=>"".concat(e.name,": ").concat(e.ms)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:r.util.now(),endMs:null}}endTimer(e){return(0,r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=r.util.now(),e)}async getQueryTime(e){if((0,r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:a,usage:r,isPacked:s,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,c=this.dataRefCount.get(i);c>1?this.dataRefCount.set(i,c-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,r,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Bv;return(0,r.env)().getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&r.util.sizeFromShape(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){r.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Lv(e.shape,t)}packedUnaryOp(e,t,n){const a=new Mv(e.shape,t),s=this.compileAndRun(a,[e],n);return(0,r.engine)().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=sv(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Rv,e.dtype);const t=new Av(e.shape,Rv),n=this.compileAndRun(t,[e]);return(0,r.engine)().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&r.util.isString(n[0])){const s=n.map(e=>r.util.encodeString(e));a=this.write(s,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){return(0,r.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new zv(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Sv(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[Ny(e.shape),...Iy(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},r=[Ny(t),...Iy(t)],s=new Tv(r,n),o=[n],i=this.runWebGLProgram(s,[a],e.dtype,o,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:a,shape:s,dtype:o}=n;if(null!=t){const e=r.util.sizeFromShape(s),n=t[0]*t[1]*4;r.util.assert(e<=n,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const i=Cy(s);let c;c=a?new lb(i):new cb(i);const l=[null!=t?t:ly(i)];return{dtype:o,shape:s,dataId:this.runWebGLProgram(c,[{shape:i,dtype:o,dataId:e}],o,l,!0,t).dataId}}runWebGLProgram(e,t,n,a){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5?arguments[5]:void 0;const i=this.makeTensorInfo(e.outputShape,n),c=this.texData.get(i.dataId);if(e.packedOutput&&(c.isPacked=!0),e.outPackingScheme===sy.DENSE){const t=null!=o?o:ly(e.outputShape);c.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(c.usage=e.outTexUsage),0===r.util.sizeFromShape(i.shape))return c.values=r.util.getTypedArrayFromDType(i.dtype,0),i;const l=[],u=t.map(t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&r.util.sizeFromShape(t.shape)<=(0,r.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!Ay(n.shape,t.shape)){const e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),l.push(t),n=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(i.dataId);const d={shape:i.shape,texData:c,isUniform:!1},h=function(e,t,n){let a="";t.concat(n).forEach(t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const o=t.texData.texShape,{useSqueezeShape:i,uniformShape:c,keptDims:l}=tb(e.packedInputs,t.shape,o);let u="",d="",h="";if(1===c.length&&e.packedInputs){const e=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];u="".concat(e[0]>1,"_").concat(e[1]>1)}else if(2!==c.length||e.packedInputs){if(c.length>2&&!e.packedInputs){const e=r.util.computeStrides(c);h="".concat(e[0]===o[1],"_").concat(e[e.length-1]===o[1])}}else d="".concat(c[0]>1,"_").concat(c[1]>1);const p=t.shape.length,f=2===c.length&&r.util.arraysEqual(t.shape,o),m=1===r.util.sizeFromShape(t.shape),g=r.backend_util.getBroadcastDims(t.shape,n.shape),y=!e.packedInputs&&p===n.shape.length&&r.util.arraysEqual(o,n.texData.texShape),b=e.packedInputs||c.length>2?"":"".concat(o[0]>1,"_").concat(o[1]>1);a+="".concat(p,"_").concat(y,"_").concat(i?l:"","_").concat(c.length,"_").concat(m,"_").concat(g,"_").concat(f,"_").concat(u,"_").concat(d,"_").concat(h,"_").concat(b,"_").concat(s)}else{const e=t.isUniform?"uniform":t.texData.texShape;a+="".concat(t.shape,"_").concat(e,"_").concat(s)}});const s=e.userCode;let o=e.constructor.name;return o+="_"+a+"_"+s+"".concat((0,r.env)().getNumber("WEBGL_VERSION")),o}(e,u,d),p=this.getAndSaveBinary(h,()=>rb(this.gpgpu,e,u,d)),f=null!=this.activeTimers;let m;f&&(m=this.startTimer()),(0,r.env)().get("ENGINE_COMPILE_ONLY")||function(e,t,n,a,s){t.program.enableShapeUniforms||(ob(t.inShapeInfos,n),ob([t.outShapeInfo],[a]));const o=a.texData.texture,i=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(o.texture,i[0],i[1]):e.setOutputMatrixTexture(o.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===(0,r.env)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<n.length;++l){const a=n[l],{uniform:s,offset:o,shape:i,texShape:c}=t.variablesLocations[l];if(i){const{uniformShape:n}=tb(t.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(i,new Int32Array(n));break;case 2:e.gl.uniform2iv(i,new Int32Array(n));break;case 3:e.gl.uniform3iv(i,new Int32Array(n));break;case 4:e.gl.uniform4iv(i,new Int32Array(n))}}if(c&&e.gl.uniform2i(c,a.texData.texShape[0],a.texData.texShape[1]),null!=s)if(a.isUniform)if(r.util.sizeFromShape(a.shape)<2)e.gl.uniform1f(s,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=a.texData.slice&&null!=o&&e.gl.uniform1i(o,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,s,l)}const c=t.outShapeLocation;if(c)switch(a.shape.length){case 1:e.gl.uniform1iv(c,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(c,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(c,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(c,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=r.util.computeStrides(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&s)for(let r=0;r<t.program.customUniforms.length;++r){const n=t.program.customUniforms[r],a=t.customUniformLocations[r],o=s[r];if("float"===n.type)e.gl.uniform1fv(a,o);else if("vec2"===n.type)e.gl.uniform2fv(a,o);else if("vec3"===n.type)e.gl.uniform3fv(a,o);else if("vec4"===n.type)e.gl.uniform4fv(a,o);else if("int"===n.type)e.gl.uniform1iv(a,o);else if("ivec2"===n.type)e.gl.uniform2iv(a,o);else if("ivec3"===n.type)e.gl.uniform3iv(a,o);else{if("ivec4"!==n.type)throw Error("uniform type ".concat(n.type," is not supported yet."));e.gl.uniform4iv(a,o)}}e.executeProgram()}(this.gpgpu,p,u,d,a),l.forEach(e=>this.disposeIntermediateTensorInfo(e)),f&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const g=(0,r.env)().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const e=r.util.now();e-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,r.env)().getBool("WEBGL_LAZILY_UNPACK")&&c.isPacked&&!1===s){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,a,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!(0,r.env)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,r.tidy)(()=>{if(!(0,r.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,r.env)().getBool("DEBUG");(0,r.env)().set("DEBUG",!1);const t=this.abs((0,r.scalar)(1e-8)).dataSync()[0];if((0,r.env)().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:s,texture:o,usage:i,isPacked:c}=t;if(null!=o)return;const l=null!=this.activeTimers;let u;l&&(u=r.util.now());let d=t.texShape;if(null==d&&(d=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=(0,r.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=(0,r.env)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(a===1/0&&(0,r.env)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),t&&(n*=2,a*=2,1===(e=e.map((t,n)=>n>=e.length-2?r.util.nearestLargerEven(e[n]):e[n])).length&&(e=[2,e[0]])),2!==e.length){const t=r.util.squeezeShape(e);e=t.newShape}let s=r.util.sizeFromShape(e),o=null;e.length<=1&&s<=n?o=[1,s]:2===e.length&&e[0]<=n&&e[1]<=n?o=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?o=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?o=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?o=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(o=[e[0],e[1]*e[2]*e[3]]);const i=null!=o&&Math.max(...o)>a&&Math.min(...o)<=(t?2:1)&&Math.min(...o)>0;if(null==o||i)if(t){const t=Ny(e);let n=2,a=2;e.length&&([n,a]=Iy(e)),s=t*(n/2)*(a/2),o=r.util.sizeToSquarishShape(s).map(e=>2*e)}else o=r.util.sizeToSquarishShape(s);return o}(n,c),t.texShape=d),null!=s){const e=Cy(n);let o,i=d[1],h=d[0];const p=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!c&&p||([i,h]=uy(d[0],d[1])),o=c?new fb(e,p):new pb(e,p);const f=p?[h,i]:d,m=this.makeTensorInfo(f,a),g=this.texData.get(m.dataId);g.usage=p?oy.PIXELS:oy.UPLOAD,g.texShape=f,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(m.dataId),i,h,s);const y=[[h,i]],b=!0,v=this.runWebGLProgram(o,[m],a,y,b),x=this.texData.get(v.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,(0,r.env)().get("ENGINE_COMPILE_ONLY")?this.disposeData(v.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(v.dataId)),this.disposeIntermediateTensorInfo(m),l&&(this.uploadWaitMs+=r.util.now()-u)}else{const e=this.acquireTexture(d,i,a,c);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:a}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype ".concat(t))}(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: ".concat(e," MB, ")+"most likely due to a memory leak")}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*r.util.bytesPerElement(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise(e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}});e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await(0,r.nextFrame)(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw gy(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:a,nanLoc:r,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}=sb(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=a,e.nanLoc=r,e.outShapeLocation=s,e.outShapeStridesLocation=o,e.outTexShapeLocation=i}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:a,height:s,width:o,channels:i}=e,c=(0,r.engine)().backend;if(!c.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=c.writeTexture(a,t,n,s,o,i);return(0,r.engine)().makeTensorFromDataId(l,t,n,c)}}Wv.nextDataId=0;r.device_util.isBrowser()&&(0,r.registerBackend)("webgl",()=>new Wv,2);const Vv="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class Uv{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=ib(this.outputShape.length),this.userCode="\n      float binaryOperation(float a, float b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ")}}const Gv="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class Hv{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n);const s=this.outputShape.length;this.enableShapeUniforms=ib(s);let o="";if(a)if(0===s||1===r.util.sizeFromShape(this.outputShape))o="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const e=eb(s);if(o="\n          ".concat(e," coords = getOutputCoords();\n        "),1===s)this.enableShapeUniforms?o+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":o+="\n            result.y = (coords + 1) >= ".concat(this.outputShape[0]," ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ");else{const e=kv("coords",s);this.enableShapeUniforms?o+="\n            bool nextRowOutOfBounds =\n              (".concat(e[s-2]," + 1) >= outShape[").concat(s," - 2];\n            bool nextColOutOfBounds =\n              (").concat(e[s-1]," + 1) >= outShape[").concat(s," - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          "):o+="\n            bool nextRowOutOfBounds =\n              (".concat(e[s-2]," + 1) >= ").concat(this.outputShape[s-2],";\n            bool nextColOutOfBounds =\n              (").concat(e[s-1]," + 1) >= ").concat(this.outputShape[s-1],";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")}}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ").concat(o,"\n\n        setOutput(result);\n      }\n    ")}}function jv(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const qv={kernelName:r.Identity,backendName:"webgl",kernelFunc:jv};function Yv(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.makeTensorInfo(a.shape,"complex64"),o=n.texData.get(s.dataId),i=jv({inputs:{x:a},backend:n}),c=jv({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:c},s}const Kv={kernelName:r.Complex,backendName:"webgl",kernelFunc:Yv},Xv="return (a < 0.) ? b * a : a;",Zv="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Qv={kernelName:r.LeakyRelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{alpha:o}=a,i=n.makeTensorInfo([],"float32",r.util.createScalarValue(o,"float32")),c=(0,r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hv(Zv,s.shape,i.shape):new Uv(Xv,s.shape,i.shape),l=n.runWebGLProgram(c,[s,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},$v="return (a < 0.) ? b * a : a;",Jv="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const ex={kernelName:r.Prelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:s}=t,o=(0,r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hv(Jv,a.shape,s.shape):new Uv($v,a.shape,s.shape);return n.runWebGLProgram(o,[a,s],"float32")}},tx="if (isnan(x)) return x;";function nx(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:a,dtype:s}=e;return e=>{let{inputs:o,backend:i}=e;const{x:c}=o,l=i,u=s||c.dtype;if(l.shouldExecuteOnCPU([c])&&null!=a){const e=l.texData.get(c.dataId),t=a(e.values,u);return l.makeTensorInfo(c.shape,u,t)}let d;return d=(0,r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new Mv(c.shape,n):new Av(c.shape,t),l.runWebGLProgram(d,[c],u)}}function ax(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:a=!1,supportsComplex:s=!1,cpuKernelImpl:o,dtype:i}=e;return e=>{let{inputs:c,backend:l}=e;const{a:u,b:d}=c,h=l;if(s&&"complex64"===u.dtype){const e=h.texData.get(u.dataId),n=h.texData.get(d.dataId),[a,s]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(e=>{const[n,a]=e,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},o={dataId:a.dataId,dtype:a.dtype,shape:d.shape},i=new Uv(t,u.shape,d.shape);return h.runWebGLProgram(i,[s,o],(0,r.upcastType)(n.dtype,a.dtype))}),o=Yv({inputs:{real:a,imag:s},backend:h});return h.disposeIntermediateTensorInfo(a),h.disposeIntermediateTensorInfo(s),o}const p=i||(0,r.upcastType)(u.dtype,d.dtype);if(("string"===u.dtype||"string"===d.dtype||h.shouldExecuteOnCPU([u,d]))&&null!=o){const e=h.texData.get(u.dataId).values,t=h.texData.get(d.dataId).values,n="string"===u.dtype?r.backend_util.fromUint8ToStringArray(e):e,a="string"===u.dtype?r.backend_util.fromUint8ToStringArray(t):t,[s,i]=o(u.shape,d.shape,n,a,p),c=h.makeTensorInfo(i,p);return h.texData.get(c.dataId).values=s,c}let f;return f=(0,r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new Hv(n,u.shape,d.shape,a):new Uv(t,u.shape,d.shape),h.runWebGLProgram(f,[u,d],p)}}function rx(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":Fv;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":Dv;if("prelu"===e)return t?Jv:$v;if("leakyrelu"===e)return t?Zv:Xv;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error("Activation ".concat(e," has not been implemented for the WebGL backend."))}class sx{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=ib(this.outputShape.length);const l=a?e[1]:e[2],u=Math.ceil(l/2),d=a?"i * 2, rc.y":"rc.y, i * 2",h=r?"rc.z, i * 2":"i * 2, rc.z",p=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(o,"\n        }"):c?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(o,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(o,"\n        }"),g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let b="rc.x",v="rc.x";e[0]<t[0]?b="imod(rc.x, ".concat(e[0],")"):t[0]<e[0]&&(v="imod(rc.x, ".concat(t[0],")")),this.userCode="\n      ".concat(m,"\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ").concat(u,".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ").concat(b,";\n        int batchB = ").concat(v,";\n        for (int i = 0; i < ").concat(u,"; i++) {\n          vec4 a = getMatrixA(batchA, ").concat(d,");\n          vec4 b = getMatrixB(batchB, ").concat(h,");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (").concat(p[0]," * ").concat(f[0],");\n          result += (").concat(p[1]," * ").concat(f[1],");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ").concat(y,"\n\n        ").concat(g,"\n\n        setOutput(result);\n      }\n    ")}}const ox="return areal * breal - aimag * bimag;",ix="return areal * bimag + aimag * breal;";class cx{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ")}}const lx="return a * b;";function ux(e){const{inputs:t,backend:n}=e,{a:a,b:s}=t,o=r.backend_util.upcastType(a.dtype,s.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(s.dataId),r=new cx(ox,a.shape,s.shape),o=new cx(ix,a.shape,s.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],c=n.runWebGLProgram(r,i,"float32"),l=n.runWebGLProgram(o,i,"float32"),u=Yv({inputs:{real:c,imag:l},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),u}if(n.shouldExecuteOnCPU([a,s])){const e=n.texData.get(a.dataId),t=n.texData.get(s.dataId),[r,i]=Kb(a.shape,s.shape,e.values,t.values,o),c=n.makeTensorInfo(i,o);return n.texData.get(c.dataId).values=r,c}let i;return i=(0,r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hv(lx,a.shape,s.shape):new Uv(lx,a.shape,s.shape),n.runWebGLProgram(i,[a,s],o)}const dx={kernelName:r.Multiply,backendName:"webgl",kernelFunc:ux};function hx(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{shape:o}=a,i=n,c=r.util.sizeFromShape(s.shape),l=r.util.inferFromImplicitShape(o,c),u=r.util.sizeFromShape(l);r.util.assert(c===u,()=>"The new shape (".concat(l,") has ").concat(u," elements and the old ")+"shape (".concat(s.shape,") has ").concat(c," elements. The new shape and old ")+"shape must have the same number of elements.");const d=i.texData.get(s.dataId);return!d.isPacked||Ay(s.shape,l)||null!==d.texture&&Ay(d.shape,l)?(i.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(e,t,n){const a=[Ny(e.shape),...Iy(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},s=[Ny(t),...Iy(t)],o=new Tv(s,a),i=[a],c=n.runWebGLProgram(o,[r],e.dtype,i,!0);return{dataId:c.dataId,shape:t,dtype:c.dtype}}(s,l,i)}const px={kernelName:r.Reshape,backendName:"webgl",kernelFunc:hx};class fx{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:s,outSize:o}=e;this.outputShape=[a,o];const i=4*Math.floor(n/4),c=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l="sumValue += dot(values * ".concat(r.util.isInt(e)?e.toPrecision(2):e,", ones);")}let u="";s%n>0&&(u="\n        if (inIdx < 0 || inIdx >= ".concat(s,") {\n          return 0.0;\n        }\n      ")),this.userCode="\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ".concat(u,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(l,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ").concat(l,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ").concat(l,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ").concat(l,"\n        }\n        setOutput(sumValue);\n      }\n    ")}}class mx{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let c="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===t?c="sumValue":"prod"===t?c="prodValue":"all"===t?c="allValue":"any"===t&&(c="anyValue");const l=4*Math.floor(n/4),u=n%4;let d="\n      if (".concat("sum"===t,") {\n        sumValue += dot(values, ones);\n      } else if (").concat("prod"===t,") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ").concat(i,"(values, minMaxValue);\n        if (").concat("min"===t," || ").concat("max"===t,") {\n          minMaxValue = ").concat(i,"(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    "),h="vec4";"all"===t?(o="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(o="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";r%n>0&&(p="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat(o,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ").concat(p,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        vec4 minMaxValue = vec4(").concat(o,");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ").concat(l,"; i += 4) {\n          int inIdx = inOffset + i;\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(d,"\n        }\n\n        int inIdx = inOffset + ").concat(l,";\n        if (").concat(1===u,") {\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(d,"\n        } else if (").concat(2===u,") {\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(d,"\n        } else if (").concat(3===u,") {\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ").concat(d,"\n        }\n        setOutput(").concat(c,");\n      }\n    ")}}function gx(e,t,n,a){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],a=r.backend_util.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape);let o=e;for(let r=0;r<s.length;r++){const{inSize:i,windowSize:c,outSize:l}=s[r];let u,d;u="mean"===n?0===r?new fx({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l},i):new fx({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l}):new mx({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l},n),d=o,o=a.runWebGLProgram(u,[o],t),d.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(d)}return o}class yx{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const a=eb(this.rank),r=function(e){const t=e.length;if(t>6)throw Error("Transpose for rank ".concat(t," is not yet supported"));const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let r=0;r<e.length;r++)a[e[r]]=n[r];return a.join()}(t);this.userCode="\n    void main() {\n      ".concat(a," resRC = getOutputCoords();\n      setOutput(getA(").concat(r,"));\n    }\n    ")}}class bx{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank ".concat(this.rank," is not yet supported."));const a=eb(this.rank),r=wv("rc",this.rank),s=new Array(this.rank);for(let l=0;l<t.length;l++)s[t[l]]=r[l];const o="vec2(".concat(s.slice(-2).join(),")"),i="++".concat(r[this.rank-1]," < ").concat(n[this.rank-1]),c="getChannel(getA(".concat(s.join(),"), ").concat(o,")");this.userCode="\n    void main() {\n      ".concat(a," rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ").concat(c,";\n      if(").concat(i,") {\n        result[1] = ").concat(c,";\n      }\n      --").concat(r[this.rank-1],";\n      if(++").concat(r[this.rank-2]," < ").concat(n[this.rank-2],") {\n        result[2] = ").concat(c,";\n        if(").concat(i,") {\n          result[3] = ").concat(c,";\n        }\n      }\n      setOutput(result);\n    }\n    ")}}function vx(e,t,n){const a=(0,r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bx(e.shape,t):new yx(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function xx(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o,keepDims:i}=a;return function(e,t,n,a){const s=t,o=e.shape.length,i=r.util.parseAxisParam(s,e.shape);let c=i;const l=r.backend_util.getAxesPermutation(c,o),u=null!=l;let d=e;u&&(d=vx(e,l,a),c=r.backend_util.getInnerMostAxes(c.length,o)),r.backend_util.assertAxesAreInnerMostDims("sum",c,o);const[h,p]=r.backend_util.computeOutAndReduceShapes(d.shape,c);let f=h;n&&(f=r.backend_util.expandShapeToKeepDim(h,i));const m=r.util.sizeFromShape(p),g=hx({inputs:{x:d},attrs:{shape:[r.util.sizeFromShape(e.shape)/m,m]},backend:a}),y=gx(g,(0,r.sumOutType)(e.dtype),"sum",a),b=hx({inputs:{x:y},attrs:{shape:f},backend:a});return a.disposeIntermediateTensorInfo(g),a.disposeIntermediateTensorInfo(y),u&&a.disposeIntermediateTensorInfo(d),b}(s,o,i,n)}const wx={kernelName:r.Sum,backendName:"webgl",kernelFunc:xx};function kx(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:s}=a,o=n,i=r.shape.length,c=new Array(i);for(let u=0;u<c.length;u++)c[u]=r.shape[s[u]];let l;if(o.shouldExecuteOnCPU([r])){const e=o.texData.get(r.dataId).values,t=vv(e,r.shape,r.dtype,s,c);l=o.makeTensorInfo(c,r.dtype);o.texData.get(l.dataId).values=t}else l=vx(r,s,o);return l}const Sx={kernelName:r.Transpose,backendName:"webgl",kernelFunc:kx};function Tx(e){let{a:t,b:n,transposeA:a,transposeB:s,backend:o,bias:i=null,preluActivationWeights:c=null,leakyreluAlpha:l=0,activation:u=null}=e;const d=t.shape.length,h=n.shape.length,p=a?t.shape[d-2]:t.shape[d-1],f=s?n.shape[h-1]:n.shape[h-2],m=a?t.shape[d-1]:t.shape[d-2],g=s?n.shape[h-2]:n.shape[h-1],y=t.shape.slice(0,-2),b=n.shape.slice(0,-2),v=r.util.sizeFromShape(y),x=r.util.sizeFromShape(b),w=r.broadcast_util.assertAndGetBroadcastShape(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([m,g]);r.util.assert(p===f,()=>"Error in matMul: inner shapes (".concat(p,") and (")+"".concat(f,") of Tensors with shapes ").concat(t.shape," and ")+"".concat(n.shape," and transposeA=").concat(a)+" and transposeB=".concat(s," must match."));const k=a?[v,p,m]:[v,m,p],S=s?[x,g,f]:[x,f,g],T=hx({inputs:{x:t},backend:o,attrs:{shape:k}}),N=hx({inputs:{x:n},backend:o,attrs:{shape:S}}),I=[T,N],C=Math.max(v,x),E=a?T.shape[1]:T.shape[2],A=null!=i,_=null!=c,R="leakyrelu"===u,F=null!=u?rx(u,!0):null;let D;if((1===m||1===g)&&E>1e3&&!1===(A||_||R||null!=F)){let e=T,t=N;a&&(e=kx({inputs:{x:T},backend:o,attrs:{perm:[0,2,1]}}),I.push(e)),s&&(t=kx({inputs:{x:N},backend:o,attrs:{perm:[0,2,1]}}),I.push(t));const n=1===g;let r=e;1!==g&&(r=hx({inputs:{x:e},backend:o,attrs:{shape:[C,E,1]}}),I.push(r));const i=1===g?2:1;let c=t;n&&(c=hx({inputs:{x:t},backend:o,attrs:{shape:[C,1,E]}}),I.push(c));const l=ux({inputs:{a:r,b:c},backend:o});D=xx({inputs:{x:l},backend:o,attrs:{axis:i,keepDims:!0}}),I.push(l)}else{const e=(0,r.upcastType)(t.dtype,n.dtype),u=new sx(k,S,[C,m,g],a,s,A,F,_,R),d=[T,N];if(null!=i&&d.push(i),_&&d.push(c),R){const e=o.makeTensorInfo([],"float32",r.util.createScalarValue(l,"float32"));d.push(e),I.push(e)}D=o.runWebGLProgram(u,d,e)}const O=hx({inputs:{x:D},backend:o,attrs:{shape:w}});I.push(D);for(const r of I)o.disposeIntermediateTensorInfo(r);return O}const Nx={kernelName:r._FusedMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:d}=a;return Tx({a:r,b:s,transposeA:c,transposeB:l,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:u})}},Ix="return abs(x);";const Cx={kernelName:r.Abs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const e=n.texData.get(a.dataId),t=sv(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}let s;return s=(0,r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Mv(a.shape,Ix):new Av(a.shape,Ix),n.runWebGLProgram(s,[a],a.dtype)}},Ex=nx({opSnippet:_v+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Ax={kernelName:r.Acos,backendName:"webgl",kernelFunc:Ex},_x=nx({opSnippet:_v+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Rx={kernelName:r.Acosh,backendName:"webgl",kernelFunc:_x},Fx="return a + b;",Dx=ax({opSnippet:Fx,packedOpSnippet:Fx,supportsComplex:!0,cpuKernelImpl:Ib}),Ox={kernelName:r.Add,backendName:"webgl",kernelFunc:Dx};class Mx{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>"T".concat(t));const n=[];this.variableNames.forEach(e=>{n.push("float v".concat(e," = get").concat(e,"AtOutCoords();"))});const a=this.variableNames.map(e=>"v".concat(e)).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        float result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}class zx{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>"T".concat(t));const n=[];this.variableNames.forEach(e=>{n.push("vec4 v".concat(e," = get").concat(e,"AtOutCoords();"))});const a=this.variableNames.map(e=>"v".concat(e)).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        vec4 result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}const Lx={kernelName:r.AddN,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,s=n;if(1===s.length)return jv({inputs:{x:s[0]},backend:a});if(s.length>(0,r.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:a}),r=e({inputs:s.slice(t),backend:a});return e({inputs:[n,r],backend:a})}const o=s.map(e=>e.dtype).reduce((e,t)=>(0,r.upcastType)(e,t)),i=s.map(e=>e.shape),c=(0,r.env)().getBool("WEBGL_PACK")?new zx(s[0].shape,i):new Mx(s[0].shape,i);return a.runWebGLProgram(c,s,o)}};const Px={kernelName:r.All,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o,keepDims:i}=a,c=s.shape.length,l=r.util.parseAxisParam(o,s.shape);let u=l;const d=r.backend_util.getAxesPermutation(u,c);let h=s;null!=d&&(h=kx({inputs:{x:s},backend:n,attrs:{perm:d}}),u=r.backend_util.getInnerMostAxes(u.length,c)),r.backend_util.assertAxesAreInnerMostDims("all",u,c);const[p,f]=r.backend_util.computeOutAndReduceShapes(h.shape,u),m=hx({inputs:{x:h},backend:n,attrs:{shape:[-1,r.util.sizeFromShape(f)]}}),g=gx(m,m.dtype,"all",n);let y;if(i){y=hx({inputs:{x:g},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(p,l)}})}else y=hx({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),y}};const Bx={kernelName:r.Any,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o,keepDims:i}=a,c=s.shape.length,l=r.util.parseAxisParam(o,s.shape);let u=l;const d=r.backend_util.getAxesPermutation(u,c);let h=s;null!=d&&(h=kx({inputs:{x:s},backend:n,attrs:{perm:d}}),u=r.backend_util.getInnerMostAxes(u.length,c)),r.backend_util.assertAxesAreInnerMostDims("any",u,c);const[p,f]=r.backend_util.computeOutAndReduceShapes(h.shape,u),m=hx({inputs:{x:h},backend:n,attrs:{shape:[-1,r.util.sizeFromShape(f)]}}),g=gx(m,m.dtype,"any",n);let y;if(i){y=hx({inputs:{x:g},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(p,l)}})}else y=hx({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),y}};class Wx{constructor(e,t,n){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,s];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ".concat(a,";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          int inIdx = ").concat(i,";\n          float candidate = getA(batch, inIdx);\n          if (candidate ").concat(o," bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ")}}class Vx{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,r.util.assert(e.length>2,()=>"Packed arg".concat(n.charAt(0).toUpperCase()+n.slice(1)," supports only inputs with rank above 2."));const s=e[e.length-1],o=Math.ceil(s/t);this.outputShape=e.slice(0,-1),o>1&&this.outputShape.push(o),a||this.variableNames.push("bestIndicesA");const i=this.outputShape,c=i.length,l=eb(c),u=kv("coords",c);let d,h;if(1===o){h=c+1;const e=eb(h);d="\n        ".concat(e," sourceLocR = ").concat(e,"(").concat(u.join(),", 0);\n        ++").concat(u[c-1],";\n        ").concat(e," sourceLocG = ").concat(e,"(").concat(u.join(),", 0);\n        ++").concat(u[c-2],";\n        ").concat(e," sourceLocA = ").concat(e,"(").concat(u.join(),", 0);\n        --").concat(u[c-1],";\n        ").concat(e," sourceLocB = ").concat(e,"(").concat(u.join(),", 0);\n        --").concat(u[c-2],";")}else h=c,d="\n        ".concat(l," sourceLocR = coords;\n        ++").concat(u[c-1],";\n        ").concat(l," sourceLocG = coords;\n        ++").concat(u[c-2],";\n        ").concat(l," sourceLocA = coords;\n        --").concat(u[c-1],";\n        ").concat(l," sourceLocB = coords;\n        --").concat(u[c-2],";");const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],m=p.map(e=>"int "+e),g=kv("sourceLocR",h-1).concat("inIdx.r"),y=kv("sourceLocG",h-1).concat("inIdx.g"),b=kv("sourceLocB",h-1).concat("inIdx.b"),v=kv("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=a?"":"\n          inIdx = round(vec4(getBestIndicesAChannel(".concat(g.join(),"),\n                             getBestIndicesAChannel(").concat(y.join(),"),\n                             getBestIndicesAChannel(").concat(b.join(),"),\n                             getBestIndicesAChannel(").concat(v.join(),")));"),k="vec4(\n            getAChannel(".concat(g.join(),"),\n            hasNextCol ? getAChannel(").concat(y.join(),") : 0.,\n            hasNextRow ? getAChannel(").concat(b.join(),") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(").concat(v.join(),") : 0.)"),S=a?"":"\n      float getBestIndicesAChannel(".concat(m.join(),") {\n        return getChannel(getBestIndicesA(").concat(p.join(),"),\n                                          vec2(").concat(p.slice(-2).join(),"));\n      }");this.userCode="\n      float getAChannel(".concat(m.join(),") {\n        return getChannel(getA(").concat(p.join(),"),\n                               vec2(").concat(p.slice(-2).join(),"));\n      }\n      ").concat(S,"\n      void main() {\n        ").concat(l," coords = getOutputCoords();\n        bool hasNextCol = ").concat(u[c-1]," < ").concat(i[c-1]-1,";\n        bool hasNextRow = ").concat(u[c-2]," < ").concat(i[c-2]-1,";\n        ").concat(d,"\n        ivec4 srcIdx = ivec4(sourceLocR").concat(f,", sourceLocG").concat(f,",\n          sourceLocB").concat(f,", sourceLocA").concat(f,") * ").concat(t,";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ").concat(k,";\n\n        for (int i = 0; i < ").concat(t,"; i++) {\n          inIdx = srcIdx;\n          ").concat(w,"\n          vec4 candidate = ").concat(k,";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(").concat(x,"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ")}}function Ux(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,s=t.shape[0],o=t.shape[1];null!=a&&(s=a.shape[0],o=a.shape[1]);const i=r.backend_util.computeOptimalWindowSize(o),c={windowSize:i,inSize:o,batchSize:s,outSize:Math.ceil(o/i)},l=new Wx(c,n,null==a),u=[t];null!=a&&u.push(a);const d=e.runWebGLProgram(l,u,"int32");if(1===d.shape[1])return d;const h=Ux(e,t,n,d);return e.disposeIntermediateTensorInfo(d),h}function Gx(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const s=null!=a?a.shape:t.shape,o=s[s.length-1],i=r.backend_util.computeOptimalWindowSize(o),c=new Vx(s,i,n,null==a),l=null==a?[t]:[t,a],u=e.runWebGLProgram(c,l,"int32");if(u.shape.length===t.shape.length){const a=Gx(e,t,n,u);return e.disposeIntermediateTensorInfo(u),a}return u}function Hx(e,t,n,a){const s=[n];if(r.backend_util.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),s,t.shape.length),!(0,r.env)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],o=e.texData.get(t.dataId);let i=t;null!==o&&o.isPacked&&(i=e.unpackTensor(t),n.push(i));const[c,l]=r.backend_util.computeOutAndReduceShapes(i.shape,s),u=r.util.sizeFromShape(l),d=hx({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(d);const h=Ux(e,d,a);n.push(h);const p=hx({inputs:{x:h},backend:e,attrs:{shape:c}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),p}return Gx(e,t,a)}const jx={kernelName:r.ArgMax,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o}=a;let i=r.util.parseAxisParam(o,s.shape);const c=r.backend_util.getAxesPermutation(i,s.shape.length);let l=s;const u=[];null!=c&&(l=kx({inputs:{x:s},backend:n,attrs:{perm:c}}),u.push(l),i=r.backend_util.getInnerMostAxes(i.length,l.shape.length)),r.backend_util.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);const d=Hx(n,l,i[0],"max");return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}};const qx={kernelName:r.ArgMin,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o}=a;let i=r.util.parseAxisParam(o,s.shape);const c=r.backend_util.getAxesPermutation(i,s.shape.length);let l=s;const u=[];null!=c&&(l=kx({inputs:{x:s},backend:n,attrs:{perm:c}}),u.push(l),i=r.backend_util.getInnerMostAxes(i.length,l.shape.length)),r.backend_util.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);const d=Hx(n,l,i[0],"min");return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}},Yx=nx({opSnippet:_v+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Kx={kernelName:r.Asin,backendName:"webgl",kernelFunc:Yx},Xx=nx({opSnippet:_v+"return log(x + sqrt(x * x + 1.0));"}),Zx={kernelName:r.Asinh,backendName:"webgl",kernelFunc:Xx},Qx=nx({opSnippet:_v+"\n  return atan(x);\n"}),$x={kernelName:r.Atan,backendName:"webgl",kernelFunc:Qx},Jx=ax({opSnippet:Vv+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Gv+"\n  return result;\n"}),ew={kernelName:r.Atan2,backendName:"webgl",kernelFunc:Jx},tw=nx({opSnippet:_v+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),nw={kernelName:r.Atanh,backendName:"webgl",kernelFunc:tw};class aw{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideHeight,i=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m="((batch  * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + d"),g="(xR * ".concat(e.inWidth," + xC) * ").concat(e.inChannels," + d");let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n        const ivec2 pads = ivec2(").concat(h,", ").concat(p,");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ").concat(u,";\n              wR += ").concat(c,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(d,";\n                wC += ").concat(l,") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ").concat(t," currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ").concat(a?r?m:g:"wR * ".concat(d," + wC"),";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let b="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(b="avgValue / max(count, 1.0)");const v=4*Math.floor(s/4),x=s%4,w="\n      if (".concat(f,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n      const ivec2 pads = ivec2(").concat(h,", ").concat(p,");\n      const float initializationValue = ").concat(y,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(y,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ").concat(u,";\n            wR += ").concat(c,") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(v,"; wC += 4) {\n            int xC = xCCorner + wC * ").concat(l,";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              getValue(batch, xR, xC + 3 * ").concat(l,", d)\n            );\n\n            ").concat(w,"\n          }\n\n          int xC = xCCorner + ").concat(v,";\n          if (").concat(1===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(2===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(3===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              initializationValue\n            );\n\n            ").concat(w,"\n          }\n        }\n        setOutput(").concat(b,");\n      }\n    ")}}class rw{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideDepth,i=e.strideHeight,c=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let v="0.0";if(b||(v="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec3 strides =\n            ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n        const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ").concat(h,";\n              wD += ").concat(l,") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int wR = 0; wR < ").concat(p,";\n                wR += ").concat(u,") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int wC = 0; wC < ").concat(f,";\n                  wC += ").concat(d,") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ").concat(t," currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ").concat(a?r?"(((batch * ".concat(e.inDepth," + xD) * ").concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"((xD * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"wD * ".concat(p," * ").concat(f," +\n                      wR * ").concat(f," + wC"),";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let x="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(x="avgValue / max(count, 1.0)");const w=4*Math.floor(s/4),k=s%4,S="\n      if (".concat(b,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec3 strides =\n        ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n      const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n      const float initializationValue = ").concat(v,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(v,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ").concat(h,";\n            wD += ").concat(l,") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(p,";\n            wR += ").concat(u,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(w,"; wC += 4) {\n              int xC = xCCorner + wC * ").concat(d,";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 3 * ").concat(d,", ch)\n              );\n\n              ").concat(S,"\n            }\n\n            int xC = xCCorner + ").concat(w,";\n            if (").concat(1===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(S,"\n            } else if (").concat(2===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(S,"\n            } else if (").concat(3===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(d,", ch),\n                initializationValue\n              );\n\n              ").concat(S,"\n            }\n          }\n        }\n        setOutput(").concat(x,");\n      }\n    ")}}const sw={kernelName:r.AvgPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;zy(s,"avgPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(i,1),()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'"));const u=r.backend_util.computePool2DInfo(s.shape,o,i,1,c,l);if(1===u.filterWidth&&1===u.filterHeight&&r.util.arraysEqual(u.inShape,u.outShape))return jv({inputs:{x:s},backend:n});const d=new aw(u,"avg",!1);return n.runWebGLProgram(d,[s],"float32")}};const ow={kernelName:r.AvgPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{filterSize:o,strides:i,pad:c,dimRoundingMode:l,dataFormat:u}=a,d=r.backend_util.computePool3DInfo(s.shape,o,i,[1,1,1],c,l,u),h=new rw(d,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class iw{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=i-1-e.padInfo.top,u=c-1-e.padInfo.left,d=1/(t*n);this.userCode="\n      const ivec2 pads = ivec2(".concat(l,", ").concat(u,");\n      const float avgMultiplier = float(").concat(d,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(i,";\n            wR += ").concat(s,") {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(c,";\n            wC+= ").concat(o,") {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class cw{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=u-1-e.padInfo.front,f=d-1-e.padInfo.top,m=h-1-e.padInfo.left,g=1/(t*n*a);this.userCode="\n      const ivec3 pads = ivec3(".concat(p,", ").concat(f,", ").concat(m,");\n      const float avgMultiplier = float(").concat(g,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(u,";\n            wD += ").concat(i,") {\n          float dyD = float(dyDCorner + wD) / ").concat(r,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(d,";\n              wR += ").concat(c,") {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(h,";\n                wC += ").concat(l,") {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const lw={kernelName:r.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:o}=t,i=o,{filterSize:c,strides:l,pad:u,dimRoundingMode:d}=a,h=r.backend_util.computePool3DInfo(i.shape,c,l,[1,1,1],u,d),p=new cw(h);return n.runWebGLProgram(p,[s],i.dtype)}};const uw={kernelName:r.AvgPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:o}=t,i=o;zy([s,o],"avgPoolGrad");const{filterSize:c,strides:l,pad:u}=a,d=r.backend_util.computePool2DInfo(i.shape,c,l,1,u),h=new iw(d);return n.runWebGLProgram(h,[s],i.dtype)}};const dw={kernelName:r.BatchMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:o,transposeB:i}=a;return Tx({a:r,b:s,transposeA:o,transposeB:i,backend:n})}};class hw{constructor(e,t,n,a,s,o){this.outputShape=[],this.variableNames=["x","mean","variance"],r.backend_util.assertAndGetBroadcastShape(e,t),r.backend_util.assertAndGetBroadcastShape(e,n);let i="0.0";null!=a&&(r.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="1.0";null!=s&&(r.backend_util.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ".concat(i,";\n        float scale = ").concat(c,";\n        float inv = scale * inversesqrt(variance + float(").concat(o,"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ")}}class pw{constructor(e,t,n,a,s,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],r.backend_util.assertAndGetBroadcastShape(e,t),r.backend_util.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=a&&(r.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="vec4(1.0)";null!=s&&(r.backend_util.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        vec4 offset = ".concat(i,";\n        vec4 scale = ").concat(c,";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(").concat(o,"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ")}}const fw={kernelName:r.FusedBatchNorm,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:s,mean:o,variance:i,offset:c,scale:l}=t;r.util.assert(o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),r.util.assert(null==c||o.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),r.util.assert(null==l||o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=a;null==u&&(u=.001);const d=[s,o,i];let h=null;null!=c&&(h=c.shape,d.push(c));let p=null;null!=l&&(p=l.shape,d.push(l));const f=(0,r.env)().getBool("WEBGL_PACK_NORMALIZATION")?new pw(s.shape,o.shape,i.shape,h,p,u):new hw(s.shape,o.shape,i.shape,h,p,u);return n.runWebGLProgram(f,d,d[0].dtype)}};class mw{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=eb(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return gw.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error("Slicing for rank ".concat(e," is not yet supported"))}(this.rank);let a;const r=e.map((e,t)=>"sourceLoc.".concat(gw[t]," = start[").concat(t,"] + coords.").concat(gw[t],";"));a="\n        ".concat(t," sourceLoc;\n        ").concat(t," coords = getOutputCoords();\n        ").concat(r.join("\n"),"\n      "),this.userCode="\n      void main() {\n        ".concat(a,"\n        setOutput(getSource(").concat(n,"));\n      }\n    ")}}const gw=["x","y","z","w","u","v"];class yw{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=eb(this.rank),n=kv("coords",this.rank),a=kv("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":"vec2(".concat(a.slice(-2).join(),")"),s="getChannel(getSource(".concat(a.join(),"), ").concat(r,")"),o="\n      result.x = ".concat(s,";\n      if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n        ++").concat(a[this.rank-1],";\n        result.y = ").concat(s,";\n        --").concat(a[this.rank-1],";\n      }\n    "),i=1===this.rank?"":"\n      --".concat(n[this.rank-1],";\n      if (++").concat(n[this.rank-2]," < ").concat(e[this.rank-2],") {\n        ++").concat(a[this.rank-2],";\n        result.z = ").concat(s,";\n        if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n          ++").concat(a[this.rank-1],";\n          result.w = ").concat(s,";\n        }\n      }\n    "),c=this.rank<=4?"sourceLoc = coords +\n            ".concat(t,"(").concat(e.map((e,t)=>"start[".concat(t,"]")).join(),");"):e.map((e,t)=>"".concat(a[t]," = ").concat(n[t]," + start[").concat(t,"];")).join("\n");this.userCode="\n      void main() {\n        ".concat(t," coords = getOutputCoords();\n        ").concat(t," sourceLoc;\n        ").concat(c,"\n        vec4 result = vec4(0.);\n        ").concat(o,"\n        ").concat(i,"\n        setOutput(result);\n      }\n    ")}}function bw(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{begin:o,size:i}=a,[c,l]=r.slice_util.parseSliceParams(s,o,i);if(r.slice_util.assertParamsValid(s,c,l),0===r.util.sizeFromShape(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=ov(e.values,c,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:u}=n.texData.get(s.dataId),d=r.slice_util.isSliceContinous(s.shape,c,l);if(u||!d){const e=(0,r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yw(l):new mw(l),t=[c];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,a){const s=a.texData.get(e.dataId),o=a.makeTensorInfo(n,e.dtype),i=a.texData.get(o.dataId);Object.assign(i,s),i.refCount=1,i.shape=n,i.dtype=e.dtype;let c=r.slice_util.computeFlatOffset(t,r.util.computeStrides(e.shape));s.slice&&(c+=s.slice.flatOffset),i.slice={flatOffset:c,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=a.dataRefCount.get(i.slice.origDataId)||1;return a.dataRefCount.set(i.slice.origDataId,l+1),o}(s,c,l,n)}const vw={kernelName:r.Slice,backendName:"webgl",kernelFunc:bw},xw={kernelName:r.BatchToSpaceND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:o,crops:i}=a;r.util.assert(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const c=o.reduce((e,t)=>e*t),l=r.backend_util.getReshaped(s.shape,o,c),u=r.backend_util.getPermuted(l.length,o.length),d=r.backend_util.getReshapedPermuted(s.shape,o,c),h=r.backend_util.getSliceBeginCoords(i,o.length),p=r.backend_util.getSliceSize(d,i,o.length),f=[],m=hx({inputs:{x:s},backend:n,attrs:{shape:l}}),g=kx({inputs:{x:m},backend:n,attrs:{perm:u}}),y=hx({inputs:{x:g},backend:n,attrs:{shape:d}}),b=bw({inputs:{x:y},backend:n,attrs:{begin:h,size:p}});return f.push(m),f.push(g),f.push(y),f.forEach(e=>n.disposeIntermediateTensorInfo(e)),b}};const ww={kernelName:r.Bincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o}=a,i=n.readSync(r.dataId),c=n.readSync(s.dataId),l=Cb(i,c,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,l)}};const kw={kernelName:r.BitwiseAnd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:a,b:s}=t,o=(0,r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=(0,r.env)().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([a,s])||1===i){const e=n.texData.get(a.dataId).values,t=n.texData.get(s.dataId).values,[r,o]=Ab(a.shape,s.shape,e,t,a.dtype),i=n.makeTensorInfo(o,a.dtype);return n.texData.get(i.dataId).values=r,i}let c;return c=o?new Hv("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",a.shape,s.shape,!1):new Uv("\n  return float(int(a.r) & int(b.r));\n",a.shape,s.shape),n.runWebGLProgram(c,[a,s],a.dtype)}};const Sw={kernelName:r.BroadcastArgs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:s}=t,o=n.readSync(a.dataId),i=n.readSync(s.dataId),c=r.backend_util.assertAndGetBroadcastShape(Array.from(o),Array.from(i));return n.makeTensorInfo([c.length],"int32",Int32Array.from(c))}},Tw=ax({opSnippet:"return float(a != b);",cpuKernelImpl:Zb,dtype:"bool"}),Nw={kernelName:r.NotEqual,backendName:"webgl",kernelFunc:Tw};function Iw(e){const{inputs:t,backend:n}=e,{input:a}=t;return jv({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const Cw={kernelName:r.Real,backendName:"webgl",kernelFunc:Iw};const Ew={kernelName:r.Cast,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:s}=t,{x:o}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===o.dtype)return jv({inputs:{x:o},backend:a});const t=r.zeros(o.shape),n=e({inputs:{x:o},backend:a,attrs:{dtype:"float32"}}),s=Yv({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),s}if("complex64"===o.dtype){const t=Iw({inputs:{input:o},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:i}});return a.disposeIntermediateTensorInfo(t),n}if(!r.util.hasEncodingLoss(o.dtype,i)){const e=jv({inputs:{x:o},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(a.shouldExecuteOnCPU([o])){const e=a.texData.get(o.dataId).values,[t,n,r]=_b(e,o.shape,o.dtype,i);return a.makeTensorInfo(t,n,r)}if("int32"===i)return function(e,t){const n=new Av(e.shape,"return float(int(x));"),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(o,a);if("bool"===i){const e=a.makeTensorInfo([],"bool",r.util.getTypedArrayFromDType("bool",1)),t=Tw({inputs:{a:o,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error("Error in Cast: failed to cast ".concat(o.dtype," to ").concat(i))}},Aw="return ceil(x);",_w=nx({opSnippet:Aw,packedOpSnippet:Aw,cpuKernelImpl:Rb}),Rw={kernelName:r.Ceil,backendName:"webgl",kernelFunc:_w};class Fw{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class Dw{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const Ow={kernelName:r.ClipByValue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{clipValueMin:o,clipValueMax:i}=a;let c;c=(0,r.env)().getBool("WEBGL_PACK_CLIP")?new Dw(s.shape):new Fw(s.shape);const l=[[o],[i]];return n.runWebGLProgram(c,[s],s.dtype,l)}};class Mw{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function zw(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const Lw={kernelName:r.ComplexAbs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=n.texData.get(a.dataId),s=new Mw(a.shape),o=[zw(a,r.complexTensorInfos.real),zw(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(s,o,o[0].dtype)}};class Pw{constructor(e){this.outputShape=[],this.outputShape=r.backend_util.computeOutShape(e,1),this.variableNames=e.map((e,t)=>"T".concat(t));const t=new Array(e.length-1);t[0]=e[0][1];for(let r=1;r<t.length;r++)t[r]=t[r-1]+e[r][1];const n=["if (yC < ".concat(t[0],") setOutput(getT0(yR, yC));")];for(let r=1;r<t.length;r++){const e=t[r-1];n.push("else if (yC < ".concat(t[r],") ")+"setOutput(getT".concat(r,"(yR, yC-").concat(e,"));"))}const a=t.length,s=t[t.length-1];n.push("else setOutput(getT".concat(a,"(yR, yC-").concat(s,"));")),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ".concat(n.join("\n        "),"\n      }\n    ")}}class Bw{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=r.backend_util.computeOutShape(e,t);const n=this.outputShape,a=n.length,s=eb(a),o=kv("coords",a),i=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map((e,t)=>"T".concat(t));const c=new Array(e.length-1);c[0]=e[0][t];for(let r=1;r<c.length;r++)c[r]=c[r-1]+e[r][t];const l=i[t],u=i.slice(-2),d=i.join();let h="if (".concat(l," < ").concat(c[0],") {\n        return getChannel(\n            getT0(").concat(d,"), vec2(").concat(u.join(),"));\n        }");for(let r=1;r<c.length;r++){const e=c[r-1];h+="\n        if (".concat(l," < ").concat(c[r],"  && ").concat(l," >= ").concat(c[r-1],") {\n          return getChannel(\n            getT").concat(r,"(").concat(Ww(i,l,e),"),\n            vec2(").concat(Ww(u,l,e),"));\n        }")}const p=c.length,f=c[c.length-1];h+="\n        return getChannel(\n          getT".concat(p,"(").concat(Ww(i,l,f),"),\n          vec2(").concat(Ww(u,l,f),"));"),this.userCode="\n      float getValue(".concat(i.map(e=>"int "+e),") {\n        ").concat(h,"\n      }\n\n      void main() {\n        ").concat(s," coords = getOutputCoords();\n        vec4 result = vec4(getValue(").concat(o,"), 0., 0., 0.);\n\n        ").concat(o[a-1]," = ").concat(o[a-1]," + 1;\n        if (").concat(o[a-1]," < ").concat(n[a-1],") {\n          result.g = getValue(").concat(o,");\n        }\n\n        ").concat(o[a-2]," = ").concat(o[a-2]," + 1;\n        if (").concat(o[a-2]," < ").concat(n[a-2],") {\n          result.a = getValue(").concat(o,");\n        }\n\n        ").concat(o[a-1]," = ").concat(o[a-1]," - 1;\n        if (").concat(o[a-2]," < ").concat(n[a-2]," &&\n            ").concat(o[a-1]," < ").concat(n[a-1],") {\n          result.b = getValue(").concat(o,");\n        }\n        setOutput(result);\n      }\n    ")}}function Ww(e,t,n){const a=e.indexOf(t);return e.map((e,t)=>t===a?"".concat(e," - ").concat(n):e).join()}function Vw(e){const{inputs:t,backend:n}=e,{input:a}=t;return jv({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const Uw={kernelName:r.Imag,backendName:"webgl",kernelFunc:Vw};function Gw(e,t,n){const a=e[0].dtype;if("complex64"===a){const a=e.map(e=>Iw({inputs:{input:e},backend:n})),r=e.map(e=>Vw({inputs:{input:e},backend:n})),s=Gw(a,t,n),o=Gw(r,t,n),i=Yv({inputs:{real:s,imag:o},backend:n});return a.forEach(e=>n.disposeIntermediateTensorInfo(e)),r.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),i}let s=n.shouldExecuteOnCPU(e);if("string"===a&&(s=!0),s){const s=e.map(e=>{const a=r.util.sizeFromShape(e.shape.slice(t));return hx({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})}),o=s.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),i=r.backend_util.computeOutShape(s.map(e=>e.shape),1),c=1===s[0].shape[0],l=Fb(o,i,a,c),u=r.backend_util.computeOutShape(e.map(e=>e.shape),t),d=n.makeTensorInfo(u,a,l);return s.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}const o=e.filter(e=>r.util.sizeFromShape(e.shape)>0),i=(0,r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(1===o.length){const t=i?new Av(e[0].shape,Ov):new Mv(e[0].shape,Ov);return n.runWebGLProgram(t,e,a)}const c=(0,r.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>c){const e=[];for(let r=0;r<o.length;r+=c){const a=o.slice(r,r+c);e.push(Gw(a,t,n))}const a=Gw(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return a}if(i){const e=new Bw(o.map(e=>e.shape),t);return n.runWebGLProgram(e,o,a)}const{tensors2D:l,outShape:u}=function(e,t,n){const a=r.backend_util.computeOutShape(e.map(e=>e.shape),t),s=e.map(e=>hx({inputs:{x:e},attrs:{shape:[-1,r.util.sizeFromShape(e.shape.slice(t))]},backend:n}));return{tensors2D:s,outShape:a}}(o,t,n),d=new Pw(l.map(e=>e.shape)),h=n.runWebGLProgram(d,l,a);l.forEach(e=>n.disposeIntermediateTensorInfo(e));const p=hx({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),p}function Hw(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a,o=r.util.parseAxisParam(s,t[0].shape)[0],i=t.map(e=>e.shape);r.backend_util.assertParamsConsistent(i,o);const c=r.backend_util.computeOutShape(t.map(e=>e.shape),o);if(0===r.util.sizeFromShape(c))return n.makeTensorInfo(c,t[0].dtype,[]);const l=t.filter(e=>r.util.sizeFromShape(e.shape)>0);return 1===l.length?jv({inputs:{x:l[0]},backend:n}):Gw(l,o,n)}const jw={kernelName:r.Concat,backendName:"webgl",kernelFunc:Hw};class qw{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,c=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let v="",x="";n&&(v=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),x="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(v,"\n\n      const ivec2 strides = ivec2(").concat(i,", ").concat(c,");\n      const ivec2 pads = ivec2(").concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[").concat(b,"];\n\n        ivec2 xRCCorner =\n            ivec2(coords[").concat(g,"], coords[").concat(y,"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(d,"; wR++) {\n          int xR = xRCorner + wR * ").concat(l,";\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(h,"; wC++) {\n            int xC = xCCorner + wC * ").concat(u,";\n\n            if (xC < 0 || xC >= ").concat(e.inWidth,") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (").concat(m,") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (").concat(1===f,") {\n\n              if (").concat(m,") {\n                dotProd +=\n                    getX(batch, xR, xC, ").concat(p,") *\n                    getW(wR, wC, ").concat(p,", d2);\n              } else {\n                dotProd +=\n                    getX(batch, ").concat(p,", xR, xC) *\n                    getW(wR, wC, ").concat(p,", d2);\n              }\n\n            } else if (").concat(2===f,") {\n              vec2 wValues = vec2(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2)\n              );\n\n              if (").concat(m,") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (").concat(3===f,") {\n              vec3 wValues = vec3(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2),\n                getW(wR, wC, ").concat(p," + 2, d2)\n              );\n\n              if (").concat(m,") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1),\n                  getX(batch, xR, xC, ").concat(p," + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC),\n                  getX(batch, ").concat(p," + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ").concat(w,"\n        ").concat(x,"\n        setOutput(result);\n      }\n    ")}}class Yw{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.filterDepth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3(".concat(r,", ").concat(s,", ").concat(o,");\n      const ivec3 pads = ivec3(").concat(t,", ").concat(n,", ").concat(a,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(u,"; wF++) {\n          int xF = xFCorner + wF * ").concat(i,";\n\n          if (xF < 0 || xF >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(d,"; wR++) {\n            int xR = xRCorner + wR * ").concat(c,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(h,"; wC++) {\n              int xC = xCCorner + wC * ").concat(l,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (").concat(1===f,") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ").concat(p,") *\n                  getW(wF, wR, wC, ").concat(p,", d2);\n              } else if (").concat(2===f,") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (").concat(3===f,") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1),\n                  getX(batch, xF, xR, xC, ").concat(p," + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2),\n                  getW(wF, wR, wC, ").concat(p," + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Kw{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ib(this.outputShape.length);const o=e.padInfo.left,i=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,d=u;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let r=0;r<u;r++)h+="\n           vec4 xTexelC".concat(2*r,";\n           int xTexelC").concat(2*r,"Ready;\n           vec4 xTexelC").concat(2*r+1,";\n           int xTexelC").concat(2*r+1,"Ready;\n           vec4 xC").concat(r,";");h+="\n     for (int r = 0; r < ".concat(l,"; r++) {\n      for (int d1 = 0; d1 < ").concat(e.inChannels,"; d1 += 2) {\n       ");for(let r=0;r<u;r++)h+="\n           xTexelC".concat(2*r," = vec4(0.0);\n           xTexelC").concat(2*r,"Ready = 0;\n           xTexelC").concat(2*r+1," = vec4(0.0);\n           xTexelC").concat(2*r+1,"Ready = 0;\n           xC").concat(r," = vec4(0.0);");h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let g=0;g<(d+1)/2;g++){const t=2*g;if(h+="\n           xC = xCCorner + ".concat(t*c,";\n           "),1===i){if(t<u&&(o%2===1?(h+="\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n               "),h+=1===c&&t>0?"\n                 xC".concat(t," = vec4(xTexelC").concat(t-2,".zw, xTexelC").concat(t,".xy);\n                 "):"\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC".concat(t," = vec4(previous.zw, xTexelC").concat(t,".xy);\n                   } else {\n                     xC").concat(t," = vec4(0.0, 0.0, xTexelC").concat(t,".xy);\n                   }\n                   ")):h+="\n                 if (xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xC").concat(t," = xTexelC").concat(t,";\n                 "),t+1<u)){const e=o%2===0?r.util.nearestLargerEven(c):c;c%2===0&&o%2===1||c%2!==0&&o%2!==1?(h+="\n                   xCOffset = xC + imod(pads[1], 2) + ".concat(e,";\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                     xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC").concat(t+1,".zw = vec2(0.0);\n                     }\n                     xTexelC").concat(t+1,"Ready = 1;\n                   }\n                   "),h+=c>1?"\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC".concat(t+1," = vec4(previous.zw, xTexelC").concat(t+1,".xy);\n                     } else {\n                      xC").concat(t+1," = vec4(0.0, 0.0, xTexelC").concat(t+1,".xy);\n                     }\n                     "):"\n                     xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".xy);\n                     ")):h+=1===e?"\n                     xC".concat(t+1," = xTexelC").concat(t,";\n                     "):"\n                     xCOffset = xC + ".concat(e,";\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                       xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC").concat(t+1,".zw = vec2(0.0);\n                       }\n                       xTexelC").concat(t+1,"Ready = 1;\n                     }\n\n                     xC").concat(t+1," = xTexelC").concat(t+1,";\n                     ")}}else t<u&&(o%2===1?(h+="\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n               "),t+1<u&&(h+="\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC".concat(t+1," = vec4(xTexelC").concat(t+1,".xy, final.xy);\n                 "))):(h+="\n                 if(xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(\n                   xTexelC").concat(t,".xy, xTexelC").concat(t+1,".xy);\n               "),t+1<u&&(h+="\n                   xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n                 "))));t<u&&(h+="\n             wTexel = getW(r, ".concat(t,", d1, d2);\n             dotProd += xC").concat(t,".xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ").concat(e.inChannels,") {\n               dotProd += xC").concat(t,".yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           "),t+1<u&&(h+="\n               wTexel = getW(r, ".concat(t+1,", d1, d2);\n               dotProd += xC").concat(t+1,".xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ").concat(e.inChannels,") {\n                 dotProd += xC").concat(t+1,".yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             ")))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let p="",f="";n&&(p=a?"vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ".concat(n,"\n         }"):s?"vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ".concat(n,"\n         }"):"vec4 activation(vec4 x) {\n           ".concat(n,"\n         }"),f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n       ".concat(p,"\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ").concat(h,"\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ").concat(m,"\n         ").concat(f,"\n         setOutput(result);\n       }\n     ")}}class Xw{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=ib(this.outputShape.length);const{dataFormat:n}=t,a=Py(),r="channelsLast"===n,s=r?1:2,o=r?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":"if(blockIndex < ".concat(e[2]," && pos < ").concat(e[1],") {");let c="";for(let l=0;l<=1;l++)for(let e=0;e<=1;e++)c+="\n          blockIndex = rc.z + ".concat(e,";\n          pos = rc.y + ").concat(l,";\n\n          ").concat(i,"\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[").concat(s,"] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[").concat(o,"] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (").concat(r,") {\n                  innerDims = vec2(d1, ch);\n                  result[").concat(2*l+e,"] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[").concat(2*l+e,"] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ");this.userCode="\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ".concat(c,"\n\n        ").concat(a.output," = result;\n      }\n    ")}}function Zw(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function Qw(e){let{x:t,filter:n,convInfo:a,backend:s,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:l=null}=e;const u=t.shape,d=s.texData.get(t.dataId),h=a.inChannels,p=u[0]*u[1]*u[2],f=a.outChannels,m="channelsLast"===a.dataFormat,g=!1;let y;const b=[];if(null!=i){const e=Zw(i.shape,m);null!=e&&(i=hx({inputs:{x:i},backend:s,attrs:{shape:e}}),b.push(i))}if(null!=o){const e=Zw(o.shape,m);null!=e&&(o=hx({inputs:{x:o},backend:s,attrs:{shape:e}}),b.push(o))}if(!((1===p||1===f)&&h>1e3)&&d.isPacked&&m&&null!=d.texture&&u[2]%2!==0&&r.util.arraysEqual(d.shape.slice(-3),u.slice(-3))){const e=u[0]*u[1]*(u[2]+1),h={dataId:t.dataId,shape:[1,e,a.inChannels],dtype:t.dtype},p=d.shape;d.shape=d.shape.slice(),d.shape[d.shape.length-2]++,r.util.assert(Ay(d.shape,h.shape),()=>"packed reshape ".concat(d.shape," to ").concat(h.shape," isn't free"));const f=hx({inputs:{x:n},backend:s,attrs:{shape:[1,a.inChannels,a.outChannels]}});b.push(f);const m=Tx({a:h,b:f,backend:s,transposeA:false,transposeB:g,bias:o,activation:l,preluActivationWeights:i,leakyreluAlpha:c}),v=s.texData.get(m.dataId);r.util.assert(v.isPacked,()=>"batchMatMul result is expected to be packed"),d.shape=p,v.shape=a.outShape,y=jv({inputs:{x:m},backend:s}),y.shape=a.outShape,b.push(m)}else{const e=a.outHeight*a.outWidth,r=hx({inputs:{x:t},backend:s,attrs:{shape:m?[a.batchSize,e,a.inChannels]:[a.batchSize,a.inChannels,e]}}),u=hx({inputs:{x:n},backend:s,attrs:{shape:[1,a.inChannels,a.outChannels]}}),d=Tx({a:m?r:u,b:m?u:r,transposeA:!m,transposeB:g,backend:s,bias:o,activation:l,preluActivationWeights:i,leakyreluAlpha:c});y=hx({inputs:{x:d},backend:s,attrs:{shape:a.outShape}}),b.push(r),b.push(u),b.push(d)}for(const r of b)s.disposeIntermediateTensorInfo(r);return y}function $w(e){let{x:t,filter:n,convInfo:a,backend:s,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:l=null}=e;const{filterWidth:u,filterHeight:d,inChannels:h,outWidth:p,outHeight:f,dataFormat:m}=a,g="channelsLast"===m,y=u*d*h,b=f*p,v=[a.batchSize,y,b],x=[];if(null!=i){const e=Zw(i.shape,g);null!=e&&(i=hx({inputs:{x:i},backend:s,attrs:{shape:e}}),x.push(i))}if(null!=o){const e=Zw(o.shape,g);null!=e&&(o=hx({inputs:{x:o},backend:s,attrs:{shape:e}}),x.push(o))}const w=hx({inputs:{x:n},backend:s,attrs:{shape:[1,y,r.util.sizeFromShape(n.shape)/y]}});x.push(w);const k=new Xw(v,a),S=[t.shape,[a.padInfo.top,a.padInfo.left],[a.strideHeight,a.strideWidth],[a.dilationHeight,a.dilationWidth],[a.inChannels],[a.filterWidth*a.inChannels],[a.outWidth]],T=s.runWebGLProgram(k,[t],"float32",S),N=hx({inputs:{x:T},backend:s,attrs:{shape:v}});x.push(T),x.push(N);const I=null!=o,C=null!=i,E="leakyrelu"===l,A=l?rx(l,!0):null,_=new sx(g?N.shape:w.shape,g?w.shape:N.shape,g?[a.batchSize,b,a.outChannels]:[a.batchSize,a.outChannels,b],!0,!1,I,A,C,E),R=g?[N,w]:[w,N];if(o&&R.push(o),C&&R.push(i),E){const e=s.makeTensorInfo([],"float32",r.util.createScalarValue(c,"float32"));R.push(e),x.push(e)}const F=s.runWebGLProgram(_,R,"float32"),D=hx({inputs:{x:F},backend:s,attrs:{shape:a.outShape}});x.push(F);for(const r of x)s.disposeIntermediateTensorInfo(r);return D}const Jw={kernelName:r.Conv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:o}=t,{strides:i,pad:c,dataFormat:l,dilations:u,dimRoundingMode:d}=a,h=r.backend_util.convertConv2DDataFormat(l),p=r.backend_util.computeConv2DInfo(s.shape,o.shape,i,u,c,d,!1,h);let f;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(p.strideWidth<=2&&"channelsLast"===h&&(0,r.env)().getBool("WEBGL_EXP_CONV")){const e=new Kw(p),t=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];f=n.runWebGLProgram(e,[s,o],"float32",t)}else if((0,r.env)().getBool("WEBGL_CONV_IM2COL"))f=$w({x:s,filter:o,convInfo:p,backend:n});else{const e=new qw(p);f=n.runWebGLProgram(e,[s,o],"float32")}else f=Qw({x:s,filter:o,convInfo:p,backend:n});const m=hx({inputs:{x:f},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class ek{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              ").concat(s?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);","\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class tk{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,c=s?1:2,l=s?2:3,u=s?3:1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[").concat(u,"];\n\n        ivec2 dyCorner = ivec2(coords[").concat(c,"], coords[").concat(l,"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n\n              if (").concat(s,") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class nk{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yF = 0; yF < ").concat(e.outDepth,"; yF++) {\n            int xF = wF + yF * ").concat(t," - ").concat(r,";\n\n            if (xF < 0 || xF >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n              int xR = wR + yR * ").concat(n," - ").concat(s,";\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n                int xC = wC + yC * ").concat(a," - ").concat(o,";\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class ak{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,c=n-1-e.padInfo.top,l=a-1-e.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3(".concat(i,", ").concat(c,", ").concat(l,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(t,"; wF++) {\n          float dyF = float(dyFCorner + wF) / ").concat(r,".0;\n\n          if (dyF < 0.0 || dyF >= ").concat(e.outDepth,".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ").concat(t," - 1 - wF;\n\n          for (int wR = 0; wR < ").concat(n,"; wR++) {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ").concat(n," - 1 - wR;\n\n            for (int wC = 0; wC < ").concat(a,"; wC++) {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ").concat(a," - 1 - wC;\n\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const rk={kernelName:r.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:o}=t,{strides:i,pad:c,dataFormat:l,dimRoundingMode:u,filterShape:d}=a,h=r.backend_util.convertConv2DDataFormat(l),p=r.backend_util.computeConv2DInfo(s.shape,d,i,1,c,u,!1,h),f=new ek(p);return n.runWebGLProgram(f,[s,o],"float32")}};class sk{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=ib(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,a=t-1-e.padInfo.top,r=n-1-e.padInfo.left;this.userCode="\n      const ivec2 pads = ivec2(".concat(a,", ").concat(r,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ").concat(e.outWidth,".0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ").concat(e.outWidth,".0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    ")}}const ok={kernelName:r.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:o}=t,{inputShape:i,strides:c,pad:l,dataFormat:u,dimRoundingMode:d}=a,h=r.backend_util.convertConv2DDataFormat(u),p=r.backend_util.computeConv2DInfo(i,o.shape,c,1,l,d,!1,h);if((0,r.env)().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[p.strideHeight,p.strideWidth]],t=new sk(p);return n.runWebGLProgram(t,[s,o],"float32",e)}{const e=new tk(p);return n.runWebGLProgram(e,[s,o],"float32")}}};const ik={kernelName:r.Conv3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:o}=t,{strides:i,pad:c,dilations:l}=a,u=r.backend_util.computeConv3DInfo(s.shape,o.shape,i,l,c),d=new Yw(u);return n.runWebGLProgram(d,[s,o],"float32")}};const ck={kernelName:r.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:o}=t,{strides:i,pad:c,filterShape:l}=a,u=r.backend_util.computeConv3DInfo(s.shape,l,i,1,c),d=new nk(u);return n.runWebGLProgram(d,[s,o],"float32")}};const lk={kernelName:r.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:o}=t,{pad:i,strides:c,inputShape:l}=a,u=r.backend_util.computeConv3DInfo(l,o.shape,c,1,i),d=new ak(u);return n.runWebGLProgram(d,[s,o],"float32")}},uk=nx({opSnippet:tx+"\n  return cos(x);\n",packedOpSnippet:"\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(Gv,"\n  return result;\n")}),dk={kernelName:r.Cos,backendName:"webgl",kernelFunc:uk},hk=nx({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),pk={kernelName:r.Cosh,backendName:"webgl",kernelFunc:hk};class fk{constructor(e,t,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,o,i,c]=e,[l]=t,[u,d]=n;this.outputShape=[l,u,d,c];const h="bilinear"===a?1:0,[p,f]=["".concat(o-1,".0"),"".concat(i-1,".0")],[m,g,y]=u>1?["".concat((o-1)/(u-1)),"(y2-y1) * height_ratio","y1*".concat(p," + float(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(p)],[b,v,x]=d>1?["".concat((i-1)/(d-1)),"(x2-x1) * width_ratio","x1*".concat(f," + float(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(f)];this.userCode="\n      const float height_ratio = float(".concat(m,");\n      const float width_ratio = float(").concat(b,");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ").concat(s,") {\n          return;\n        }\n\n        float height_scale = ").concat(g,";\n        float width_scale = ").concat(v,";\n\n        float in_y = ").concat(y,";\n        if( in_y < 0.0 || in_y > ").concat(p," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n        float in_x = ").concat(x,";\n        if( in_x < 0.0 || in_x > ").concat(f," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(").concat(h," == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ")}}const mk={kernelName:r.CropAndResize,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:o}=t,{cropSize:i,method:c,extrapolationValue:l}=a,u=new fk(r.shape,s.shape,i,c,l);return n.runWebGLProgram(u,[r,s,o],"float32")}};var gk;!function(e){e.Prod="*",e.Sum="+"}(gk||(gk={}));class yk{constructor(e,t,n,a){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,s=this.op===gk.Prod?"1.0":"0.0",o=n?s:"getX(".concat(bk(r,"coords",this.op),")"),i=this.outputShape[this.outputShape.length-1];let c="",l="";n?(c=a?"end != ".concat(i-1):"end != 0",l=a?"end + 1":"end - 1"):(c=a?"end + pow2 < ".concat(i):"end >= pow2",l=a?"end + pow2":"end - pow2"),this.userCode="\n      void main() {\n        ".concat(eb(r)," coords = getOutputCoords();\n        int end = ").concat(vk(r,"coords",this.op),";\n        float val = ").concat(o,";\n        int pow2 = int(pow(2.0, index));\n        if (").concat(c,") {\n          int idx = ").concat(l,";\n          ").concat(vk(r,"coords",this.op)," = idx;\n          val ").concat(this.op,"= getX(").concat(bk(r,"coords",this.op),");\n        }\n        setOutput(val);\n      }\n    ")}}function bk(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".x, ").concat(t,".y");if(3===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z");if(4===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z, ").concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function vk(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".y");if(3===e)return"".concat(t,".z");if(4===e)return"".concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function xk(e,t,n,a,s,o){const i=t.shape.length,c=r.backend_util.getAxesPermutation([a],i);let l=t;null!=c&&(l=kx({inputs:{x:t},backend:n,attrs:{perm:c}}));const u=r.backend_util.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error("WebGL cumprod shader expects an inner-most axis=".concat(t.shape.length-1," ")+"but got axis=".concat(a));const d=l.shape[u];let h=jv({inputs:{x:l},backend:n});for(let r=0;r<=Math.ceil(Math.log2(d))-1;r++){const t=new yk(e,l.shape,!1,o),a=[[r]],s=h;h=n.runWebGLProgram(t,[h],h.dtype,a),n.disposeIntermediateTensorInfo(s)}if(s){const t=new yk(e,l.shape,s,o),a=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=c){const e=kx({inputs:{x:h},backend:n,attrs:{perm:r.backend_util.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}const wk={kernelName:r.Cumprod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;return xk(gk.Prod,r,n,s,o,i)}};const kk={kernelName:r.Cumsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;return xk(gk.Sum,r,n,s,o,i)}};const Sk={kernelName:r.DenseBincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o,binaryOutput:i}=a;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(s.dataId),a=Cb(e,t,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,a)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(s),a=Eb(e,t,o,i);return n.makeTensorInfo(a.shape,s.dtype,a.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};class Tk{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ".concat(this.getHeightCoordString(),";\n      int w = ").concat(this.getWidthCoordString(),";\n      int d = ").concat(this.getDepthCoordString(),";\n\n      int in_h = h / ").concat(t,";\n      int offset_h = imod(h, ").concat(t,");\n      int in_w = w / ").concat(t,";\n      int offset_w = imod(w, ").concat(t,");\n      int offset_d = (offset_h * ").concat(t," + offset_w) *\n        ").concat(this.getOutputDepthSize(),";\n      int in_d = d + offset_d;\n\n      float result = ").concat(this.getInputSamplingString(),";\n      setOutput(result);\n    }\n  ")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Nk={kernelName:r.DepthToSpace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:o}=a,i=r.shape[0],c=("NHWC"===o?r.shape[1]:r.shape[2])*s,l=("NHWC"===o?r.shape[2]:r.shape[3])*s,u=("NHWC"===o?r.shape[3]:r.shape[1])/(s*s),d=new Tk("NHWC"===o?[i,c,l,u]:[i,u,c,l],s,o);return n.runWebGLProgram(d,[r],r.dtype)}};class Ik{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ib(this.outputShape.length);const s=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels;let c="",l="";n&&(c=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),l="result = activation(result);");const u=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(c,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(i,";\n        int q = d2 - d1 * ").concat(i,";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ").concat(s,"; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(o,"; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ").concat(u,"\n        ").concat(l,"\n        setOutput(result);\n      }\n    ")}}class Ck{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ib(this.outputShape.length);const o=e.outChannels/e.inChannels,i=e.padInfo.left,c=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,d=e.filterWidth,h=d;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let r=0;r<d;r++)p+="\n          vec4 xTexelC".concat(2*r,";\n          int xTexelC").concat(2*r,"Ready;\n          vec4 xTexelC").concat(2*r+1,";\n          int xTexelC").concat(2*r+1,"Ready;\n          vec4 xC").concat(r,";");p+="\n    for (int r = 0; r < ".concat(u,"; r++) {\n      ");for(let r=0;r<d;r++)p+="\n          xTexelC".concat(2*r," = vec4(0.0);\n          xTexelC").concat(2*r,"Ready = 0;\n          xTexelC").concat(2*r+1," = vec4(0.0);\n          xTexelC").concat(2*r+1,"Ready = 0;\n          xC").concat(r," = vec4(0.0);");p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let y=0;y<(h+1)/2;y++){const e=2*y;if(p+="\n          xC = xCCorner + ".concat(e*l,";\n          "),1===c){if(e<d&&(i%2===1?(p+="\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n              "),p+=1===l&&e>0?"\n                xC".concat(e," = vec4(xTexelC").concat(e-2,".zw, xTexelC").concat(e,".xy);\n                "):"\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC".concat(e," = vec4(previous.zw, xTexelC").concat(e,".xy);\n                  } else {\n                    xC").concat(e," = vec4(0.0, 0.0, xTexelC").concat(e,".xy);\n                  }\n                  ")):p+="\n                if (xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xC").concat(e," = xTexelC").concat(e,";\n                "),e+1<d)){const t=i%2===0?r.util.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(p+="\n                  xCOffset = xC + imod(pads[1], 2) + ".concat(t,";\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                    xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC").concat(e+1,".zw = vec2(0.0);\n                    }\n                    xTexelC").concat(e+1,"Ready = 1;\n                  }\n                  "),p+=l>1?"\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC".concat(e+1," = vec4(previous.zw, xTexelC").concat(e+1,".xy);\n                    } else {\n                     xC").concat(e+1," = vec4(0.0, 0.0, xTexelC").concat(e+1,".xy);\n                    }\n                    "):"\n                    xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".xy);\n                    ")):p+=1===t?"\n                    xC".concat(e+1," = xTexelC").concat(e,";\n                    "):"\n                    xCOffset = xC + ".concat(t,";\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                      xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC").concat(e+1,".zw = vec2(0.0);\n                      }\n                      xTexelC").concat(e+1,"Ready = 1;\n                    }\n\n                    xC").concat(e+1," = xTexelC").concat(e+1,";\n                    ")}}else e<d&&(i%2===1?(p+="\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n              "),e+1<d&&(p+="\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC".concat(e+1," = vec4(xTexelC").concat(e+1,".xy, final.xy);\n                "))):(p+="\n                if(xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(\n                  xTexelC").concat(e,".xy, xTexelC").concat(e+1,".xy);\n              "),e+1<d&&(p+="\n                  xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n                "))));e<d&&(p+="\n            wTexel = getW(r, ".concat(e,", d1, q);\n            dotProd += xC").concat(e," * vec4(wTexel.xz, wTexel.xz);\n          "),e+1<d&&(p+="\n              wTexel = getW(r, ".concat(e+1,", d1, q);\n              dotProd += xC").concat(e+1," * vec4(wTexel.xz, wTexel.xz);\n            ")))}p+="\n    }\n  ",p+="\n      }\n    ";let f="",m="";n&&(f=a?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):s?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(n,"\n        }"),m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(f,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(o,";\n        int q = d2 - d1 * ").concat(o,";\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ").concat(p,"\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ").concat(g,"\n        ").concat(m,"\n        setOutput(result);\n      }\n    ")}}const Ek={kernelName:r.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:o}=t,{strides:i,pad:c,dilations:l,dimRoundingMode:u}=a;let d=l;null==d&&(d=[1,1]),r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(i,d),()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(i," and dilations '").concat(d,"'"));const h=r.backend_util.computeConv2DInfo(s.shape,o.shape,i,d,c,u,!0);let p;p=(0,r.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new Ck(h):new Ik(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[s,o],"float32",f)}};class Ak{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ".concat(s," + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ").concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class _k{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ").concat(i,"; dm++) {\n              int d2 = d1 * ").concat(i," + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const Rk={kernelName:r.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:o}=t,{strides:i,dilations:c,pad:l,dimRoundingMode:u,filterShape:d}=a,h=r.backend_util.computeConv2DInfo(s.shape,d,i,c,l,u,!0),p=new Ak(h);return n.runWebGLProgram(p,[s,o],"float32")}};const Fk={kernelName:r.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:o}=t,{strides:i,dilations:c,pad:l,dimRoundingMode:u,inputShape:d}=a,h=r.backend_util.computeConv2DInfo(d,o.shape,i,c,l,u,!0),p=new _k(h);return n.runWebGLProgram(p,[s,o],"float32")}};class Dk{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const Ok={kernelName:r.Diag,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,s=[...a.shape,...a.shape],o=r.util.sizeFromShape(a.shape),i=hx({inputs:{x:a},backend:n,attrs:{shape:[o]}}),c=new Dk(o),l=n.runWebGLProgram(c,[i],i.dtype),u=hx({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class Mk{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:a,strideHeight:r,strideWidth:s,filterHeight:o,filterWidth:i,dilationHeight:c,dilationWidth:l}=e,{top:u,left:d}=a;this.userCode="\n      const ivec2 strides = ivec2(".concat(r,", ").concat(s,");\n      const ivec2 pads = ivec2(").concat(u,", ").concat(d,");\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ").concat(o,"; h++) {\n          int hIn = hBeg + h * ").concat(c,";\n\n          if (hIn >= 0 && hIn < ").concat(t,") {\n            for (int w = 0; w < ").concat(i,"; w++) {\n              int wIn = wBeg + w * ").concat(l,";\n\n              if (wIn >= 0 && wIn < ").concat(n,") {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    ")}}const zk={kernelName:r.Dilation2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:o}=t,{strides:i,pad:c,dilations:l}=a,u=r.backend_util.computeDilation2DInfo(s.shape,o.shape,i,c,"NHWC",l);let d;const h=new Mk(u);d=n.runWebGLProgram(h,[s,o],"float32");const p=hx({inputs:{x:d},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(d),p}};const Lk={kernelName:r.Einsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:s}=a,o=t,{allDims:i,summedDims:c,idDims:l}=r.backend_util.decodeEinsumEquation(s,o.length);r.backend_util.checkEinsumDimSizes(i.length,l,o);const{path:u,steps:d}=r.backend_util.getEinsumComputePath(c,l),h=d.length;let p=null,f=i.length;const m=[];for(let g=0;g<h;++g){for(const e of d[g]){const{permutationIndices:t,expandDims:a}=r.backend_util.getEinsumPermutation(f,l[e]);let s;r.backend_util.isIdentityPermutation(t)?s=o[e]:(s=kx({inputs:{x:o[e]},backend:n,attrs:{perm:t}}),m.push(s));const i=s.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);r.util.arraysEqual(s.shape,i)||(s=hx({inputs:{x:s},backend:n,attrs:{shape:i}}),m.push(s)),null===p?p=s:(p=ux({inputs:{a:s,b:p},backend:n}),m.push(p))}g<h-1&&(u[g]>=0&&(p=xx({inputs:{x:p},backend:n,attrs:{axis:u[g]-(i.length-f),keepDims:!1}}),m.push(p)),f--)}for(const r of m)r!==p&&n.disposeIntermediateTensorInfo(r);return p}},Pk=nx({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Bk={kernelName:r.Elu,backendName:"webgl",kernelFunc:Pk},Wk={kernelName:r.EluGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:s}=t,o=(0,r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hv("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,s.shape):new Uv("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,s.shape);return n.runWebGLProgram(o,[a,s],a.dtype)}},Vk=ax({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:Db}),Uk={kernelName:r.Equal,backendName:"webgl",kernelFunc:Vk},Gk=nx({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = '.concat(r.backend_util.ERF_P,";\n  float a1 = ").concat(r.backend_util.ERF_A1,";\n  float a2 = ").concat(r.backend_util.ERF_A2,";\n  float a3 = ").concat(r.backend_util.ERF_A3,";\n  float a4 = ").concat(r.backend_util.ERF_A4,";\n  float a5 = ").concat(r.backend_util.ERF_A5,";\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n")}),Hk={kernelName:r.Erf,backendName:"webgl",kernelFunc:Gk},jk=nx({opSnippet:tx+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Ob,dtype:"float32"}),qk={kernelName:r.Exp,backendName:"webgl",kernelFunc:jk};function Yk(e){const{inputs:t,attrs:n,backend:a}=e,{dim:s}=n,{input:o}=t,i=o.shape.length,c=o.shape.slice();let l=s;return s<0&&(r.util.assert(-(i+1)<=s,()=>"Axis must be in the interval [".concat(-(i+1),", ").concat(i,"]")),l=i+s+1),c.splice(l,0,1),hx({inputs:{x:o},backend:a,attrs:{shape:c}})}const Kk={kernelName:r.ExpandDims,backendName:"webgl",kernelFunc:Yk},Xk="return exp(x) - 1.0;",Zk=nx({opSnippet:Xk,packedOpSnippet:Xk,cpuKernelImpl:Mb}),Qk={kernelName:r.Expm1,backendName:"webgl",kernelFunc:Zk};class $k{constructor(e,t,n){this.variableNames=["real","imag"];const a=t[1];this.outputShape=t;const r=n?"2.0 * ".concat(Math.PI):"-2.0 * ".concat(Math.PI),s=n?"".concat(a,".0"):"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error('FFT component must be either "real" or "imag", got '.concat(e,"."));o="return real * expI + imag * expR;"}this.userCode="\n      const float exponentMultiplier = ".concat(r,";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ").concat(o,"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(").concat(a,");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ").concat(s,";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ")}}function Jk(e,t,n){const a=n.texData.get(e.dataId),s=r.util.sizeFromShape(e.shape),o=e.shape[e.shape.length-1],i=hx({inputs:{x:e},backend:n,attrs:{shape:[s/o,o]}}),c=i.shape,l=new $k("real",c,t),u=new $k("imag",c,t),d=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:c},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:c}],h=n.runWebGLProgram(l,d,"float32"),p=n.runWebGLProgram(u,d,"float32"),f=Yv({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const m=hx({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}const eS={kernelName:r.FFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return Jk(a,!1,n)}};class tS{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function nS(e){const{backend:t,attrs:n}=e,{shape:a,value:s}=n;let{dtype:o}=n;if(o=o||r.util.inferDtype(s),"string"===o){const e=r.util.getArrayFromDType(o,r.util.sizeFromShape(a));return e.fill(s),t.makeTensorInfo(a,o,e)}{const e=new tS(a,s),n=[[s]];return t.runWebGLProgram(e,[],o,n)}}const aS={kernelName:r.Fill,backendName:"webgl",kernelFunc:nS};class rS{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ".concat(t," - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ").concat(t,") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const sS={kernelName:r.FlipLeftRight,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:a}=t,r=n,s=new rS(a.shape);return r.runWebGLProgram(s,[a],a.dtype)}},oS="return floor(x);",iS=nx({opSnippet:oS,packedOpSnippet:oS,cpuKernelImpl:zb}),cS={kernelName:r.Floor,backendName:"webgl",kernelFunc:iS},lS=ax({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),uS={kernelName:r.FloorDiv,backendName:"webgl",kernelFunc:lS};class dS{constructor(e){this.variableNames=["A"];const t=Py(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(".concat(a,".0, ").concat(n,".0);\n\n        vec4 values = ").concat(t.texture2D,"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ")}}class hS{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Py(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(".concat(a,".0, ").concat(n,".0);\n            vec4 values = ").concat(t.texture2D,"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}const pS={kernelName:r.FromPixels,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:s}=t;const{numChannels:o}=a,i="undefined"!==typeof HTMLVideoElement&&s instanceof HTMLVideoElement,c="undefined"!==typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,u]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],d=[u,l],h=[u,l,o];if(c||i){const e=(0,r.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=fS&&e===mS||(mS=e,fS=document.createElement("canvas").getContext("2d",{willReadFrequently:mS})),fS.canvas.width=l,fS.canvas.height=u,fS.drawImage(s,0,0,l,u),s=fS.canvas}const p=n.makeTensorInfo(d,"int32");n.texData.get(p.dataId).usage=oy.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const f=(0,r.env)().getBool("WEBGL_PACK")?new hS(h):new dS(h),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}};let fS,mS=(0,r.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const gS={kernelName:r.FusedConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:o,bias:i,preluActivationWeights:c}=t,{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=a,g=r.backend_util.convertConv2DDataFormat(d),y=r.backend_util.computeConv2DInfo(s.shape,o.shape,l,h,u,p,!1,g);let b;const v=[],x=null!=i,w=null!=c,k="leakyrelu"===f,S=()=>{const e=[s,o],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=hx({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return v.push(t),t}return e};if(x&&e.push(t(i,d)),w&&e.push(t(c,d)),k){const t=n.makeTensorInfo([],"float32",r.util.createScalarValue(m,"float32"));e.push(t),v.push(t)}return e};if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(y.strideWidth<=2&&"channelsLast"===g&&(0,r.env)().getBool("WEBGL_EXP_CONV")){const e=f?rx(f,!0):null,t=new Kw(y,x,e,w,k),a=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],r=S();b=n.runWebGLProgram(t,r,"float32",a)}else if((0,r.env)().getBool("WEBGL_CONV_IM2COL"))b=$w({x:s,filter:o,convInfo:y,backend:n,bias:i,activation:f,preluActivationWeights:c,leakyreluAlpha:m});else{const e=f?rx(f,!1):null,t=new qw(y,x,e,w,k),a=S();b=n.runWebGLProgram(t,a,"float32")}else b=Qw({x:s,filter:o,convInfo:y,backend:n,bias:i,activation:f,preluActivationWeights:c,leakyreluAlpha:m});const T=hx({inputs:{x:b},backend:n,attrs:{shape:y.outShape}});return v.push(b),v.forEach(e=>n.disposeIntermediateTensorInfo(e)),T}};const yS={kernelName:r.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:o,bias:i,preluActivationWeights:c}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=a,m=[];let g=d;null==g&&(g=[1,1]),r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(l,g),()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(l," and dilations '").concat(g,"'"));const y=r.backend_util.computeConv2DInfo(s.shape,o.shape,l,g,u,h,!0),b=(0,r.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,v=p?rx(p,b):null,x=[s,o],w=null!=i,k=null!=c,S="leakyrelu"===p;if(w&&x.push(i),k&&x.push(c),S){const e=n.makeTensorInfo([],"float32",r.util.createScalarValue(f,"float32"));x.push(e),m.push(e)}let T;T=b?new Ck(y,w,v,k,S):new Ik(y,w,v,k,S);const N=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],I=n.runWebGLProgram(T,x,"float32",N);return m.forEach(e=>n.disposeIntermediateTensorInfo(e)),I}};class bS{constructor(e,t,n,a){this.sliceDim=e,this.strides=t,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;const r=eb(n.length);let s="\n    int index;";for(let o=0;o<this.sliceDim;o++)s+="\n          index = round(getIndices(coords[0], ".concat(o,"));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ").concat(this.paramsShape[o],";\n          flattenIndex += index * ").concat(this.strides[o],";");this.userCode="\n         void main() {\n          ".concat(r," coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ").concat(s,"\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      ")}}const vS={kernelName:r.GatherNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:s}=t,o=s.shape,i=o[o.length-1],c=r.util.sizeFromShape(a.shape),[l,u,d,h]=r.backend_util.prepareAndValidate(a,s),p=hx({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),f=hx({inputs:{x:a},backend:n,attrs:{shape:[r.util.sizeFromShape(a.shape)/d,d]}});if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(a),r=Lb(e,t,a.dtype,u,i,d,h,a.shape,c);return n.makeTensorInfo(l,a.dtype,r.values)}const m=new bS(i,h,[u,d],a.shape),g=n.runWebGLProgram(m,[f,p],f.dtype),y=hx({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),y}};class xS{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=eb(this.rank),a=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let a=0;a<e.length;a++)2===a?n.push("index"):n.push("".concat(t[a]));return n.join()}(e);this.userCode="\n      void main() {\n        ".concat(n," resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ").concat(e[2],") ? 1.0 : 0.0;\n        setOutput(inBounds * getA(").concat(a,"));\n      }\n    ")}}function wS(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,indices:o}=t,{axis:i,batchDims:c}=a,l=r.util.parseAxisParam(i,s.shape)[0];if((0,r.env)().get("DEBUG")){const e=n.readSync(o.dataId),t=s.shape[l];for(let n=0;n<e.length;++n){const a=e[n];r.util.assert(a<=t-1&&a>=0,()=>"GatherV2: the index value ".concat(a," is not in [0, ").concat(t-1,"]"))}}const u=r.backend_util.segment_util.collectGatherOpShapeInfo(s,o,l,c),d=r.util.sizeFromShape(o.shape),h=[],p=hx({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=hx({inputs:{x:o},backend:n,attrs:{shape:[u.batchSize,d/u.batchSize]}});h.push(p),h.push(f);const m=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([s,o])||"string"===s.dtype){const e=n.bufferSync(f),t=n.bufferSync(p),a=Pb(t,e,m);return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(u.outputShape,a.dtype,a.values)}const g=new xS(p.shape,m),y=n.runWebGLProgram(g,[p,f],p.dtype);h.push(y);const b=hx({inputs:{x:y},backend:n,attrs:{shape:u.outputShape}});return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),b}const kS={kernelName:r.GatherV2,backendName:"webgl",kernelFunc:wS},SS=ax({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Bb,dtype:"bool"}),TS={kernelName:r.Greater,backendName:"webgl",kernelFunc:SS},NS=ax({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:Wb}),IS={kernelName:r.GreaterEqual,backendName:"webgl",kernelFunc:NS};const CS={kernelName:r.IFFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return Jk(a,!0,n)}},ES=nx({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),AS={kernelName:r.IsFinite,backendName:"webgl",kernelFunc:ES},_S=nx({opSnippet:"return float(isinf(x));",dtype:"bool"}),RS={kernelName:r.IsInf,backendName:"webgl",kernelFunc:_S},FS=nx({opSnippet:"return float(isnan(x));",dtype:"bool"}),DS={kernelName:r.IsNan,backendName:"webgl",kernelFunc:FS},OS=ax({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Vb,dtype:"bool"}),MS={kernelName:r.Less,backendName:"webgl",kernelFunc:OS},zS=ax({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:Ub,dtype:"bool"}),LS={kernelName:r.LessEqual,backendName:"webgl",kernelFunc:zS};const PS={kernelName:r.LinSpace,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,o=Gb(a,r,s);return t.makeTensorInfo([o.length],"float32",o)}},BS=nx({opSnippet:tx+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:Hb}),WS={kernelName:r.Log,backendName:"webgl",kernelFunc:BS},VS=nx({opSnippet:tx+"\n  return log(1.0 + x);\n"}),US={kernelName:r.Log1p,backendName:"webgl",kernelFunc:VS},GS=ax({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),HS={kernelName:r.LogicalAnd,backendName:"webgl",kernelFunc:GS},jS=nx({opSnippet:"return float(!(x >= 1.0));"}),qS={kernelName:r.LogicalNot,backendName:"webgl",kernelFunc:jS},YS=ax({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),KS={kernelName:r.LogicalOr,backendName:"webgl",kernelFunc:YS};class XS{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[];const s=t,o=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -".concat(s,"; j <= ").concat(s,"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ").concat(o,") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ").concat(i,";\n        setOutput(val);\n      }\n    ")}}class ZS{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,o=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ".concat(this.outputShape[3],";\n        bool hasNextRow = c < ").concat(this.outputShape[2],";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ").concat(s,";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ").concat(s,"; j <= ").concat(s,"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(").concat(o,"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ").concat(i,";\n        setOutput(result);\n      }\n    ")}}const QS={kernelName:r.LRN,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{depthRadius:o,bias:i,alpha:c,beta:l}=a,u=(0,r.env)().getBool("WEBGL_PACK_NORMALIZATION")?new ZS(s.shape,o,i,c,l):new XS(s.shape,o,i,c,l);return n.runWebGLProgram(u,[s],s.dtype)}};class $S{constructor(e,t,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=r,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ".concat(this.depth,"; ++d) {\n          int depthBegin = int(max(0.0, float(d - ").concat(t,")));\n          int depthEnd = int(min(float(").concat(this.depth,"),\n              float(d + ").concat(t," + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ").concat(this.depth,";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(").concat(a,") * norm + float(").concat(n,");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(").concat(a,")\n                * float(").concat(r,")\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ").concat(r,");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ")}}const JS={kernelName:r.LRNGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:o}=t,{depthRadius:i,bias:c,alpha:l,beta:u}=a,d=new $S(r.shape,i,c,l,u);return n.runWebGLProgram(d,[r,s,o],r.dtype)}};function eT(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{reductionIndices:o,keepDims:i}=a,c=s.shape.length,l=r.util.parseAxisParam(o,s.shape);let u=l;const d=r.backend_util.getAxesPermutation(u,c),h=null!=d,p=n.shouldExecuteOnCPU([s]);let f=s;if(h){if(p){const e=n.texData.get(f.dataId).values,t=new Array(c);for(let n=0;n<t.length;n++)t[n]=s.shape[d[n]];const a=vv(e,s.shape,s.dtype,d,t);f=n.makeTensorInfo(t,s.dtype);n.texData.get(f.dataId).values=a}else f=vx(s,d,n);u=r.backend_util.getInnerMostAxes(u.length,c)}r.backend_util.assertAxesAreInnerMostDims("max",u,c);const[m,g]=r.backend_util.computeOutAndReduceShapes(f.shape,u);let y,b=m;if(i&&(b=r.backend_util.expandShapeToKeepDim(m,l)),p){const e=n.texData.get(f.dataId).values,t=jb(e,r.util.sizeFromShape(g),b,s.dtype);y=n.makeTensorInfo(b,s.dtype);n.texData.get(y.dataId).values=t}else y=function(e,t,n,a){const s=r.util.sizeFromShape(t),o=hx({inputs:{x:e},attrs:{shape:[r.util.sizeFromShape(e.shape)/s,s]},backend:a}),i=gx(o,e.dtype,"max",a),c=hx({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(i),c}(f,g,b,n);return h&&n.disposeIntermediateTensorInfo(f),y}const tT={kernelName:r.Max,backendName:"webgl",kernelFunc:eT},nT=ax({opSnippet:Vv+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Gv+"\n  return result;\n",cpuKernelImpl:qb}),aT={kernelName:r.Maximum,backendName:"webgl",kernelFunc:nT};const rT={kernelName:r.MaxPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;zy(s,"maxPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(i,1),()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'"));const u=r.backend_util.computePool2DInfo(s.shape,o,i,1,c,l);if(1===u.filterWidth&&1===u.filterHeight&&r.util.arraysEqual(u.inShape,u.outShape))return jv({inputs:{x:s},backend:n});const d=new aw(u,"max",!1);return n.runWebGLProgram(d,[s],s.dtype)}};const sT={kernelName:r.MaxPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{filterSize:o,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a,d=r.backend_util.computePool3DInfo(s.shape,o,i,[1,1,1],c,u,l),h=new rw(d,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class oT{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,s=e.effectiveFilterWidth,o=r-1-e.padInfo.top,i=s-1-e.padInfo.left,c=r*s-1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(r,";\n          wR += ").concat(a,") {\n          float dyR = float(dyRCorner + wR) / ").concat(t,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(s,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(n,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ").concat(c," - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ").concat(s," + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class iT{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,c=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=i-1-e.padInfo.front,d=c-1-e.padInfo.top,h=l-1-e.padInfo.left,p=i*c*l-1;this.userCode="\n      const ivec3 pads = ivec3(".concat(u,", ").concat(d,", ").concat(h,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(i,";\n           wD += ").concat(r,") {\n          float dyD = float(dyDCorner + wD) / ").concat(t,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(c,";\n              wR += ").concat(s,") {\n            float dyR = float(dyRCorner + wR) / ").concat(n,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(l,";\n                wC += ").concat(o,") {\n              float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ").concat(p," -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ").concat(c," * ").concat(l," +\n                  wR * ").concat(l," + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const cT={kernelName:r.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:o}=t,i=o,{filterSize:c,strides:l,pad:u,dimRoundingMode:d}=a,h=r.backend_util.computePool3DInfo(i.shape,c,l,[1,1,1],u,d),p=new rw(h,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),m=new iT(h),g=n.runWebGLProgram(m,[s,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}};const lT={kernelName:r.MaxPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:o,output:i}=t,c=o;zy([o,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:d,dimRoundingMode:h}=a,p=r.backend_util.computePool2DInfo(c.shape,l,u,1,d,h),f=new aw(p,"max",!0),m=n.runWebGLProgram(f,[c],c.dtype),g=new oT(p),y=n.runWebGLProgram(g,[s,m],c.dtype);return n.disposeIntermediateTensorInfo(m),y}};const uT={kernelName:r.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:s}=t,{filterSize:o,strides:i,pad:c,includeBatchInIndex:l}=n,u=a;r.util.assert(4===s.shape.length,()=>"Error in maxPool: input must be rank 4 but got rank ".concat(s.shape.length,"."));const d=[1,1];r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(i,d),()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(d,"'"));const h=r.backend_util.computePool2DInfo(s.shape,o,i,d,c),[p,f]=function(e,t,n,a){let r=new aw(n,"max",!1);const s=a.runWebGLProgram(r,[e],"float32");return r=new aw(n,"max",!0,!0,t),[s,a.runWebGLProgram(r,[e],"float32")]}(s,l,h,u);return[p,f]}};const dT={kernelName:r.Mean,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:s}=t,{keepDims:o,axis:i}=n,c=a,l=s.shape.length,u=r.util.parseAxisParam(i,s.shape);let d=u;const h=r.backend_util.getAxesPermutation(d,l),p=null!=h,f=c.shouldExecuteOnCPU([s]),m=[];let g=s;if(p){if(f){const e=c.texData.get(g.dataId).values,t=new Array(l);for(let a=0;a<t.length;a++)t[a]=s.shape[h[a]];const n=vv(e,s.shape,s.dtype,h,t);g=c.makeTensorInfo(t,s.dtype);c.texData.get(g.dataId).values=n}else g=vx(s,h,c);m.push(g),d=r.backend_util.getInnerMostAxes(d.length,l)}r.backend_util.assertAxesAreInnerMostDims("sum",d,l);const[y,b]=r.backend_util.computeOutAndReduceShapes(g.shape,d);let v=y;o&&(v=r.backend_util.expandShapeToKeepDim(y,u));const x=function(e,t,n,a){const s=r.util.sizeFromShape(t),o=hx({inputs:{x:e},attrs:{shape:[r.util.sizeFromShape(e.shape)/s,s]},backend:a}),i=gx(o,"float32","mean",a),c=hx({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(i),c}(g,b,v,c);for(const r of m)c.disposeIntermediateTensorInfo(r);return x}};const hT={kernelName:r.Min,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o,keepDims:i}=a,c=s.shape.length,l=r.util.parseAxisParam(o,s.shape);let u=l;const d=r.backend_util.getAxesPermutation(u,c);let h=s;null!=d&&(h=kx({inputs:{x:s},backend:n,attrs:{perm:d}}),u=r.backend_util.getInnerMostAxes(u.length,s.shape.length)),r.backend_util.assertAxesAreInnerMostDims("min",u,c);const[p,f]=r.backend_util.computeOutAndReduceShapes(h.shape,u),m=hx({inputs:{x:h},backend:n,attrs:{shape:[-1,r.util.sizeFromShape(f)]}}),g=gx(m,m.dtype,"min",n);let y;if(i){y=hx({inputs:{x:g},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(p,l)}})}else y=hx({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),y}},pT=ax({opSnippet:Vv+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Gv+"\n  return result;\n",cpuKernelImpl:Yb}),fT={kernelName:r.Minimum,backendName:"webgl",kernelFunc:pT};class mT{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const a=e.length,r=eb(a),s=t.map(e=>e[0]).join(","),o=t.map((t,n)=>t[0]+e[n]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),c="reflect"===n?0:1;this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(s,");\n      ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        for (int i = 0; i < ").concat(a,"; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ").concat(c,";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ").concat(c,";\n          }\n        }\n        ").concat(r," coords = outC - start;\n        setOutput(getX(").concat(i,"));\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ").concat(c,";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ").concat(c,";\n          }\n          setOutput(getX(outC - start));\n        }\n      ")}}class gT{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const a=e.length,r=eb(a),s=t.map(e=>e[0]).join(","),o=t.map((t,n)=>t[0]+e[n]).join(","),i=kv("rc",a),c=kv("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),d="reflect"===n?0:1;let h="";if(1===a){const e="\n        ".concat(r," source = rc;\n        if (source < start) {\n          source = start * 2 - source - ").concat(d,";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ").concat(d,";\n        }\n        source -= start;\n      ");h="\n        ".concat(r," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ")}else{const e="\n        ".concat(r," source = rc;\n        ").concat(r," lt = ").concat(r,"(lessThan(source, start));\n        ").concat(r," gte = ").concat(r,"(greaterThanEqual(source, end));\n        ").concat(r," orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ").concat(d,") +\n                gte * ((end - 1) * 2 - source + ").concat(d,");\n        source -= start;\n      ");h="\n        ".concat(r," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n        rc = outputLoc;\n        ").concat(i[a-2]," += 1;\n        if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {\n          ").concat(e,"\n          result[2] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          ").concat(i[a-1]," += 1;\n          if(").concat(l,") {\n            ").concat(e,"\n            result[3] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          }\n        }\n      ")}this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(s,");\n      const ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(h,"\n        setOutput(result);\n      }\n    ")}}const yT={kernelName:r.MirrorPad,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:s}=t,{paddings:o,mode:i}=a,c=(0,r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gT(s.shape,o,i):new mT(s.shape,o,i);return n.runWebGLProgram(c,[s],s.dtype)}},bT=ax({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+Gv+"\n  return result;\n"}),vT={kernelName:r.Mod,backendName:"webgl",kernelFunc:bT};class xT{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ".concat(t-1,"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(").concat(t-1,"));\n      }\n    ")}}const wT=ax({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),kT={kernelName:r.RealDiv,backendName:"webgl",kernelFunc:wT},ST="return a - b;",TT=ax({opSnippet:ST,packedOpSnippet:ST,supportsComplex:!0,cpuKernelImpl:gv}),NT={kernelName:r.Sub,backendName:"webgl",kernelFunc:TT};function IT(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{dim:o}=a,i=r.util.parseAxisParam([o],s.shape),c=eT({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=r.backend_util.expandShapeToKeepDim(c.shape,i),u=hx({inputs:{x:c},backend:n,attrs:{shape:l}}),d=TT({inputs:{a:s,b:u},backend:n}),h=jk({inputs:{x:d},backend:n}),p=xx({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),f=hx({inputs:{x:p},backend:n,attrs:{shape:l}}),m=wT({inputs:{a:h,b:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}const CT={kernelName:r.Softmax,backendName:"webgl",kernelFunc:IT};const ET={kernelName:r.Multinomial,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:o,normalized:i}=a,c=i?r:IT({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),l=c.shape[0],u=c.shape[1],d=new xT(l,u,s),h=[[o]],p=n.runWebGLProgram(d,[c],"int32",h);return i||n.disposeIntermediateTensorInfo(c),p}},AT=_v+"\n  return -x;\n";const _T={kernelName:r.Neg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId),[t,r]=Xb(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}let s;return s=(0,r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Mv(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new Av(a.shape,AT),n.runWebGLProgram(s,[a],a.dtype)}},RT=r.kernel_impls.nonMaxSuppressionV3Impl;const FT={kernelName:r.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(e){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:l}=a,u=n.readSync(s.dataId),d=n.readSync(o.dataId),{selectedIndices:h}=RT(u,d,i,c,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},DT=r.kernel_impls.nonMaxSuppressionV4Impl;const OT={kernelName:r.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(e){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:l,padToMaxOutputSize:u}=a,d=n.readSync(s.dataId),h=n.readSync(o.dataId),{selectedIndices:p,validOutputs:f}=DT(d,h,i,c,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},MT=r.kernel_impls.nonMaxSuppressionV5Impl;const zT={kernelName:r.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(e){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:l,softNmsSigma:u}=a,d=n.readSync(s.dataId),h=n.readSync(o.dataId),p=i,f=c,m=l,g=u,{selectedIndices:y,selectedScores:b}=MT(d,h,p,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class LT{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(".concat(a,"), float(").concat(n,"),\n                      float(index == coords.y)));\n      }\n    ")}}const PT={kernelName:r.OneHot,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:s}=t,{dtype:o,depth:i,onValue:c,offValue:l}=a,u=r.util.sizeFromShape(s.shape),d=new LT(u,i,c,l),h=hx({inputs:{x:s},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(d,[h],o);n.disposeIntermediateTensorInfo(h);const f=hx({inputs:{x:p},backend:n,attrs:{shape:[...s.shape,i]}});return n.disposeIntermediateTensorInfo(p),f}};function BT(e){const{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){const e=Iw({inputs:{input:a},backend:n}),t=BT({inputs:{x:e},backend:n}),r=Vw({inputs:{input:a},backend:n}),s=BT({inputs:{x:r},backend:n}),o=Yv({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}return nS({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const WT={kernelName:r.ZerosLike,backendName:"webgl",kernelFunc:BT};const VT={kernelName:r.OnesLike,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=Iw({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=Vw({inputs:{input:r},backend:a}),o=BT({inputs:{x:s},backend:a}),i=Yv({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}return nS({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}};const UT={kernelName:r.Pack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a;if(1===t.length)return Yk({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const o=t[0].shape,i=t[0].dtype;t.forEach(e=>{r.util.assertShapesMatch(o,e.shape,"All tensors passed to stack must have matching shapes"),r.util.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const c=[],l=Hw({inputs:t.map(e=>{const t=Yk({inputs:{input:e},backend:n,attrs:{dim:s}});return c.push(t),t}),backend:n,attrs:{axis:s}});return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}};class GT{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const a=e.length,r=eb(a),s=t.map(e=>e[0]).join(","),o=t.map((t,n)=>t[0]+e[n]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(s,");\n      ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ").concat(r," coords = outC - start;\n          setOutput(getX(").concat(i,"));\n        }\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ")}}class HT{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const a=e.length,r=eb(a),s=t.map(e=>e[0]).join(","),o=t.map((t,n)=>t[0]+e[n]).join(","),i=kv("rc",a),c=kv("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),d=["".concat(r," rc = outputLoc;"),"".concat(i[a-1]," += 1;\n       if(").concat(l,") {\n      "),1===a?"":"}\n       rc = outputLoc;\n       ".concat(i[a-2]," += 1;\n       if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {"),1===a?"":"  ".concat(i[a-1]," += 1;\n         if(").concat(l,") {")],h=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===a?2:4;f<m;f++)p+="\n        ".concat(d[f],"\n        if (").concat(h,") {\n          result[").concat(f,"] = float(value);\n        } else {\n          ").concat(r," source = rc - start;\n          result[").concat(f,"] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ");p+=1===a?"} ":"}}",this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(s,");\n      const ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(p,"\n        setOutput(result);\n      }\n    ")}}const jT=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{paddings:o,constantValue:i}=a;if(0===r.util.sizeFromShape(s.shape)){const e=o.map((e,t)=>e[0]+s.shape[t]+e[1]);return nS({backend:n,attrs:{shape:e,value:i,dtype:s.dtype}})}const c=(0,r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new HT(s.shape,o,i):new GT(s.shape,o,i),l=[[i]];return n.runWebGLProgram(c,[s],s.dtype,l)},qT={kernelName:r.PadV2,backendName:"webgl",kernelFunc:jT},YT=ax({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+Gv+"\n  return result;\n"}),KT={kernelName:r.Pow,backendName:"webgl",kernelFunc:YT};const XT={kernelName:r.Prod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o,keepDims:i}=a,c=s.shape.length,l=[],u=r.util.parseAxisParam(o,s.shape);let d=u;const h=r.backend_util.getAxesPermutation(d,c);let p,f=s;if(null!=h&&(f=kx({inputs:{x:s},backend:n,attrs:{perm:h}}),d=r.backend_util.getInnerMostAxes(d.length,c),l.push(f)),r.backend_util.assertAxesAreInnerMostDims("prod",d,c),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:a,outDtype:r}=Qb(f.shape,f.dtype,e,d);p=n.makeTensorInfo(a,r,t)}else{const[e,t]=r.backend_util.computeOutAndReduceShapes(f.shape,d),a=r.util.sizeFromShape(t),o=hx({inputs:{x:f},backend:n,attrs:{shape:[-1,a]}}),i=gx(o,(0,r.sumOutType)(s.dtype),"prod",n);p=hx({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(o),l.push(i)}if(i){l.push(p);const e=r.backend_util.expandShapeToKeepDim(p.shape,u);p=hx({inputs:{x:p},backend:n,attrs:{shape:e}})}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}};const ZT={kernelName:r.RaggedGather,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:o}=t,{outputRaggedRank:i}=a,c=r.map(e=>n.readSync(e.dataId)),l=r.map(e=>e.shape),u=n.readSync(s.dataId),d=n.readSync(o.dataId),[h,p,f]=$b(c,l,u,s.shape,s.dtype,d,o.shape,i),m=h.map(e=>n.makeTensorInfo([e.length],"int32",e)),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}};const QT={kernelName:r.RaggedRange,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=Jb(o,a.shape,a.dtype,i,r.shape,c,s.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};const $T={kernelName:r.RaggedTensorToTensor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:c}=a,l=n.readSync(r.dataId),u=n.readSync(s.dataId),d=n.readSync(o.dataId),h=i.map(e=>n.readSync(e.dataId)),p=i.map(e=>e.shape),[f,m]=ev(l,r.shape,u,s.shape,s.dtype,d,o.shape,h,p,c);return n.makeTensorInfo(f,s.dtype,m)}},JT=e=>{const{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:o}=n,i=tv(a,r,s,o);return t.makeTensorInfo([i.length],o,i)},eN={kernelName:r.Range,backendName:"webgl",kernelFunc:JT},tN=nx({opSnippet:"return 1.0 / x;"}),nN={kernelName:r.Reciprocal,backendName:"webgl",kernelFunc:tN},aN=nx({opSnippet:_v+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),rN={kernelName:r.Relu,backendName:"webgl",kernelFunc:aN},sN=nx({opSnippet:_v+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),oN={kernelName:r.Relu6,backendName:"webgl",kernelFunc:sN};class iN{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n];let d;d=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ")}}class cN{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n];let d;d=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ")}}const lN={kernelName:r.ResizeBilinear,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s}=t,{alignCorners:o,halfPixelCenters:i,size:c}=a,[l,u]=c,d=(0,r.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new cN(s.shape,l,u,o,i):new iN(s.shape,l,u,o,i);return n.runWebGLProgram(d,[s],"float32")}};class uN{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,o]=e,i=[n&&s>1?a-1:a,n&&o>1?r-1:r],c=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],d=1/l,h=1/u,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(d,");\n        const float invWidthScale = float(").concat(h,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ").concat(a-1,".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ").concat(r-1,".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const dN={kernelName:r.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a,i=new uN(s.shape,r.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class hN{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],d=a?"0.5":"0.0";let h;h=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(d,")));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ")}}class pN{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],d=a?"0.5":"0.0";let h;h=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(d,")));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    ")}}const fN={kernelName:r.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s}=t,{alignCorners:o,halfPixelCenters:i,size:c}=a,[l,u]=c,d=(0,r.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new pN(s.shape,l,u,o,i):new hN(s.shape,l,u,o,i);return n.runWebGLProgram(d,[s],s.dtype)}};class mN{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,o]=e,i=[n&&s>1?a-1:a,n&&o>1?r-1:r],c=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],d=1/l,h=1/u,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(d,");\n        const float invWidthScale = float(").concat(h,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(").concat(i[0],") *\n                (float(dyR) / float(").concat(c[0],"));\n\n            float sourceFracCol =\n                float(").concat(i[1],") *\n                  (float(dyC) / float(").concat(c[1],"));\n\n            int sourceNearestRow = int(min(\n                float(int(").concat(a,") - 1),\n                ").concat(n," ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(").concat(r,") - 1),\n                ").concat(n," ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const gN={kernelName:r.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a,i=new mN(s.shape,r.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class yN{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));if(this.outputShape=e,1===n)return void(this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(".concat(e[0]," - coord - 1));\n        }\n      "));const a=e.map((n,a)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - coords[").concat(n,"] - 1"):"coords[".concat(n,"]"))(a)).join(","),r=eb(n);this.userCode="\n      void main() {\n        ".concat(r," coords = getOutputCoords();\n        setOutput(getX(").concat(a,"));\n      }\n    ")}}class bN{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));this.outputShape=e;const a=kv("rc",n),r="".concat(a[n-1]," + 1 < ").concat(this.outputShape[n-1]),s="".concat(a[n-2]," + 1 < ").concat(this.outputShape[n-2]),o=eb(n);function i(n){const a=e.map((a,r)=>function(n,a){return-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - ").concat(a[n]," - 1"):"".concat(a[n])}(r,n)),r=a.join(","),s=a.slice(-2).join(",");return"getChannel(getX(".concat(r,"), vec2(").concat(s,"))")}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(".concat(e[0]," - rc - 1),\n            ").concat(e[0]," - rc - 1);\n          if(").concat(r,"){\n              result.g = getChannel(getX(").concat(e[0]," - (rc  + 1) - 1),\n                ").concat(e[0]," - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      "):"\n        void main() {\n          ".concat(o," rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ").concat(function(e){return i(e)}(a.slice()),";\n          if(").concat(r,"){\n            result.g = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(a.slice()),";\n          }\n          if(").concat(s,") {\n            result.b = ").concat(function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            if(").concat(r,") {\n              result.a = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            }\n          }\n          setOutput(result);\n        }\n    ")}}const vN={kernelName:r.Reverse,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{dims:o}=a,i=s.shape.length,c=r.util.parseAxisParam(o,s.shape);if(0===i)return jv({inputs:{x:s},backend:n});const l=(0,r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bN(s.shape,c):new yN(s.shape,c);return n.runWebGLProgram(l,[s],s.dtype)}};class xN{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],a=e[2];this.outputShape=e;let r="";r="number"===typeof t?"float outputValue = ".concat(t.toFixed(2),";"):"\n        vec3 fill = vec3(".concat(t.join(","),");\n        float outputValue = fill[coords[3]];"),this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ".concat(r,"\n          if(coordX >= 0 && coordX < ").concat(a," && coordY >= 0 && coordY < ").concat(n,") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const wN={kernelName:r.RotateWithOffset,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:s}=t,{radians:o,fillValue:i,center:c}=n,l=a,u=new xN(s.shape,i),[d,h]=r.backend_util.getImageCenter(c,s.shape[1],s.shape[2]),p=[[d,h,Math.sin(o),Math.cos(o)]];return l.runWebGLProgram(u,[s],s.dtype,p)}},kN=nx({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),SN={kernelName:r.Round,backendName:"webgl",kernelFunc:kN},TN=nx({opSnippet:"return inversesqrt(x);",cpuKernelImpl:nv}),NN={kernelName:r.Rsqrt,backendName:"webgl",kernelFunc:TN};class IN{constructor(e,t,n,a,r,s){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const i=eb(r.length),c=eb(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let d="";1===a?d="i":2===a&&(d="i, coords[1]");const h="getUpdates(".concat(d,")");let p="";o&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),m=t>1?"strides[j]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ").concat(e,"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ").concat(t,"; j++) {\n              int index = round(").concat(u,");\n              flattenedIndex += index * ").concat(m,";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ").concat(h,";\n              found = true;\n            }\n          }\n          setOutput(mix(").concat(f,", sum, float(found)));\n        }\n      ")}}class CN{constructor(e,t,n,a,r,s){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;const i=eb(r.length),c=eb(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let d="";1===a?d="i":2===a&&(d="i, coords[1]");const h="getUpdates(".concat(d,")");let p="";o&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),m=t>1?"strides[j]":"strides",g=t>1?"strides[j + 1]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ").concat(e,"; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ").concat(t,"; j+=2) {\n              ivec4 index = round(").concat(u,");\n              flattenedIndex += index.xz * ").concat(m,";\n              if (j + 1 < ").concat(t,") {\n                flattenedIndex += index.yw * ").concat(g,";\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ").concat(h,";\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(").concat(f,", sum, found));\n        }\n      ")}}const EN={kernelName:r.ScatterNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:s,updates:o}=t,{shape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=r.backend_util.calculateShapes(o,s,i),p=[h/u,u];if(0===h)return n.makeTensorInfo(i,s.dtype);const f=hx({inputs:{x:s},backend:n,attrs:{shape:[l,c]}}),m=hx({inputs:{x:o},backend:n,attrs:{shape:[l,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));let y;y=(0,r.env)().getBool("WEBGL_PACK")?new CN(l,c,f.shape.length,m.shape.length,d,p):new IN(l,c,f.shape.length,m.shape.length,d,p);const b=n.runWebGLProgram(y,[m,f,g],m.dtype),v=hx({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),v}};class AN{constructor(e,t,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s="for (int i = 0; i < ".concat(Math.ceil(Math.log2(t+1)),"; ++i) { if (left >= right) break;"),o=2===(0,r.env)().getNumber("WEBGL_VERSION")?"while (left < right) {":s,i="left"===a?"<":"<=";this.userCode="\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ".concat(o,"\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ").concat(i," value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     ")}}const _N={kernelName:r.SearchSorted,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:o}=a,i=new AN(r.shape[0],r.shape[1],s.shape[1],o),c=[[r.shape[1]]];return n.runWebGLProgram(i,[r,s],"int32",c)}};class RN{constructor(e,t,n){let a,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error("Where for rank ".concat(n," is not yet supported"));if(1===n)r="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[];for(let a=0;a<t.length;a++)o.push("".concat(n[a])),a<e&&s.push("".concat(n[a]));a=s.join(),r=o.join()}const s=eb(n);this.userCode="\n      void main() {\n        ".concat(s," resRC = getOutputCoords();\n        float cVal = getC(").concat(a,");\n        if (cVal >= 1.0) {\n          setOutput(getA(").concat(r,"));\n        } else {\n          setOutput(getB(").concat(r,"));\n        }\n      }\n    ")}}const FN={kernelName:r.Select,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:s,e:o}=t,i=new RN(a.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[a,s,o],(0,r.upcastType)(s.dtype,o.dtype))}},DN=nx({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ".concat(r.backend_util.SELU_SCALEALPHA,";\n  float scale = ").concat(r.backend_util.SELU_SCALE,";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n")}),ON={kernelName:r.Selu,backendName:"webgl",kernelFunc:DN},MN=nx({opSnippet:tx+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:rv}),zN={kernelName:r.Sigmoid,backendName:"webgl",kernelFunc:MN},LN=nx({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),PN={kernelName:r.Sign,backendName:"webgl",kernelFunc:LN},BN=nx({opSnippet:tx+"\n  return sin(x);\n",packedOpSnippet:"\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(Gv,"\n  return result;\n")}),WN={kernelName:r.Sin,backendName:"webgl",kernelFunc:BN},VN=nx({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),UN={kernelName:r.Sinh,backendName:"webgl",kernelFunc:VN},GN=nx({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),HN={kernelName:r.Softplus,backendName:"webgl",kernelFunc:GN},jN={kernelName:r.SpaceToBatchND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:o,paddings:i}=a;r.util.assert(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const c=o.reduce((e,t)=>e*t),l=[[0,0]];l.push(...i);for(let r=1+o.length;r<s.shape.length;++r)l.push([0,0]);const u=[],d=jT({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=r.backend_util.getReshaped(d.shape,o,c,!1),p=r.backend_util.getPermuted(h.length,o.length,!1),f=r.backend_util.getReshapedPermuted(d.shape,o,c,!1),m=hx({inputs:{x:d},backend:n,attrs:{shape:h}}),g=kx({inputs:{x:m},backend:n,attrs:{perm:p}}),y=hx({inputs:{x:g},backend:n,attrs:{shape:f}});return u.push(d),u.push(m),u.push(g),u.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}};const qN={kernelName:r.SparseFillEmptyRows,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n         ".concat(s.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n         ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n         ".concat(r.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.readSync(a.dataId),c=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(o.dataId)[0],[d,h,p,f,m]=iv(i,a.shape,a.dtype,c,r.dtype,l,u);return[n.makeTensorInfo(h,a.dtype,d),n.makeTensorInfo([h[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};const YN={kernelName:r.SparseReshape,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape ".concat(r.shape));if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(s.shape));const o=Array.from(n.readSync(r.dataId)),i=n.readSync(a.dataId),c=Array.from(n.readSync(s.dataId)),[l,u,d]=cv(i,a.shape,a.dtype,o,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};const KN={kernelName:r.SparseSegmentMean,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n              ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n              ".concat(s.shape));const o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=lv(o,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const XN={kernelName:r.SparseSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n             ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n             ".concat(s.shape));const o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=lv(o,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const ZN={kernelName:r.SparseToDense,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:s,sparseValues:o,defaultValue:i}=t,{outputShape:c}=a,{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:p}=r.backend_util.calculateShapes(o,s,c),f=!1;if("string"===o.dtype){const e=n.bufferSync(s),t=n.bufferSync(o),a=r.util.decodeString(n.readSync(i.dataId)[0]),m=av(e,t,c,p,d,u,l,h,a,f);return n.makeTensorInfo(c,m.dtype,m.values)}const m=new IN(u,l,s.shape.length,o.shape.length,h,[p,1],f),g=n.runWebGLProgram(m,[o,s,i],o.dtype),y=hx({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(g),y}};const QN={kernelName:r.SplitV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{numOrSizeSplits:o,axis:i}=a,c=r.util.parseAxisParam(i,s.shape)[0],l=r.backend_util.prepareSplitSize(s,o,c),u=s.shape.length,d=new Array(u).fill(0),h=s.shape.slice();return l.map(e=>{const t=[...h];t[c]=e;const a=bw({inputs:{x:s},backend:n,attrs:{begin:d,size:t}});return d[c]+=e,a})}},$N="return sqrt(x);",JN=nx({opSnippet:$N,packedOpSnippet:$N,cpuKernelImpl:uv}),eI={kernelName:r.Sqrt,backendName:"webgl",kernelFunc:JN},tI=nx({opSnippet:"return x * x;"}),nI={kernelName:r.Square,backendName:"webgl",kernelFunc:tI},aI="return (a - b) * (a - b);",rI=ax({opSnippet:aI,packedOpSnippet:aI}),sI={kernelName:r.SquaredDifference,backendName:"webgl",kernelFunc:rI};const oI={kernelName:r.StaticRegexReplace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");const o=n.readSync(s.dataId),i=r.backend_util.fromUint8ToStringArray(o),c=dv(i,"string",a);return n.makeTensorInfo(s.shape,"string",c)}};const iI={kernelName:r.Step,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,s=_v+"\n    return x > 0.0 ? 1.0 : float(".concat(n.alpha,");\n  "),o=new Av(r.shape,s);return a.runWebGLProgram(o,[r],r.dtype)}};class cI{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,r=eb(n.length),s=eb(n.length);let o="";if(1===a)o="coords * strides + begin";else{let e=0;o=n.map((t,a)=>(e++,1===n.length?"coords * strides[".concat(a,"] + begin[").concat(a,"]"):"coords[".concat(e-1,"] * strides[").concat(a,"] + begin[").concat(a,"]"))).join(",")}this.userCode="\n      ".concat(r," begin = ").concat(r,"(").concat(e,");\n      ").concat(r," strides = ").concat(r,"(").concat(t,");\n\n      void main() {\n        ").concat(s," coords = getOutputCoords();\n        setOutput(getX(").concat(o,"));\n      }\n    ")}}const lI={kernelName:r.StridedSlice,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{begin:o,end:i,strides:c,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:v,end:x,strides:w}=r.slice_util.sliceInfo(s.shape,o,i,c,l,u,d,h,p);let k;if(g)k=hx({inputs:{x:s},backend:n,attrs:{shape:m}});else if(y||b){r.util.assert(s.shape.length>=1,()=>"Input must have rank at least 1, got: ".concat(s.shape.length));const e=r.slice_util.computeOutShape(v,x,w),t=bw({inputs:{x:s},backend:n,attrs:{begin:v,size:e}});k=hx({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=(0,r.buffer)(s.shape,s.dtype,e),a=hv(f,t,w,v);k=n.makeTensorInfo(m,s.dtype,a.values)}else{const e=new cI(v,w,f);k=n.runWebGLProgram(e,[s],s.dtype)}}const S=hx({inputs:{x:k},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(k),S}};const uI={kernelName:r.StringNGrams,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:d}=t,h=n.readSync(u.dataId),p=n.readSync(d.dataId),[f,m]=pv(h,p,r,s,o,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};const dI={kernelName:r.StringSplit,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: ".concat(s.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.readSync(s.dataId),c=n.readSync(o.dataId)[0],[l,u,d]=fv(i,c,r),h=u.length;return[n.makeTensorInfo([h,2],"int32",l),n.makeTensorInfo([h],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};const hI={kernelName:r.StringToHashBucketFast,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(s.dataId),i=mv(o,r);return n.makeTensorInfo(s.shape,"int32",i)}},pI=nx({opSnippet:"return tan(x);"}),fI={kernelName:r.Tan,backendName:"webgl",kernelFunc:pI},mI=nx({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),gI={kernelName:r.Tanh,backendName:"webgl",kernelFunc:mI};const yI={kernelName:r.TensorScatterUpdate,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{tensor:s,indices:o,updates:i}=t,{}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=r.backend_util.calculateShapes(i,o,s.shape),p=[h/u,u];if(0===h)return n.makeTensorInfo(s.shape,o.dtype);const f=hx({inputs:{x:o},backend:n,attrs:{shape:[l,c]}}),m=hx({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),g=hx({inputs:{x:s},backend:n,attrs:{shape:p}}),y=new IN(l,c,f.shape.length,m.shape.length,d,p,!1,!0),b=n.runWebGLProgram(y,[m,f,g],g.dtype),v=hx({inputs:{x:b},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(b),v}};class bI{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const a=eb(this.rank),r=function(e){const t=e.length;if(t>5)throw Error("Tile for rank ".concat(t," is not yet supported"));if(1===t)return"imod(resRC, ".concat(e[0],")");const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let r=0;r<e.length;r++)a.push("imod(".concat(n[r],", ").concat(e[r],")"));return a.join()}(e);this.userCode="\n      void main() {\n        ".concat(a," resRC = getOutputCoords();\n        setOutput(getA(").concat(r,"));\n      }\n    ")}}function vI(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{reps:o}=a;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map(e=>r.util.decodeString(e)):e,a=(0,r.buffer)(s.shape,s.dtype,t),i=yv(a,o);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new bI(s.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}const xI={kernelName:r.Tile,backendName:"webgl",kernelFunc:vI};class wI{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class kI{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function SI(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function TI(e){let t=1;for(;t<e;)t*=2;return t}const NI={kernelName:r.TopK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{k:o,sorted:i}=a,c=(0,r.env)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=(0,r.env)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=s.shape,d=u[u.length-1];if(n.shouldExecuteOnCPU([s])||d<c||o>l){const e=n.readSync(s.dataId),[t,a]=bv(e,u,s.dtype,o,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===o)return u[u.length-1]=0,[n.makeTensorInfo(u,s.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===d)return[s,nS({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),p=null!==h&&h.isPacked,f=p?n.unpackTensor(s):s,m=r.util.sizeFromShape(u)/d,g=hx({inputs:{x:f},attrs:{shape:[m,d]},backend:n});p&&SI(n,f);const y=TI(o),b=TI(d);let v=null;const x=()=>null===v?[g,g]:[g,v],w=(e,t,a)=>{const r=x(),s=new wI(a),o=[[d],[null===v?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=v;v=n.runWebGLProgram(s,r,"int32",o),SI(n,i)};for(let r=1;r<y;r*=2){const e=2*r;for(let t=r;t>=1;t/=2)w(e,t,[m,b])}for(let r=b;r>y;r/=2){const e=x(),t=new kI([m,r/2]),a=[[d],[null===v?1:0],[y]],s=v;v=n.runWebGLProgram(t,e,"int32",a),SI(n,s);const o=y/2,i=2*o;for(let n=o;n>=1;n/=2)w(i,n,v.shape)}let k=v;v=bw({inputs:{x:v},backend:n,attrs:{begin:0,size:[m,o]}}),SI(n,k);let S=wS({inputs:{x:g,indices:v},backend:n,attrs:{axis:1,batchDims:1}});SI(n,g);const T=u.slice(0,-1);T.push(o),k=v,v=hx({inputs:{x:v},attrs:{shape:T},backend:n}),SI(n,k);const N=S;return S=hx({inputs:{x:S},attrs:{shape:T},backend:n}),SI(n,N),[S,v]}};class II{constructor(e,t,n,a,r,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const o="nearest"===n?1:2;let i;switch(a){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode="\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(".concat(i," == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ").concat(e," && 0 <= coordX && coordX < ").concat(t,") {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(").concat(r,");\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(").concat(r,");\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(").concat(t,"));\n                float mapY = mapCoord(inY, float(").concat(e,"));\n\n                if (").concat(o," == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        ")}}const CI={kernelName:r.Transform,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:c,outputShape:l}=a,[u,d,h,p]=r.shape,[f,m]=null!=l?l:[d,h],g=new II(d,h,o,i,c,[u,f,m,p]);return n.runWebGLProgram(g,[r,s],"float32")}};const EI={kernelName:r.Unique,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;zy(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=a.readSync(s.dataId),{outputValues:i,outputShape:c,indices:l}=xv(o,r,s.shape,s.dtype);return[a.makeTensorInfo(c,s.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const AI={kernelName:r.Unpack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const o=r,i=o.shape.length,c=r.shape[s],l=new Array(i-1);let u=0;for(let m=0;m<i;m++)m!==s&&(l[u++]=o.shape[m]);const d=[],h=new Array(i).fill(0),p=o.shape.slice();p[s]=1;const f=new Array(c);for(let m=0;m<f.length;m++){h[s]=m;const e=bw({inputs:{x:o},backend:n,attrs:{begin:h,size:p}}),t=hx({inputs:{x:e},backend:n,attrs:{shape:l}});f[m]=t,d.push(e)}return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}};class _I{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,a=e.batchSize,r=e.inSize,s=e.numSegments,o=s*Math.ceil(r/n);this.outputShape=[a,o];const i=4*Math.floor(n/4),c=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let u="";r%n>0&&(u="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      "));let d="";r%n>0&&(d="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return -1.0;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat("0.0",";\n\n      float getValue(int batch, int inIdx) {\n        ").concat(u,"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ").concat(d,"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ").concat(s,")) * float(").concat(n,"));\n        int currentSeg = int(mod(float(outIdx), float(").concat(s,")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ").concat(l,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ").concat(l,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ").concat(l,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ").concat(l,"\n        }\n        setOutput(").concat("sumValue",");\n      }\n    ")}}const RI={kernelName:r.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,segmentIds:o}=t,{numSegments:i}=a,c=s.shape.length,l=[];let u=0;const d=r.backend_util.getAxesPermutation([u],c);let h=s;null!=d&&(h=kx({inputs:{x:s},backend:n,attrs:{perm:d}}),l.push(h),u=r.backend_util.getInnerMostAxes(1,c)[0]);const p=r.backend_util.segment_util.computeOutShape(h.shape,u,i),f=r.util.sizeFromShape([h.shape[u]]),m=hx({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}});l.push(m);const g=(0,r.sumOutType)(s.dtype),y=(e,t,a,s,o)=>{const i=e.shape[0],c=e.shape[1],u=r.backend_util.segment_util.segOpComputeOptimalWindowSize(c,o),d=new _I({windowSize:u,inSize:c,batchSize:i,numSegments:o},t),h=n.compileAndRun(d,[e,a],s);if(l.push(h),h.shape[1]===o)return h;const p=JT({backend:n,attrs:{start:0,stop:o,step:1,dtype:"float32"}}),f=vI({inputs:{x:p},backend:n,attrs:{reps:[c/u]}});l.push(p),l.push(f);return y(h,t,f,s,o)},b=hx({inputs:{x:y(m,"unsortedSegmentSum",o,g,i)},backend:n,attrs:{shape:p}});let v=b;if(null!=d){l.push(b);const e=r.backend_util.getUndoAxesPermutation(d);v=kx({inputs:{x:v},backend:n,attrs:{perm:e}})}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),v}},FI=[Nx,Cx,Ax,Rx,Ox,Lx,Px,Bx,jx,qx,Kx,Zx,$x,ew,nw,sw,ow,lw,uw,dw,fw,xw,ww,kw,Sw,Ew,Rw,Ow,Kv,Lw,jw,Jw,rk,ok,ik,ck,lk,dk,pk,mk,wk,kk,Sk,Nk,Ek,Rk,Fk,Ok,zk,Lk,Bk,Wk,Uk,Hk,qk,Kk,Qk,eS,aS,sS,cS,uS,pS,gS,yS,vS,kS,TS,IS,qv,CS,Uw,AS,RS,DS,Qv,MS,LS,PS,WS,US,HS,qS,KS,QS,JS,tT,aT,rT,sT,cT,lT,uT,dT,hT,fT,yT,vT,ET,dx,_T,FT,OT,zT,Nw,PT,VT,UT,qT,KT,ex,XT,ZT,QT,$T,eN,Cw,kT,nN,rN,oN,px,lN,dN,fN,gN,vN,wN,SN,NN,EN,_N,FN,ON,zN,PN,WN,UN,vw,CT,HN,jN,qN,YN,KN,XN,ZN,QN,eI,nI,sI,oI,iI,lI,uI,dI,hI,NT,wx,fI,gI,yI,xI,NI,CI,Sx,EI,AI,RI,WT];for(const n of FI)(0,r.registerKernel)(n);r.version_core,Ul.version_converter;var DI=n(3915),OI=n(579);function MI(){const[e,n]=(0,t.useState)("environment"),a=(0,t.useRef)(null),s=(0,t.useRef)(null),[o,i]=(0,t.useState)([]),[c,l]=(0,t.useState)(null),u=()=>(0,OI.jsxs)("div",{className:"absolute top-2 right-2 z-20 flex space-x-2",children:[(0,OI.jsx)("button",{onClick:()=>n("user"),className:"px-2 py-1 rounded ".concat("user"===e?"bg-white text-black":"bg-gray-700 text-white"),children:"Front"}),(0,OI.jsx)("button",{onClick:()=>n("environment"),className:"px-2 py-1 rounded ".concat("environment"===e?"bg-white text-black":"bg-gray-700 text-white"),children:"R\xfcck"})]});return(0,t.useEffect)(()=>{!async function(){await r.setBackend("webgl"),await r.ready();const e=await DI.load();l(e)}()},[]),(0,t.useEffect)(()=>{!async function(){if(a.current)try{const t=(await navigator.mediaDevices.enumerateDevices()).filter(e=>"videoinput"===e.kind);let n;if(t.length>1){const a=t.find(e=>e.label.toLowerCase().includes("back")),r=t.find(e=>e.label.toLowerCase().includes("front"));"environment"===e&&a?n=a.deviceId:"user"===e&&r&&(n=r.deviceId)}const r=n?{video:{deviceId:{exact:n}}}:{video:{facingMode:e}},s=await navigator.mediaDevices.getUserMedia(r);a.current.srcObject=s,await a.current.play()}catch(t){console.error("Error accessing webcam:",t)}}()},[e]),(0,t.useEffect)(()=>{if(!c||!a.current||!s.current)return;const e=setInterval(async()=>{const e=a.current;if(e.readyState<HTMLMediaElement.HAVE_CURRENT_DATA)return;const{width:t,height:n}=e.getBoundingClientRect(),{videoWidth:r,videoHeight:s}=e;if(0===r||0===s)return;const o=(await c.detect(e)).map(e=>{const[a,o,i,c]=e.bbox;return{class:e.class,score:e.score,bbox:[a/r*t,o/s*n,i/r*t,c/s*n]}});i(o)},100);return()=>clearInterval(e)},[c]),(0,OI.jsxs)("div",{ref:s,className:"relative w-full h-screen overflow-hidden bg-black",children:[(0,OI.jsx)(u,{}),(0,OI.jsx)("video",{ref:a,className:"absolute inset-0 m-auto w-full h-full object-contain",playsInline:!0,muted:!0}),o.map((e,t)=>{const[n,a,r,s]=e.bbox;return(0,OI.jsx)("div",{className:"absolute border-2 border-green-500",style:{left:n,top:a,width:r,height:s},children:(0,OI.jsxs)("span",{className:"absolute -top-6 left-0 bg-green-500 text-white text-xs px-1",children:[e.class," ",(100*e.score).toFixed(1),"%"]})},t)})]})}const zI=function(){return(0,OI.jsx)("div",{className:"w-full h-full bg-[#1c2127] flex flex-col items-center justify-center text-white",children:(0,OI.jsx)(MI,{})})},LI=e=>{e&&e instanceof Function&&n.e(453).then(n.bind(n,6453)).then(t=>{let{getCLS:n,getFID:a,getFCP:r,getLCP:s,getTTFB:o}=t;n(e),a(e),r(e),s(e),o(e)})};a.createRoot(document.getElementById("root")).render((0,OI.jsx)(t.StrictMode,{children:(0,OI.jsx)(zI,{})})),LI()})()})();
//# sourceMappingURL=main.b756038b.js.map